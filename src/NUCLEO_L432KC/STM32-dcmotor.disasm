
NUCLEO_L432KC/STM32-dcmotor.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08006619


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 c0 00 20 19 66 00 08 51 66 00 08 51 66 00 08     ... .f..Qf..Qf..
 8000010:	51 66 00 08 51 66 00 08 51 66 00 08 00 00 00 00     Qf..Qf..Qf......
	...
 800002c:	dd 64 00 08 51 66 00 08 00 00 00 00 83 65 00 08     .d..Qf.......e..
 800003c:	e3 65 00 08 51 66 00 08 51 66 00 08 51 66 00 08     .e..Qf..Qf..Qf..
 800004c:	51 66 00 08 51 66 00 08 51 66 00 08 51 66 00 08     Qf..Qf..Qf..Qf..
 800005c:	51 66 00 08 51 66 00 08 51 66 00 08 51 66 00 08     Qf..Qf..Qf..Qf..
 800006c:	51 66 00 08 51 66 00 08 51 66 00 08 51 66 00 08     Qf..Qf..Qf..Qf..
 800007c:	51 66 00 08 51 66 00 08 51 66 00 08 51 66 00 08     Qf..Qf..Qf..Qf..
 800008c:	2d 3d 00 08 31 3d 00 08 51 66 00 08 2d 3c 00 08     -=..1=..Qf..-<..
 800009c:	51 66 00 08 51 66 00 08 51 66 00 08 51 66 00 08     Qf..Qf..Qf..Qf..
 80000ac:	51 66 00 08 51 66 00 08 00 00 00 00 00 00 00 00     Qf..Qf..........
 80000bc:	51 66 00 08 51 66 00 08 00 00 00 00 00 00 00 00     Qf..Qf..........
 80000cc:	51 66 00 08 00 00 00 00 51 66 00 08 51 66 00 08     Qf......Qf..Qf..
 80000dc:	00 00 00 00 51 66 00 08 51 66 00 08 00 00 00 00     ....Qf..Qf......
	...
 800010c:	51 66 00 08 00 00 00 00 00 00 00 00 51 66 00 08     Qf..........Qf..
 800011c:	51 66 00 08 51 66 00 08 51 66 00 08 51 66 00 08     Qf..Qf..Qf..Qf..
 800012c:	51 66 00 08 51 66 00 08 00 00 00 00 00 00 00 00     Qf..Qf..........
 800013c:	00 00 00 00 51 66 00 08 51 66 00 08 51 66 00 08     ....Qf..Qf..Qf..
 800014c:	51 66 00 08 51 66 00 08 51 66 00 08 51 66 00 08     Qf..Qf..Qf..Qf..
 800015c:	51 66 00 08 51 66 00 08 51 66 00 08 51 66 00 08     Qf..Qf..Qf..Qf..
 800016c:	00 00 00 00 51 66 00 08 51 66 00 08 00 00 00 00     ....Qf..Qf......
 800017c:	00 00 00 00 51 66 00 08 51 66 00 08 51 66 00 08     ....Qf..Qf..Qf..

0800018c <__do_global_dtors_aux>:
 800018c:	b510      	push	{r4, lr}
 800018e:	4c05      	ldr	r4, [pc, #20]	; (80001a4 <__do_global_dtors_aux+0x18>)
 8000190:	7823      	ldrb	r3, [r4, #0]
 8000192:	b933      	cbnz	r3, 80001a2 <__do_global_dtors_aux+0x16>
 8000194:	4b04      	ldr	r3, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x1c>)
 8000196:	b113      	cbz	r3, 800019e <__do_global_dtors_aux+0x12>
 8000198:	4804      	ldr	r0, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x20>)
 800019a:	f3af 8000 	nop.w
 800019e:	2301      	movs	r3, #1
 80001a0:	7023      	strb	r3, [r4, #0]
 80001a2:	bd10      	pop	{r4, pc}
 80001a4:	200000a8 	.word	0x200000a8
 80001a8:	00000000 	.word	0x00000000
 80001ac:	0800891c 	.word	0x0800891c

080001b0 <frame_dummy>:
 80001b0:	4b0c      	ldr	r3, [pc, #48]	; (80001e4 <frame_dummy+0x34>)
 80001b2:	b143      	cbz	r3, 80001c6 <frame_dummy+0x16>
 80001b4:	480c      	ldr	r0, [pc, #48]	; (80001e8 <frame_dummy+0x38>)
 80001b6:	490d      	ldr	r1, [pc, #52]	; (80001ec <frame_dummy+0x3c>)
 80001b8:	b510      	push	{r4, lr}
 80001ba:	f3af 8000 	nop.w
 80001be:	480c      	ldr	r0, [pc, #48]	; (80001f0 <frame_dummy+0x40>)
 80001c0:	6803      	ldr	r3, [r0, #0]
 80001c2:	b923      	cbnz	r3, 80001ce <frame_dummy+0x1e>
 80001c4:	bd10      	pop	{r4, pc}
 80001c6:	480a      	ldr	r0, [pc, #40]	; (80001f0 <frame_dummy+0x40>)
 80001c8:	6803      	ldr	r3, [r0, #0]
 80001ca:	b933      	cbnz	r3, 80001da <frame_dummy+0x2a>
 80001cc:	4770      	bx	lr
 80001ce:	4b09      	ldr	r3, [pc, #36]	; (80001f4 <frame_dummy+0x44>)
 80001d0:	2b00      	cmp	r3, #0
 80001d2:	d0f7      	beq.n	80001c4 <frame_dummy+0x14>
 80001d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001d8:	4718      	bx	r3
 80001da:	4b06      	ldr	r3, [pc, #24]	; (80001f4 <frame_dummy+0x44>)
 80001dc:	2b00      	cmp	r3, #0
 80001de:	d0f5      	beq.n	80001cc <frame_dummy+0x1c>
 80001e0:	4718      	bx	r3
 80001e2:	bf00      	nop
 80001e4:	00000000 	.word	0x00000000
 80001e8:	0800891c 	.word	0x0800891c
 80001ec:	200000ac 	.word	0x200000ac
 80001f0:	200000a4 	.word	0x200000a4
 80001f4:	00000000 	.word	0x00000000

080001f8 <std_msgs::Time::serialize(unsigned char*) const>:
 80001f8:	6843      	ldr	r3, [r0, #4]
 80001fa:	700b      	strb	r3, [r1, #0]
 80001fc:	6843      	ldr	r3, [r0, #4]
 80001fe:	0a1b      	lsrs	r3, r3, #8
 8000200:	704b      	strb	r3, [r1, #1]
 8000202:	88c3      	ldrh	r3, [r0, #6]
 8000204:	708b      	strb	r3, [r1, #2]
 8000206:	79c3      	ldrb	r3, [r0, #7]
 8000208:	70cb      	strb	r3, [r1, #3]
 800020a:	6883      	ldr	r3, [r0, #8]
 800020c:	710b      	strb	r3, [r1, #4]
 800020e:	6883      	ldr	r3, [r0, #8]
 8000210:	0a1b      	lsrs	r3, r3, #8
 8000212:	714b      	strb	r3, [r1, #5]
 8000214:	8943      	ldrh	r3, [r0, #10]
 8000216:	718b      	strb	r3, [r1, #6]
 8000218:	7ac3      	ldrb	r3, [r0, #11]
 800021a:	71cb      	strb	r3, [r1, #7]
 800021c:	2008      	movs	r0, #8
 800021e:	4770      	bx	lr

08000220 <std_msgs::Time::deserialize(unsigned char*)>:
 8000220:	780b      	ldrb	r3, [r1, #0]
 8000222:	6043      	str	r3, [r0, #4]
 8000224:	784a      	ldrb	r2, [r1, #1]
 8000226:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800022a:	6043      	str	r3, [r0, #4]
 800022c:	788a      	ldrb	r2, [r1, #2]
 800022e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000232:	6043      	str	r3, [r0, #4]
 8000234:	78ca      	ldrb	r2, [r1, #3]
 8000236:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800023a:	6043      	str	r3, [r0, #4]
 800023c:	790b      	ldrb	r3, [r1, #4]
 800023e:	6083      	str	r3, [r0, #8]
 8000240:	794a      	ldrb	r2, [r1, #5]
 8000242:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000246:	6083      	str	r3, [r0, #8]
 8000248:	798a      	ldrb	r2, [r1, #6]
 800024a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800024e:	6083      	str	r3, [r0, #8]
 8000250:	79ca      	ldrb	r2, [r1, #7]
 8000252:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000256:	6083      	str	r3, [r0, #8]
 8000258:	2008      	movs	r0, #8
 800025a:	4770      	bx	lr

0800025c <std_msgs::Time::getType()>:
 800025c:	4800      	ldr	r0, [pc, #0]	; (8000260 <std_msgs::Time::getType()+0x4>)
 800025e:	4770      	bx	lr
 8000260:	08008231 	.word	0x08008231

08000264 <std_msgs::Time::getMD5()>:
 8000264:	4800      	ldr	r0, [pc, #0]	; (8000268 <std_msgs::Time::getMD5()+0x4>)
 8000266:	4770      	bx	lr
 8000268:	08008210 	.word	0x08008210

0800026c <rosserial_msgs::TopicInfo::getType()>:
 800026c:	4800      	ldr	r0, [pc, #0]	; (8000270 <rosserial_msgs::TopicInfo::getType()+0x4>)
 800026e:	4770      	bx	lr
 8000270:	080081a2 	.word	0x080081a2

08000274 <rosserial_msgs::TopicInfo::getMD5()>:
 8000274:	4800      	ldr	r0, [pc, #0]	; (8000278 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 8000276:	4770      	bx	lr
 8000278:	08008181 	.word	0x08008181

0800027c <rosserial_msgs::Log::getType()>:
 800027c:	4800      	ldr	r0, [pc, #0]	; (8000280 <rosserial_msgs::Log::getType()+0x4>)
 800027e:	4770      	bx	lr
 8000280:	0800816e 	.word	0x0800816e

08000284 <rosserial_msgs::Log::getMD5()>:
 8000284:	4800      	ldr	r0, [pc, #0]	; (8000288 <rosserial_msgs::Log::getMD5()+0x4>)
 8000286:	4770      	bx	lr
 8000288:	0800814d 	.word	0x0800814d

0800028c <rosserial_msgs::RequestParamResponse::getType()>:
 800028c:	4800      	ldr	r0, [pc, #0]	; (8000290 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 800028e:	4770      	bx	lr
 8000290:	080081bb 	.word	0x080081bb

08000294 <rosserial_msgs::RequestParamResponse::getMD5()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	0800812c 	.word	0x0800812c

0800029c <measure_rotspeed()>:
 800029c:	4770      	bx	lr

0800029e <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 800029e:	6803      	ldr	r3, [r0, #0]
 80002a0:	4718      	bx	r3

080002a2 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 80002a2:	b108      	cbz	r0, 80002a8 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 80002a4:	680b      	ldr	r3, [r1, #0]
 80002a6:	6003      	str	r3, [r0, #0]
 80002a8:	4770      	bx	lr

080002aa <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 80002aa:	4770      	bx	lr

080002ac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80002ac:	f890 0578 	ldrb.w	r0, [r0, #1400]	; 0x578
 80002b0:	4770      	bx	lr
	...

080002b4 <controlticker()>:
 80002b4:	2101      	movs	r1, #1
 80002b6:	4801      	ldr	r0, [pc, #4]	; (80002bc <controlticker()+0x8>)
 80002b8:	f006 b812 	b.w	80062e0 <rtos::Thread::signal_set(long)>
 80002bc:	20000de8 	.word	0x20000de8

080002c0 <driveISR()>:
 80002c0:	b510      	push	{r4, lr}
 80002c2:	4c10      	ldr	r4, [pc, #64]	; (8000304 <driveISR()+0x44>)
 80002c4:	7823      	ldrb	r3, [r4, #0]
 80002c6:	3301      	adds	r3, #1
 80002c8:	b2db      	uxtb	r3, r3
 80002ca:	2b0c      	cmp	r3, #12
 80002cc:	7023      	strb	r3, [r4, #0]
 80002ce:	d10f      	bne.n	80002f0 <driveISR()+0x30>
 80002d0:	480d      	ldr	r0, [pc, #52]	; (8000308 <driveISR()+0x48>)
 80002d2:	f005 fddb 	bl	8005e8c <mbed::Timer::stop()>
 80002d6:	2300      	movs	r3, #0
 80002d8:	480b      	ldr	r0, [pc, #44]	; (8000308 <driveISR()+0x48>)
 80002da:	7023      	strb	r3, [r4, #0]
 80002dc:	f005 fde6 	bl	8005eac <mbed::Timer::read_us()>
 80002e0:	4b0a      	ldr	r3, [pc, #40]	; (800030c <driveISR()+0x4c>)
 80002e2:	6018      	str	r0, [r3, #0]
 80002e4:	4808      	ldr	r0, [pc, #32]	; (8000308 <driveISR()+0x48>)
 80002e6:	f005 fdf6 	bl	8005ed6 <mbed::Timer::reset()>
 80002ea:	4807      	ldr	r0, [pc, #28]	; (8000308 <driveISR()+0x48>)
 80002ec:	f005 fdaf 	bl	8005e4e <mbed::Timer::start()>
 80002f0:	4b07      	ldr	r3, [pc, #28]	; (8000310 <driveISR()+0x50>)
 80002f2:	781a      	ldrb	r2, [r3, #0]
 80002f4:	2a01      	cmp	r2, #1
 80002f6:	d104      	bne.n	8000302 <driveISR()+0x42>
 80002f8:	4a06      	ldr	r2, [pc, #24]	; (8000314 <driveISR()+0x54>)
 80002fa:	4907      	ldr	r1, [pc, #28]	; (8000318 <driveISR()+0x58>)
 80002fc:	6011      	str	r1, [r2, #0]
 80002fe:	2200      	movs	r2, #0
 8000300:	701a      	strb	r2, [r3, #0]
 8000302:	bd10      	pop	{r4, pc}
 8000304:	20000784 	.word	0x20000784
 8000308:	2000078c 	.word	0x2000078c
 800030c:	2000017c 	.word	0x2000017c
 8000310:	20000004 	.word	0x20000004
 8000314:	20000de4 	.word	0x20000de4
 8000318:	437a0000 	.word	0x437a0000

0800031c <motorOut()>:
 800031c:	4b16      	ldr	r3, [pc, #88]	; (8000378 <motorOut()+0x5c>)
 800031e:	681a      	ldr	r2, [r3, #0]
 8000320:	2a01      	cmp	r2, #1
 8000322:	b510      	push	{r4, lr}
 8000324:	d00a      	beq.n	800033c <motorOut()+0x20>
 8000326:	d302      	bcc.n	800032e <motorOut()+0x12>
 8000328:	2a02      	cmp	r2, #2
 800032a:	d019      	beq.n	8000360 <motorOut()+0x44>
 800032c:	bd10      	pop	{r4, pc}
 800032e:	4b13      	ldr	r3, [pc, #76]	; (800037c <motorOut()+0x60>)
 8000330:	68da      	ldr	r2, [r3, #12]
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	6013      	str	r3, [r2, #0]
 8000336:	4b12      	ldr	r3, [pc, #72]	; (8000380 <motorOut()+0x64>)
 8000338:	68da      	ldr	r2, [r3, #12]
 800033a:	e00e      	b.n	800035a <motorOut()+0x3e>
 800033c:	685c      	ldr	r4, [r3, #4]
 800033e:	f001 fc89 	bl	8001c54 <core_util_critical_section_enter>
 8000342:	4621      	mov	r1, r4
 8000344:	480f      	ldr	r0, [pc, #60]	; (8000384 <motorOut()+0x68>)
 8000346:	f003 feb5 	bl	80040b4 <pwmout_pulsewidth_us>
 800034a:	f001 fc99 	bl	8001c80 <core_util_critical_section_exit>
 800034e:	4b0b      	ldr	r3, [pc, #44]	; (800037c <motorOut()+0x60>)
 8000350:	68da      	ldr	r2, [r3, #12]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	6013      	str	r3, [r2, #0]
 8000356:	4b0a      	ldr	r3, [pc, #40]	; (8000380 <motorOut()+0x64>)
 8000358:	689a      	ldr	r2, [r3, #8]
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	6013      	str	r3, [r2, #0]
 800035e:	bd10      	pop	{r4, pc}
 8000360:	685c      	ldr	r4, [r3, #4]
 8000362:	f001 fc77 	bl	8001c54 <core_util_critical_section_enter>
 8000366:	4621      	mov	r1, r4
 8000368:	4806      	ldr	r0, [pc, #24]	; (8000384 <motorOut()+0x68>)
 800036a:	f003 fea3 	bl	80040b4 <pwmout_pulsewidth_us>
 800036e:	f001 fc87 	bl	8001c80 <core_util_critical_section_exit>
 8000372:	4b02      	ldr	r3, [pc, #8]	; (800037c <motorOut()+0x60>)
 8000374:	689a      	ldr	r2, [r3, #8]
 8000376:	e7dc      	b.n	8000332 <motorOut()+0x16>
 8000378:	200001c0 	.word	0x200001c0
 800037c:	20000184 	.word	0x20000184
 8000380:	200001a0 	.word	0x200001a0
 8000384:	20000164 	.word	0x20000164

08000388 <PID_output()>:
 8000388:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800038c:	4b5a      	ldr	r3, [pc, #360]	; (80004f8 <PID_output()+0x170>)
 800038e:	4c5b      	ldr	r4, [pc, #364]	; (80004fc <PID_output()+0x174>)
 8000390:	ed2d 8b04 	vpush	{d8-d9}
 8000394:	ed93 8a00 	vldr	s16, [r3]
 8000398:	4b59      	ldr	r3, [pc, #356]	; (8000500 <PID_output()+0x178>)
 800039a:	6818      	ldr	r0, [r3, #0]
 800039c:	f006 fa9c 	bl	80068d8 <__aeabi_ui2d>
 80003a0:	a351      	add	r3, pc, #324	; (adr r3, 80004e8 <PID_output()+0x160>)
 80003a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80003a6:	f006 fb0d 	bl	80069c4 <__aeabi_dmul>
 80003aa:	4602      	mov	r2, r0
 80003ac:	460b      	mov	r3, r1
 80003ae:	2000      	movs	r0, #0
 80003b0:	4954      	ldr	r1, [pc, #336]	; (8000504 <PID_output()+0x17c>)
 80003b2:	f006 fc31 	bl	8006c18 <__aeabi_ddiv>
 80003b6:	f006 fdbf 	bl	8006f38 <__aeabi_d2f>
 80003ba:	ee07 0a90 	vmov	s15, r0
 80003be:	4a52      	ldr	r2, [pc, #328]	; (8000508 <PID_output()+0x180>)
 80003c0:	ed94 7a00 	vldr	s14, [r4]
 80003c4:	4851      	ldr	r0, [pc, #324]	; (800050c <PID_output()+0x184>)
 80003c6:	4b52      	ldr	r3, [pc, #328]	; (8000510 <PID_output()+0x188>)
 80003c8:	ee78 7a67 	vsub.f32	s15, s16, s15
 80003cc:	edc2 7a00 	vstr	s15, [r2]
 80003d0:	edd2 7a00 	vldr	s15, [r2]
 80003d4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80003d8:	edc0 7a00 	vstr	s15, [r0]
 80003dc:	edd2 7a00 	vldr	s15, [r2]
 80003e0:	6819      	ldr	r1, [r3, #0]
 80003e2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80003e6:	ee17 5a90 	vmov	r5, s15
 80003ea:	440d      	add	r5, r1
 80003ec:	601d      	str	r5, [r3, #0]
 80003ee:	6819      	ldr	r1, [r3, #0]
 80003f0:	f511 7f7a 	cmn.w	r1, #1000	; 0x3e8
 80003f4:	bf3c      	itt	cc
 80003f6:	4947      	ldrcc	r1, [pc, #284]	; (8000514 <PID_output()+0x18c>)
 80003f8:	6019      	strcc	r1, [r3, #0]
 80003fa:	6819      	ldr	r1, [r3, #0]
 80003fc:	f5b1 7f7a 	cmp.w	r1, #1000	; 0x3e8
 8000400:	bf84      	itt	hi
 8000402:	f44f 717a 	movhi.w	r1, #1000	; 0x3e8
 8000406:	6019      	strhi	r1, [r3, #0]
 8000408:	6811      	ldr	r1, [r2, #0]
 800040a:	ed92 7a00 	vldr	s14, [r2]
 800040e:	4a42      	ldr	r2, [pc, #264]	; (8000518 <PID_output()+0x190>)
 8000410:	6021      	str	r1, [r4, #0]
 8000412:	edd2 7a00 	vldr	s15, [r2]
 8000416:	4a41      	ldr	r2, [pc, #260]	; (800051c <PID_output()+0x194>)
 8000418:	ed90 9a00 	vldr	s18, [r0]
 800041c:	edd2 8a00 	vldr	s17, [r2]
 8000420:	681d      	ldr	r5, [r3, #0]
 8000422:	4b3f      	ldr	r3, [pc, #252]	; (8000520 <PID_output()+0x198>)
 8000424:	4c3f      	ldr	r4, [pc, #252]	; (8000524 <PID_output()+0x19c>)
 8000426:	ed93 8a00 	vldr	s16, [r3]
 800042a:	f8d4 8000 	ldr.w	r8, [r4]
 800042e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000432:	ee17 0a90 	vmov	r0, s15
 8000436:	f006 fa71 	bl	800691c <__aeabi_f2d>
 800043a:	a32d      	add	r3, pc, #180	; (adr r3, 80004f0 <PID_output()+0x168>)
 800043c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000440:	f006 fac0 	bl	80069c4 <__aeabi_dmul>
 8000444:	ee69 7a28 	vmul.f32	s15, s18, s17
 8000448:	4606      	mov	r6, r0
 800044a:	ee17 0a90 	vmov	r0, s15
 800044e:	460f      	mov	r7, r1
 8000450:	f006 fa64 	bl	800691c <__aeabi_f2d>
 8000454:	a326      	add	r3, pc, #152	; (adr r3, 80004f0 <PID_output()+0x168>)
 8000456:	e9d3 2300 	ldrd	r2, r3, [r3]
 800045a:	f006 fab3 	bl	80069c4 <__aeabi_dmul>
 800045e:	4602      	mov	r2, r0
 8000460:	460b      	mov	r3, r1
 8000462:	4630      	mov	r0, r6
 8000464:	4639      	mov	r1, r7
 8000466:	f006 f8fb 	bl	8006660 <__adddf3>
 800046a:	ee07 5a90 	vmov	s15, r5
 800046e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000472:	4606      	mov	r6, r0
 8000474:	ee67 7a88 	vmul.f32	s15, s15, s16
 8000478:	460f      	mov	r7, r1
 800047a:	ee17 0a90 	vmov	r0, s15
 800047e:	f006 fa4d 	bl	800691c <__aeabi_f2d>
 8000482:	a319      	add	r3, pc, #100	; (adr r3, 80004e8 <PID_output()+0x160>)
 8000484:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000488:	f006 fa9c 	bl	80069c4 <__aeabi_dmul>
 800048c:	4602      	mov	r2, r0
 800048e:	460b      	mov	r3, r1
 8000490:	4630      	mov	r0, r6
 8000492:	4639      	mov	r1, r7
 8000494:	f006 f8e4 	bl	8006660 <__adddf3>
 8000498:	4606      	mov	r6, r0
 800049a:	4640      	mov	r0, r8
 800049c:	460f      	mov	r7, r1
 800049e:	f006 fa3d 	bl	800691c <__aeabi_f2d>
 80004a2:	460b      	mov	r3, r1
 80004a4:	4602      	mov	r2, r0
 80004a6:	4639      	mov	r1, r7
 80004a8:	4630      	mov	r0, r6
 80004aa:	f006 f8d9 	bl	8006660 <__adddf3>
 80004ae:	f006 fd43 	bl	8006f38 <__aeabi_d2f>
 80004b2:	6020      	str	r0, [r4, #0]
 80004b4:	ed94 7a00 	vldr	s14, [r4]
 80004b8:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8000528 <PID_output()+0x1a0>
 80004bc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80004c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80004c4:	bfc8      	it	gt
 80004c6:	edc4 7a00 	vstrgt	s15, [r4]
 80004ca:	edd4 7a00 	vldr	s15, [r4]
 80004ce:	ecbd 8b04 	vpop	{d8-d9}
 80004d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80004d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80004da:	bf44      	itt	mi
 80004dc:	2300      	movmi	r3, #0
 80004de:	6023      	strmi	r3, [r4, #0]
 80004e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80004e4:	f3af 8000 	nop.w
 80004e8:	a0b5ed8d 	.word	0xa0b5ed8d
 80004ec:	3eb0c6f7 	.word	0x3eb0c6f7
 80004f0:	d2f1a9fc 	.word	0xd2f1a9fc
 80004f4:	3f50624d 	.word	0x3f50624d
 80004f8:	20000de4 	.word	0x20000de4
 80004fc:	2000077c 	.word	0x2000077c
 8000500:	2000017c 	.word	0x2000017c
 8000504:	3ff00000 	.word	0x3ff00000
 8000508:	20000780 	.word	0x20000780
 800050c:	20000180 	.word	0x20000180
 8000510:	200001bc 	.word	0x200001bc
 8000514:	fffffc18 	.word	0xfffffc18
 8000518:	200007f0 	.word	0x200007f0
 800051c:	200007e8 	.word	0x200007e8
 8000520:	200007ec 	.word	0x200007ec
 8000524:	20000788 	.word	0x20000788
 8000528:	44fa0000 	.word	0x44fa0000

0800052c <motorHome()>:
 800052c:	b510      	push	{r4, lr}
 800052e:	4c0d      	ldr	r4, [pc, #52]	; (8000564 <motorHome()+0x38>)
 8000530:	f001 fb90 	bl	8001c54 <core_util_critical_section_enter>
 8000534:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8000538:	4620      	mov	r0, r4
 800053a:	f003 fcb1 	bl	8003ea0 <pwmout_period_us>
 800053e:	f001 fb9f 	bl	8001c80 <core_util_critical_section_exit>
 8000542:	f001 fb87 	bl	8001c54 <core_util_critical_section_enter>
 8000546:	f44f 61c8 	mov.w	r1, #1600	; 0x640
 800054a:	4620      	mov	r0, r4
 800054c:	f003 fdc0 	bl	80040d0 <pwmout_pulsewidth_ms>
 8000550:	f001 fb96 	bl	8001c80 <core_util_critical_section_exit>
 8000554:	4b04      	ldr	r3, [pc, #16]	; (8000568 <motorHome()+0x3c>)
 8000556:	2201      	movs	r2, #1
 8000558:	601a      	str	r2, [r3, #0]
 800055a:	4b04      	ldr	r3, [pc, #16]	; (800056c <motorHome()+0x40>)
 800055c:	4a04      	ldr	r2, [pc, #16]	; (8000570 <motorHome()+0x44>)
 800055e:	601a      	str	r2, [r3, #0]
 8000560:	bd10      	pop	{r4, pc}
 8000562:	bf00      	nop
 8000564:	20000164 	.word	0x20000164
 8000568:	20000dc4 	.word	0x20000dc4
 800056c:	20000788 	.word	0x20000788
 8000570:	44c80000 	.word	0x44c80000

08000574 <mbed::Callback<void ()>::~Callback()>:
 8000574:	68c3      	ldr	r3, [r0, #12]
 8000576:	b510      	push	{r4, lr}
 8000578:	4604      	mov	r4, r0
 800057a:	b10b      	cbz	r3, 8000580 <mbed::Callback<void ()>::~Callback()+0xc>
 800057c:	689b      	ldr	r3, [r3, #8]
 800057e:	4798      	blx	r3
 8000580:	4620      	mov	r0, r4
 8000582:	bd10      	pop	{r4, pc}

08000584 <mbed::Ticker::~Ticker()>:
 8000584:	b538      	push	{r3, r4, r5, lr}
 8000586:	4605      	mov	r5, r0
 8000588:	4b06      	ldr	r3, [pc, #24]	; (80005a4 <mbed::Ticker::~Ticker()+0x20>)
 800058a:	f845 3b18 	str.w	r3, [r5], #24
 800058e:	4604      	mov	r4, r0
 8000590:	f005 fab8 	bl	8005b04 <mbed::Ticker::detach()>
 8000594:	4628      	mov	r0, r5
 8000596:	f7ff ffed 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 800059a:	4620      	mov	r0, r4
 800059c:	f005 fcd8 	bl	8005f50 <mbed::TimerEvent::~TimerEvent()>
 80005a0:	4620      	mov	r0, r4
 80005a2:	bd38      	pop	{r3, r4, r5, pc}
 80005a4:	080087cc 	.word	0x080087cc

080005a8 <mbed::Ticker::~Ticker()>:
 80005a8:	b510      	push	{r4, lr}
 80005aa:	4604      	mov	r4, r0
 80005ac:	f7ff ffea 	bl	8000584 <mbed::Ticker::~Ticker()>
 80005b0:	4620      	mov	r0, r4
 80005b2:	f005 fe49 	bl	8006248 <operator delete(void*)>
 80005b6:	4620      	mov	r0, r4
 80005b8:	bd10      	pop	{r4, pc}
	...

080005bc <ISRHallSensor()>:
 80005bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80005be:	4f15      	ldr	r7, [pc, #84]	; (8000614 <ISRHallSensor()+0x58>)
 80005c0:	4d15      	ldr	r5, [pc, #84]	; (8000618 <ISRHallSensor()+0x5c>)
 80005c2:	4c16      	ldr	r4, [pc, #88]	; (800061c <ISRHallSensor()+0x60>)
 80005c4:	4e16      	ldr	r6, [pc, #88]	; (8000620 <ISRHallSensor()+0x64>)
 80005c6:	b085      	sub	sp, #20
 80005c8:	4669      	mov	r1, sp
 80005ca:	4638      	mov	r0, r7
 80005cc:	9500      	str	r5, [sp, #0]
 80005ce:	9403      	str	r4, [sp, #12]
 80005d0:	f005 fbe2 	bl	8005d98 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>
 80005d4:	4668      	mov	r0, sp
 80005d6:	f7ff ffcd 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 80005da:	4669      	mov	r1, sp
 80005dc:	4630      	mov	r0, r6
 80005de:	9500      	str	r5, [sp, #0]
 80005e0:	9403      	str	r4, [sp, #12]
 80005e2:	f005 fbd9 	bl	8005d98 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>
 80005e6:	4668      	mov	r0, sp
 80005e8:	f7ff ffc4 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 80005ec:	4669      	mov	r1, sp
 80005ee:	4638      	mov	r0, r7
 80005f0:	9500      	str	r5, [sp, #0]
 80005f2:	9403      	str	r4, [sp, #12]
 80005f4:	f005 fbf6 	bl	8005de4 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>
 80005f8:	4668      	mov	r0, sp
 80005fa:	f7ff ffbb 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 80005fe:	4669      	mov	r1, sp
 8000600:	4630      	mov	r0, r6
 8000602:	9500      	str	r5, [sp, #0]
 8000604:	9403      	str	r4, [sp, #12]
 8000606:	f005 fbed 	bl	8005de4 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>
 800060a:	4668      	mov	r0, sp
 800060c:	f7ff ffb2 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8000610:	b005      	add	sp, #20
 8000612:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000614:	20000114 	.word	0x20000114
 8000618:	080002c1 	.word	0x080002c1
 800061c:	08008120 	.word	0x08008120
 8000620:	200000c4 	.word	0x200000c4

08000624 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>:
 8000624:	b538      	push	{r3, r4, r5, lr}
 8000626:	68cb      	ldr	r3, [r1, #12]
 8000628:	4604      	mov	r4, r0
 800062a:	460d      	mov	r5, r1
 800062c:	b10b      	cbz	r3, 8000632 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)+0xe>
 800062e:	685b      	ldr	r3, [r3, #4]
 8000630:	4798      	blx	r3
 8000632:	68eb      	ldr	r3, [r5, #12]
 8000634:	60e3      	str	r3, [r4, #12]
 8000636:	4620      	mov	r0, r4
 8000638:	bd38      	pop	{r3, r4, r5, pc}

0800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 800063a:	4288      	cmp	r0, r1
 800063c:	b538      	push	{r3, r4, r5, lr}
 800063e:	4604      	mov	r4, r0
 8000640:	460d      	mov	r5, r1
 8000642:	d006      	beq.n	8000652 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x18>
 8000644:	f7ff ff96 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8000648:	b11c      	cbz	r4, 8000652 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x18>
 800064a:	4629      	mov	r1, r5
 800064c:	4620      	mov	r0, r4
 800064e:	f7ff ffe9 	bl	8000624 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 8000652:	4620      	mov	r0, r4
 8000654:	bd38      	pop	{r3, r4, r5, pc}
	...

08000658 <control()>:
 8000658:	b580      	push	{r7, lr}
 800065a:	4b2a      	ldr	r3, [pc, #168]	; (8000704 <control()+0xac>)
 800065c:	4a2a      	ldr	r2, [pc, #168]	; (8000708 <control()+0xb0>)
 800065e:	601a      	str	r2, [r3, #0]
 8000660:	4b2a      	ldr	r3, [pc, #168]	; (800070c <control()+0xb4>)
 8000662:	4a2b      	ldr	r2, [pc, #172]	; (8000710 <control()+0xb8>)
 8000664:	601a      	str	r2, [r3, #0]
 8000666:	4b2b      	ldr	r3, [pc, #172]	; (8000714 <control()+0xbc>)
 8000668:	4c2b      	ldr	r4, [pc, #172]	; (8000718 <control()+0xc0>)
 800066a:	4d2c      	ldr	r5, [pc, #176]	; (800071c <control()+0xc4>)
 800066c:	b088      	sub	sp, #32
 800066e:	2200      	movs	r2, #0
 8000670:	601a      	str	r2, [r3, #0]
 8000672:	f7ff ff5b 	bl	800052c <motorHome()>
 8000676:	f7ff ffa1 	bl	80005bc <ISRHallSensor()>
 800067a:	4b29      	ldr	r3, [pc, #164]	; (8000720 <control()+0xc8>)
 800067c:	9300      	str	r3, [sp, #0]
 800067e:	4669      	mov	r1, sp
 8000680:	a804      	add	r0, sp, #16
 8000682:	9403      	str	r4, [sp, #12]
 8000684:	f7ff ffce 	bl	8000624 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 8000688:	a904      	add	r1, sp, #16
 800068a:	4826      	ldr	r0, [pc, #152]	; (8000724 <control()+0xcc>)
 800068c:	f7ff ffd5 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8000690:	4925      	ldr	r1, [pc, #148]	; (8000728 <control()+0xd0>)
 8000692:	4826      	ldr	r0, [pc, #152]	; (800072c <control()+0xd4>)
 8000694:	f005 fa22 	bl	8005adc <mbed::Ticker::setup(unsigned long)>
 8000698:	a804      	add	r0, sp, #16
 800069a:	f7ff ff6b 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 800069e:	4668      	mov	r0, sp
 80006a0:	f7ff ff68 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 80006a4:	4b22      	ldr	r3, [pc, #136]	; (8000730 <control()+0xd8>)
 80006a6:	481f      	ldr	r0, [pc, #124]	; (8000724 <control()+0xcc>)
 80006a8:	9304      	str	r3, [sp, #16]
 80006aa:	a904      	add	r1, sp, #16
 80006ac:	9407      	str	r4, [sp, #28]
 80006ae:	f7ff ffc4 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80006b2:	2164      	movs	r1, #100	; 0x64
 80006b4:	481d      	ldr	r0, [pc, #116]	; (800072c <control()+0xd4>)
 80006b6:	4c1f      	ldr	r4, [pc, #124]	; (8000734 <control()+0xdc>)
 80006b8:	f005 fa10 	bl	8005adc <mbed::Ticker::setup(unsigned long)>
 80006bc:	a804      	add	r0, sp, #16
 80006be:	f7ff ff59 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 80006c2:	2600      	movs	r6, #0
 80006c4:	2700      	movs	r7, #0
 80006c6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80006ca:	2101      	movs	r1, #1
 80006cc:	a804      	add	r0, sp, #16
 80006ce:	f005 fe0a 	bl	80062e6 <rtos::Thread::signal_wait(long, unsigned long)>
 80006d2:	6820      	ldr	r0, [r4, #0]
 80006d4:	f006 f900 	bl	80068d8 <__aeabi_ui2d>
 80006d8:	4632      	mov	r2, r6
 80006da:	463b      	mov	r3, r7
 80006dc:	f006 fbda 	bl	8006e94 <__aeabi_dcmpeq>
 80006e0:	b108      	cbz	r0, 80006e6 <control()+0x8e>
 80006e2:	2301      	movs	r3, #1
 80006e4:	6023      	str	r3, [r4, #0]
 80006e6:	4b14      	ldr	r3, [pc, #80]	; (8000738 <control()+0xe0>)
 80006e8:	682a      	ldr	r2, [r5, #0]
 80006ea:	601a      	str	r2, [r3, #0]
 80006ec:	4a13      	ldr	r2, [pc, #76]	; (800073c <control()+0xe4>)
 80006ee:	edd2 7a00 	vldr	s15, [r2]
 80006f2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80006f6:	edc3 7a01 	vstr	s15, [r3, #4]
 80006fa:	f7ff fe0f 	bl	800031c <motorOut()>
 80006fe:	f7ff fe43 	bl	8000388 <PID_output()>
 8000702:	e7e0      	b.n	80006c6 <control()+0x6e>
 8000704:	200007f0 	.word	0x200007f0
 8000708:	420c0000 	.word	0x420c0000
 800070c:	200007e8 	.word	0x200007e8
 8000710:	42700000 	.word	0x42700000
 8000714:	200007ec 	.word	0x200007ec
 8000718:	08008120 	.word	0x08008120
 800071c:	20000dc4 	.word	0x20000dc4
 8000720:	0800029d 	.word	0x0800029d
 8000724:	200007b4 	.word	0x200007b4
 8000728:	000f4240 	.word	0x000f4240
 800072c:	2000079c 	.word	0x2000079c
 8000730:	080002b5 	.word	0x080002b5
 8000734:	2000017c 	.word	0x2000017c
 8000738:	200001c0 	.word	0x200001c0
 800073c:	20000788 	.word	0x20000788

08000740 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 8000740:	3801      	subs	r0, #1
 8000742:	2300      	movs	r3, #0
 8000744:	fa21 f203 	lsr.w	r2, r1, r3
 8000748:	3308      	adds	r3, #8
 800074a:	2b20      	cmp	r3, #32
 800074c:	f800 2f01 	strb.w	r2, [r0, #1]!
 8000750:	d1f8      	bne.n	8000744 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 8000752:	4770      	bx	lr

08000754 <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 8000754:	8883      	ldrh	r3, [r0, #4]
 8000756:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800075a:	700b      	strb	r3, [r1, #0]
 800075c:	8883      	ldrh	r3, [r0, #4]
 800075e:	0a1b      	lsrs	r3, r3, #8
 8000760:	704b      	strb	r3, [r1, #1]
 8000762:	4605      	mov	r5, r0
 8000764:	6880      	ldr	r0, [r0, #8]
 8000766:	460c      	mov	r4, r1
 8000768:	f007 facb 	bl	8007d02 <strlen>
 800076c:	4607      	mov	r7, r0
 800076e:	4601      	mov	r1, r0
 8000770:	1ca0      	adds	r0, r4, #2
 8000772:	f7ff ffe5 	bl	8000740 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000776:	463a      	mov	r2, r7
 8000778:	68a9      	ldr	r1, [r5, #8]
 800077a:	1da0      	adds	r0, r4, #6
 800077c:	f006 ffd0 	bl	8007720 <memcpy>
 8000780:	68e8      	ldr	r0, [r5, #12]
 8000782:	f007 fabe 	bl	8007d02 <strlen>
 8000786:	f107 0806 	add.w	r8, r7, #6
 800078a:	4606      	mov	r6, r0
 800078c:	4601      	mov	r1, r0
 800078e:	370a      	adds	r7, #10
 8000790:	eb04 0008 	add.w	r0, r4, r8
 8000794:	f7ff ffd4 	bl	8000740 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000798:	4632      	mov	r2, r6
 800079a:	68e9      	ldr	r1, [r5, #12]
 800079c:	19e0      	adds	r0, r4, r7
 800079e:	f006 ffbf 	bl	8007720 <memcpy>
 80007a2:	6928      	ldr	r0, [r5, #16]
 80007a4:	f007 faad 	bl	8007d02 <strlen>
 80007a8:	443e      	add	r6, r7
 80007aa:	4601      	mov	r1, r0
 80007ac:	4607      	mov	r7, r0
 80007ae:	19a0      	adds	r0, r4, r6
 80007b0:	3604      	adds	r6, #4
 80007b2:	f7ff ffc5 	bl	8000740 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80007b6:	463a      	mov	r2, r7
 80007b8:	19a0      	adds	r0, r4, r6
 80007ba:	6929      	ldr	r1, [r5, #16]
 80007bc:	443e      	add	r6, r7
 80007be:	f006 ffaf 	bl	8007720 <memcpy>
 80007c2:	696b      	ldr	r3, [r5, #20]
 80007c4:	55a3      	strb	r3, [r4, r6]
 80007c6:	4434      	add	r4, r6
 80007c8:	0a1a      	lsrs	r2, r3, #8
 80007ca:	7062      	strb	r2, [r4, #1]
 80007cc:	0c1a      	lsrs	r2, r3, #16
 80007ce:	0e1b      	lsrs	r3, r3, #24
 80007d0:	70a2      	strb	r2, [r4, #2]
 80007d2:	70e3      	strb	r3, [r4, #3]
 80007d4:	1d30      	adds	r0, r6, #4
 80007d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080007da <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 80007da:	6843      	ldr	r3, [r0, #4]
 80007dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007e0:	700b      	strb	r3, [r1, #0]
 80007e2:	6843      	ldr	r3, [r0, #4]
 80007e4:	0a1b      	lsrs	r3, r3, #8
 80007e6:	704b      	strb	r3, [r1, #1]
 80007e8:	88c3      	ldrh	r3, [r0, #6]
 80007ea:	708b      	strb	r3, [r1, #2]
 80007ec:	79c3      	ldrb	r3, [r0, #7]
 80007ee:	70cb      	strb	r3, [r1, #3]
 80007f0:	460d      	mov	r5, r1
 80007f2:	1d0a      	adds	r2, r1, #4
 80007f4:	4604      	mov	r4, r0
 80007f6:	2100      	movs	r1, #0
 80007f8:	6860      	ldr	r0, [r4, #4]
 80007fa:	4281      	cmp	r1, r0
 80007fc:	eba2 0305 	sub.w	r3, r2, r5
 8000800:	f102 0204 	add.w	r2, r2, #4
 8000804:	d20f      	bcs.n	8000826 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 8000806:	68e3      	ldr	r3, [r4, #12]
 8000808:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800080c:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000810:	0a18      	lsrs	r0, r3, #8
 8000812:	f802 0c03 	strb.w	r0, [r2, #-3]
 8000816:	0c18      	lsrs	r0, r3, #16
 8000818:	0e1b      	lsrs	r3, r3, #24
 800081a:	f802 0c02 	strb.w	r0, [r2, #-2]
 800081e:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000822:	3101      	adds	r1, #1
 8000824:	e7e8      	b.n	80007f8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 8000826:	6922      	ldr	r2, [r4, #16]
 8000828:	54ea      	strb	r2, [r5, r3]
 800082a:	6921      	ldr	r1, [r4, #16]
 800082c:	18ea      	adds	r2, r5, r3
 800082e:	0a09      	lsrs	r1, r1, #8
 8000830:	7051      	strb	r1, [r2, #1]
 8000832:	8a61      	ldrh	r1, [r4, #18]
 8000834:	7091      	strb	r1, [r2, #2]
 8000836:	7ce1      	ldrb	r1, [r4, #19]
 8000838:	70d1      	strb	r1, [r2, #3]
 800083a:	3304      	adds	r3, #4
 800083c:	442b      	add	r3, r5
 800083e:	2100      	movs	r1, #0
 8000840:	6922      	ldr	r2, [r4, #16]
 8000842:	4291      	cmp	r1, r2
 8000844:	eba3 0605 	sub.w	r6, r3, r5
 8000848:	f103 0304 	add.w	r3, r3, #4
 800084c:	d20f      	bcs.n	800086e <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 800084e:	69a2      	ldr	r2, [r4, #24]
 8000850:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000854:	f803 2c04 	strb.w	r2, [r3, #-4]
 8000858:	0a10      	lsrs	r0, r2, #8
 800085a:	f803 0c03 	strb.w	r0, [r3, #-3]
 800085e:	0c10      	lsrs	r0, r2, #16
 8000860:	0e12      	lsrs	r2, r2, #24
 8000862:	f803 0c02 	strb.w	r0, [r3, #-2]
 8000866:	f803 2c01 	strb.w	r2, [r3, #-1]
 800086a:	3101      	adds	r1, #1
 800086c:	e7e8      	b.n	8000840 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 800086e:	69e3      	ldr	r3, [r4, #28]
 8000870:	55ab      	strb	r3, [r5, r6]
 8000872:	69e2      	ldr	r2, [r4, #28]
 8000874:	19ab      	adds	r3, r5, r6
 8000876:	0a12      	lsrs	r2, r2, #8
 8000878:	705a      	strb	r2, [r3, #1]
 800087a:	8be2      	ldrh	r2, [r4, #30]
 800087c:	709a      	strb	r2, [r3, #2]
 800087e:	7fe2      	ldrb	r2, [r4, #31]
 8000880:	70da      	strb	r2, [r3, #3]
 8000882:	3604      	adds	r6, #4
 8000884:	2700      	movs	r7, #0
 8000886:	69e3      	ldr	r3, [r4, #28]
 8000888:	429f      	cmp	r7, r3
 800088a:	d214      	bcs.n	80008b6 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 800088c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800088e:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8000892:	f007 fa36 	bl	8007d02 <strlen>
 8000896:	4680      	mov	r8, r0
 8000898:	4601      	mov	r1, r0
 800089a:	19a8      	adds	r0, r5, r6
 800089c:	f7ff ff50 	bl	8000740 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80008a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80008a2:	3604      	adds	r6, #4
 80008a4:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80008a8:	19a8      	adds	r0, r5, r6
 80008aa:	4642      	mov	r2, r8
 80008ac:	f006 ff38 	bl	8007720 <memcpy>
 80008b0:	4446      	add	r6, r8
 80008b2:	3701      	adds	r7, #1
 80008b4:	e7e7      	b.n	8000886 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 80008b6:	4630      	mov	r0, r6
 80008b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080008bc <rosserial_msgs::Log::serialize(unsigned char*) const>:
 80008bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008be:	460e      	mov	r6, r1
 80008c0:	7903      	ldrb	r3, [r0, #4]
 80008c2:	f806 3b01 	strb.w	r3, [r6], #1
 80008c6:	4605      	mov	r5, r0
 80008c8:	6880      	ldr	r0, [r0, #8]
 80008ca:	460f      	mov	r7, r1
 80008cc:	f007 fa19 	bl	8007d02 <strlen>
 80008d0:	4604      	mov	r4, r0
 80008d2:	4601      	mov	r1, r0
 80008d4:	4630      	mov	r0, r6
 80008d6:	f7ff ff33 	bl	8000740 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80008da:	4622      	mov	r2, r4
 80008dc:	68a9      	ldr	r1, [r5, #8]
 80008de:	1d78      	adds	r0, r7, #5
 80008e0:	f006 ff1e 	bl	8007720 <memcpy>
 80008e4:	1d60      	adds	r0, r4, #5
 80008e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080008e8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 80008e8:	b510      	push	{r4, lr}
 80008ea:	2300      	movs	r3, #0
 80008ec:	6003      	str	r3, [r0, #0]
 80008ee:	3901      	subs	r1, #1
 80008f0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80008f4:	fa02 f403 	lsl.w	r4, r2, r3
 80008f8:	6802      	ldr	r2, [r0, #0]
 80008fa:	3308      	adds	r3, #8
 80008fc:	4322      	orrs	r2, r4
 80008fe:	2b20      	cmp	r3, #32
 8000900:	6002      	str	r2, [r0, #0]
 8000902:	d1f5      	bne.n	80008f0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 8000904:	bd10      	pop	{r4, pc}

08000906 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8000906:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000908:	780b      	ldrb	r3, [r1, #0]
 800090a:	8083      	strh	r3, [r0, #4]
 800090c:	784a      	ldrb	r2, [r1, #1]
 800090e:	b085      	sub	sp, #20
 8000910:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000914:	8083      	strh	r3, [r0, #4]
 8000916:	460c      	mov	r4, r1
 8000918:	4606      	mov	r6, r0
 800091a:	3102      	adds	r1, #2
 800091c:	a801      	add	r0, sp, #4
 800091e:	f7ff ffe3 	bl	80008e8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000922:	9f01      	ldr	r7, [sp, #4]
 8000924:	1da3      	adds	r3, r4, #6
 8000926:	1dbd      	adds	r5, r7, #6
 8000928:	1b1a      	subs	r2, r3, r4
 800092a:	4295      	cmp	r5, r2
 800092c:	d904      	bls.n	8000938 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 800092e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000932:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000936:	e7f7      	b.n	8000928 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 8000938:	19e3      	adds	r3, r4, r7
 800093a:	2200      	movs	r2, #0
 800093c:	715a      	strb	r2, [r3, #5]
 800093e:	1d63      	adds	r3, r4, #5
 8000940:	60b3      	str	r3, [r6, #8]
 8000942:	1961      	adds	r1, r4, r5
 8000944:	a802      	add	r0, sp, #8
 8000946:	f7ff ffcf 	bl	80008e8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800094a:	1d2b      	adds	r3, r5, #4
 800094c:	9d02      	ldr	r5, [sp, #8]
 800094e:	f107 020a 	add.w	r2, r7, #10
 8000952:	441d      	add	r5, r3
 8000954:	4422      	add	r2, r4
 8000956:	1b11      	subs	r1, r2, r4
 8000958:	428d      	cmp	r5, r1
 800095a:	d904      	bls.n	8000966 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 800095c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000960:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000964:	e7f7      	b.n	8000956 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8000966:	1961      	adds	r1, r4, r5
 8000968:	3b01      	subs	r3, #1
 800096a:	4423      	add	r3, r4
 800096c:	2200      	movs	r2, #0
 800096e:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000972:	a803      	add	r0, sp, #12
 8000974:	60f3      	str	r3, [r6, #12]
 8000976:	f7ff ffb7 	bl	80008e8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800097a:	9803      	ldr	r0, [sp, #12]
 800097c:	3504      	adds	r5, #4
 800097e:	4428      	add	r0, r5
 8000980:	1963      	adds	r3, r4, r5
 8000982:	1b1a      	subs	r2, r3, r4
 8000984:	4290      	cmp	r0, r2
 8000986:	d904      	bls.n	8000992 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 8000988:	f813 2b01 	ldrb.w	r2, [r3], #1
 800098c:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000990:	e7f7      	b.n	8000982 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000992:	1822      	adds	r2, r4, r0
 8000994:	3d01      	subs	r5, #1
 8000996:	2300      	movs	r3, #0
 8000998:	4425      	add	r5, r4
 800099a:	f802 3c01 	strb.w	r3, [r2, #-1]
 800099e:	6135      	str	r5, [r6, #16]
 80009a0:	7893      	ldrb	r3, [r2, #2]
 80009a2:	7851      	ldrb	r1, [r2, #1]
 80009a4:	78d2      	ldrb	r2, [r2, #3]
 80009a6:	041b      	lsls	r3, r3, #16
 80009a8:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80009ac:	5c21      	ldrb	r1, [r4, r0]
 80009ae:	430b      	orrs	r3, r1
 80009b0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80009b4:	3004      	adds	r0, #4
 80009b6:	6173      	str	r3, [r6, #20]
 80009b8:	b005      	add	sp, #20
 80009ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

080009bc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80009bc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80009c0:	6843      	ldr	r3, [r0, #4]
 80009c2:	680d      	ldr	r5, [r1, #0]
 80009c4:	429d      	cmp	r5, r3
 80009c6:	4604      	mov	r4, r0
 80009c8:	460e      	mov	r6, r1
 80009ca:	d904      	bls.n	80009d6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80009cc:	00a9      	lsls	r1, r5, #2
 80009ce:	68c0      	ldr	r0, [r0, #12]
 80009d0:	f007 f93c 	bl	8007c4c <realloc>
 80009d4:	60e0      	str	r0, [r4, #12]
 80009d6:	6065      	str	r5, [r4, #4]
 80009d8:	1d32      	adds	r2, r6, #4
 80009da:	2100      	movs	r1, #0
 80009dc:	6860      	ldr	r0, [r4, #4]
 80009de:	4281      	cmp	r1, r0
 80009e0:	eba2 0306 	sub.w	r3, r2, r6
 80009e4:	f102 0204 	add.w	r2, r2, #4
 80009e8:	d213      	bcs.n	8000a12 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 80009ea:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 80009ee:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 80009f2:	041b      	lsls	r3, r3, #16
 80009f4:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80009f8:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 80009fc:	4303      	orrs	r3, r0
 80009fe:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8000a02:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8000a06:	68e0      	ldr	r0, [r4, #12]
 8000a08:	60a3      	str	r3, [r4, #8]
 8000a0a:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000a0e:	3101      	adds	r1, #1
 8000a10:	e7e4      	b.n	80009dc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000a12:	18f2      	adds	r2, r6, r3
 8000a14:	5cf1      	ldrb	r1, [r6, r3]
 8000a16:	7895      	ldrb	r5, [r2, #2]
 8000a18:	7850      	ldrb	r0, [r2, #1]
 8000a1a:	78d2      	ldrb	r2, [r2, #3]
 8000a1c:	042d      	lsls	r5, r5, #16
 8000a1e:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000a22:	430d      	orrs	r5, r1
 8000a24:	1d1f      	adds	r7, r3, #4
 8000a26:	6923      	ldr	r3, [r4, #16]
 8000a28:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000a2c:	429d      	cmp	r5, r3
 8000a2e:	d904      	bls.n	8000a3a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000a30:	00a9      	lsls	r1, r5, #2
 8000a32:	69a0      	ldr	r0, [r4, #24]
 8000a34:	f007 f90a 	bl	8007c4c <realloc>
 8000a38:	61a0      	str	r0, [r4, #24]
 8000a3a:	6125      	str	r5, [r4, #16]
 8000a3c:	19f3      	adds	r3, r6, r7
 8000a3e:	2100      	movs	r1, #0
 8000a40:	6922      	ldr	r2, [r4, #16]
 8000a42:	4291      	cmp	r1, r2
 8000a44:	eba3 0506 	sub.w	r5, r3, r6
 8000a48:	f103 0304 	add.w	r3, r3, #4
 8000a4c:	d213      	bcs.n	8000a76 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000a4e:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000a52:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000a56:	0412      	lsls	r2, r2, #16
 8000a58:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000a5c:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000a60:	4302      	orrs	r2, r0
 8000a62:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000a66:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000a6a:	69a0      	ldr	r0, [r4, #24]
 8000a6c:	6162      	str	r2, [r4, #20]
 8000a6e:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000a72:	3101      	adds	r1, #1
 8000a74:	e7e4      	b.n	8000a40 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000a76:	1973      	adds	r3, r6, r5
 8000a78:	5d72      	ldrb	r2, [r6, r5]
 8000a7a:	789f      	ldrb	r7, [r3, #2]
 8000a7c:	7859      	ldrb	r1, [r3, #1]
 8000a7e:	78db      	ldrb	r3, [r3, #3]
 8000a80:	043f      	lsls	r7, r7, #16
 8000a82:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8000a86:	4317      	orrs	r7, r2
 8000a88:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 8000a8c:	69e3      	ldr	r3, [r4, #28]
 8000a8e:	429f      	cmp	r7, r3
 8000a90:	f105 0504 	add.w	r5, r5, #4
 8000a94:	d904      	bls.n	8000aa0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 8000a96:	00b9      	lsls	r1, r7, #2
 8000a98:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000a9a:	f007 f8d7 	bl	8007c4c <realloc>
 8000a9e:	6260      	str	r0, [r4, #36]	; 0x24
 8000aa0:	61e7      	str	r7, [r4, #28]
 8000aa2:	2700      	movs	r7, #0
 8000aa4:	46b8      	mov	r8, r7
 8000aa6:	69e3      	ldr	r3, [r4, #28]
 8000aa8:	429f      	cmp	r7, r3
 8000aaa:	d21a      	bcs.n	8000ae2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 8000aac:	1971      	adds	r1, r6, r5
 8000aae:	a801      	add	r0, sp, #4
 8000ab0:	f7ff ff1a 	bl	80008e8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000ab4:	1d2b      	adds	r3, r5, #4
 8000ab6:	9d01      	ldr	r5, [sp, #4]
 8000ab8:	18f2      	adds	r2, r6, r3
 8000aba:	441d      	add	r5, r3
 8000abc:	1b91      	subs	r1, r2, r6
 8000abe:	42a9      	cmp	r1, r5
 8000ac0:	d204      	bcs.n	8000acc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 8000ac2:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000ac6:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000aca:	e7f7      	b.n	8000abc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 8000acc:	1972      	adds	r2, r6, r5
 8000ace:	3b01      	subs	r3, #1
 8000ad0:	f802 8c01 	strb.w	r8, [r2, #-1]
 8000ad4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000ad6:	4433      	add	r3, r6
 8000ad8:	6223      	str	r3, [r4, #32]
 8000ada:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 8000ade:	3701      	adds	r7, #1
 8000ae0:	e7e1      	b.n	8000aa6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 8000ae2:	4628      	mov	r0, r5
 8000ae4:	b002      	add	sp, #8
 8000ae6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000aea <rosserial_msgs::Log::deserialize(unsigned char*)>:
 8000aea:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000aec:	460c      	mov	r4, r1
 8000aee:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000af2:	7103      	strb	r3, [r0, #4]
 8000af4:	4605      	mov	r5, r0
 8000af6:	a801      	add	r0, sp, #4
 8000af8:	f7ff fef6 	bl	80008e8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000afc:	9b01      	ldr	r3, [sp, #4]
 8000afe:	1d62      	adds	r2, r4, #5
 8000b00:	1d58      	adds	r0, r3, #5
 8000b02:	1b11      	subs	r1, r2, r4
 8000b04:	4288      	cmp	r0, r1
 8000b06:	d904      	bls.n	8000b12 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 8000b08:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000b0c:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000b10:	e7f7      	b.n	8000b02 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 8000b12:	4423      	add	r3, r4
 8000b14:	2200      	movs	r2, #0
 8000b16:	3404      	adds	r4, #4
 8000b18:	711a      	strb	r2, [r3, #4]
 8000b1a:	60ac      	str	r4, [r5, #8]
 8000b1c:	b003      	add	sp, #12
 8000b1e:	bd30      	pop	{r4, r5, pc}

08000b20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 8000b20:	b530      	push	{r4, r5, lr}
 8000b22:	b085      	sub	sp, #20
 8000b24:	4604      	mov	r4, r0
 8000b26:	4b09      	ldr	r3, [pc, #36]	; (8000b4c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000b28:	9301      	str	r3, [sp, #4]
 8000b2a:	2300      	movs	r3, #0
 8000b2c:	9302      	str	r3, [sp, #8]
 8000b2e:	9303      	str	r3, [sp, #12]
 8000b30:	f854 3b7c 	ldr.w	r3, [r4], #124
 8000b34:	aa01      	add	r2, sp, #4
 8000b36:	681b      	ldr	r3, [r3, #0]
 8000b38:	210a      	movs	r1, #10
 8000b3a:	4605      	mov	r5, r0
 8000b3c:	4798      	blx	r3
 8000b3e:	4620      	mov	r0, r4
 8000b40:	f005 f9c1 	bl	8005ec6 <mbed::Timer::read_ms()>
 8000b44:	f8c5 008c 	str.w	r0, [r5, #140]	; 0x8c
 8000b48:	b005      	add	sp, #20
 8000b4a:	bd30      	pop	{r4, r5, pc}
 8000b4c:	080080b4 	.word	0x080080b4

08000b50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000b50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b54:	b086      	sub	sp, #24
 8000b56:	4b2b      	ldr	r3, [pc, #172]	; (8000c04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000b58:	9300      	str	r3, [sp, #0]
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	4b2a      	ldr	r3, [pc, #168]	; (8000c08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 8000b5e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000b62:	4605      	mov	r5, r0
 8000b64:	9302      	str	r3, [sp, #8]
 8000b66:	9303      	str	r3, [sp, #12]
 8000b68:	9304      	str	r3, [sp, #16]
 8000b6a:	9205      	str	r2, [sp, #20]
 8000b6c:	f200 449c 	addw	r4, r0, #1180	; 0x49c
 8000b70:	f500 66a0 	add.w	r6, r0, #1280	; 0x500
 8000b74:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000b78:	6823      	ldr	r3, [r4, #0]
 8000b7a:	b1bb      	cbz	r3, 8000bac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000b7c:	6858      	ldr	r0, [r3, #4]
 8000b7e:	689a      	ldr	r2, [r3, #8]
 8000b80:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000b84:	681a      	ldr	r2, [r3, #0]
 8000b86:	6803      	ldr	r3, [r0, #0]
 8000b88:	9202      	str	r2, [sp, #8]
 8000b8a:	689b      	ldr	r3, [r3, #8]
 8000b8c:	4798      	blx	r3
 8000b8e:	6823      	ldr	r3, [r4, #0]
 8000b90:	9003      	str	r0, [sp, #12]
 8000b92:	6858      	ldr	r0, [r3, #4]
 8000b94:	6803      	ldr	r3, [r0, #0]
 8000b96:	68db      	ldr	r3, [r3, #12]
 8000b98:	4798      	blx	r3
 8000b9a:	6821      	ldr	r1, [r4, #0]
 8000b9c:	682b      	ldr	r3, [r5, #0]
 8000b9e:	9004      	str	r0, [sp, #16]
 8000ba0:	9705      	str	r7, [sp, #20]
 8000ba2:	681b      	ldr	r3, [r3, #0]
 8000ba4:	6909      	ldr	r1, [r1, #16]
 8000ba6:	466a      	mov	r2, sp
 8000ba8:	4628      	mov	r0, r5
 8000baa:	4798      	blx	r3
 8000bac:	3404      	adds	r4, #4
 8000bae:	42b4      	cmp	r4, r6
 8000bb0:	d1e2      	bne.n	8000b78 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000bb2:	f205 5664 	addw	r6, r5, #1380	; 0x564
 8000bb6:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000bba:	6820      	ldr	r0, [r4, #0]
 8000bbc:	b1c8      	cbz	r0, 8000bf2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 8000bbe:	6843      	ldr	r3, [r0, #4]
 8000bc0:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000bc4:	6883      	ldr	r3, [r0, #8]
 8000bc6:	9302      	str	r3, [sp, #8]
 8000bc8:	6803      	ldr	r3, [r0, #0]
 8000bca:	689b      	ldr	r3, [r3, #8]
 8000bcc:	4798      	blx	r3
 8000bce:	9003      	str	r0, [sp, #12]
 8000bd0:	6820      	ldr	r0, [r4, #0]
 8000bd2:	6803      	ldr	r3, [r0, #0]
 8000bd4:	68db      	ldr	r3, [r3, #12]
 8000bd6:	4798      	blx	r3
 8000bd8:	682b      	ldr	r3, [r5, #0]
 8000bda:	9004      	str	r0, [sp, #16]
 8000bdc:	6820      	ldr	r0, [r4, #0]
 8000bde:	f8d3 8000 	ldr.w	r8, [r3]
 8000be2:	6803      	ldr	r3, [r0, #0]
 8000be4:	9705      	str	r7, [sp, #20]
 8000be6:	685b      	ldr	r3, [r3, #4]
 8000be8:	4798      	blx	r3
 8000bea:	466a      	mov	r2, sp
 8000bec:	4601      	mov	r1, r0
 8000bee:	4628      	mov	r0, r5
 8000bf0:	47c0      	blx	r8
 8000bf2:	3404      	adds	r4, #4
 8000bf4:	42a6      	cmp	r6, r4
 8000bf6:	d1e0      	bne.n	8000bba <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000bf8:	2301      	movs	r3, #1
 8000bfa:	f885 3578 	strb.w	r3, [r5, #1400]	; 0x578
 8000bfe:	b006      	add	sp, #24
 8000c00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c04:	080080cc 	.word	0x080080cc
 8000c08:	08008391 	.word	0x08008391

08000c0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8000c0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c0e:	b085      	sub	sp, #20
 8000c10:	f100 057c 	add.w	r5, r0, #124	; 0x7c
 8000c14:	4b1e      	ldr	r3, [pc, #120]	; (8000c90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x84>)
 8000c16:	9301      	str	r3, [sp, #4]
 8000c18:	4604      	mov	r4, r0
 8000c1a:	2300      	movs	r3, #0
 8000c1c:	4628      	mov	r0, r5
 8000c1e:	9302      	str	r3, [sp, #8]
 8000c20:	9303      	str	r3, [sp, #12]
 8000c22:	460e      	mov	r6, r1
 8000c24:	f005 f94f 	bl	8005ec6 <mbed::Timer::read_ms()>
 8000c28:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 8000c2c:	4631      	mov	r1, r6
 8000c2e:	1a87      	subs	r7, r0, r2
 8000c30:	a801      	add	r0, sp, #4
 8000c32:	f7ff faf5 	bl	8000220 <std_msgs::Time::deserialize(unsigned char*)>
 8000c36:	9b02      	ldr	r3, [sp, #8]
 8000c38:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8000c3c:	fbb7 f2f6 	udiv	r2, r7, r6
 8000c40:	4413      	add	r3, r2
 8000c42:	9302      	str	r3, [sp, #8]
 8000c44:	fb06 7212 	mls	r2, r6, r2, r7
 8000c48:	9b03      	ldr	r3, [sp, #12]
 8000c4a:	4f12      	ldr	r7, [pc, #72]	; (8000c94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 8000c4c:	4628      	mov	r0, r5
 8000c4e:	fb07 3202 	mla	r2, r7, r2, r3
 8000c52:	9203      	str	r2, [sp, #12]
 8000c54:	f005 f937 	bl	8005ec6 <mbed::Timer::read_ms()>
 8000c58:	9a02      	ldr	r2, [sp, #8]
 8000c5a:	fbb0 f3f6 	udiv	r3, r0, r6
 8000c5e:	3a01      	subs	r2, #1
 8000c60:	1ad2      	subs	r2, r2, r3
 8000c62:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 8000c66:	9903      	ldr	r1, [sp, #12]
 8000c68:	4a0b      	ldr	r2, [pc, #44]	; (8000c98 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000c6a:	fb06 0313 	mls	r3, r6, r3, r0
 8000c6e:	440a      	add	r2, r1
 8000c70:	4621      	mov	r1, r4
 8000c72:	fb07 2313 	mls	r3, r7, r3, r2
 8000c76:	f841 3f94 	str.w	r3, [r1, #148]!
 8000c7a:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8000c7e:	f000 fcf1 	bl	8001664 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000c82:	4628      	mov	r0, r5
 8000c84:	f005 f91f 	bl	8005ec6 <mbed::Timer::read_ms()>
 8000c88:	f8c4 0580 	str.w	r0, [r4, #1408]	; 0x580
 8000c8c:	b005      	add	sp, #20
 8000c8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c90:	080080b4 	.word	0x080080b4
 8000c94:	000f4240 	.word	0x000f4240
 8000c98:	3b9aca00 	.word	0x3b9aca00

08000c9c <_GLOBAL__sub_I_speed>:
 8000c9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000c9e:	2100      	movs	r1, #0
 8000ca0:	4848      	ldr	r0, [pc, #288]	; (8000dc4 <_GLOBAL__sub_I_speed+0x128>)
 8000ca2:	4c49      	ldr	r4, [pc, #292]	; (8000dc8 <_GLOBAL__sub_I_speed+0x12c>)
 8000ca4:	f005 f82e 	bl	8005d04 <mbed::InterruptIn::InterruptIn(PinName)>
 8000ca8:	4a48      	ldr	r2, [pc, #288]	; (8000dcc <_GLOBAL__sub_I_speed+0x130>)
 8000caa:	4949      	ldr	r1, [pc, #292]	; (8000dd0 <_GLOBAL__sub_I_speed+0x134>)
 8000cac:	4845      	ldr	r0, [pc, #276]	; (8000dc4 <_GLOBAL__sub_I_speed+0x128>)
 8000cae:	f005 faad 	bl	800620c <__aeabi_atexit>
 8000cb2:	2101      	movs	r1, #1
 8000cb4:	4847      	ldr	r0, [pc, #284]	; (8000dd4 <_GLOBAL__sub_I_speed+0x138>)
 8000cb6:	f005 f825 	bl	8005d04 <mbed::InterruptIn::InterruptIn(PinName)>
 8000cba:	4a44      	ldr	r2, [pc, #272]	; (8000dcc <_GLOBAL__sub_I_speed+0x130>)
 8000cbc:	4944      	ldr	r1, [pc, #272]	; (8000dd0 <_GLOBAL__sub_I_speed+0x134>)
 8000cbe:	4845      	ldr	r0, [pc, #276]	; (8000dd4 <_GLOBAL__sub_I_speed+0x138>)
 8000cc0:	f005 faa4 	bl	800620c <__aeabi_atexit>
 8000cc4:	f000 ffc6 	bl	8001c54 <core_util_critical_section_enter>
 8000cc8:	2103      	movs	r1, #3
 8000cca:	4843      	ldr	r0, [pc, #268]	; (8000dd8 <_GLOBAL__sub_I_speed+0x13c>)
 8000ccc:	f003 f98a 	bl	8003fe4 <pwmout_init>
 8000cd0:	f000 ffd6 	bl	8001c80 <core_util_critical_section_exit>
 8000cd4:	221c      	movs	r2, #28
 8000cd6:	2100      	movs	r1, #0
 8000cd8:	4840      	ldr	r0, [pc, #256]	; (8000ddc <_GLOBAL__sub_I_speed+0x140>)
 8000cda:	f006 fd46 	bl	800776a <memset>
 8000cde:	2201      	movs	r2, #1
 8000ce0:	2117      	movs	r1, #23
 8000ce2:	483e      	ldr	r0, [pc, #248]	; (8000ddc <_GLOBAL__sub_I_speed+0x140>)
 8000ce4:	f000 febb 	bl	8001a5e <gpio_init_out_ex>
 8000ce8:	221c      	movs	r2, #28
 8000cea:	2100      	movs	r1, #0
 8000cec:	483c      	ldr	r0, [pc, #240]	; (8000de0 <_GLOBAL__sub_I_speed+0x144>)
 8000cee:	f006 fd3c 	bl	800776a <memset>
 8000cf2:	2201      	movs	r2, #1
 8000cf4:	2108      	movs	r1, #8
 8000cf6:	483a      	ldr	r0, [pc, #232]	; (8000de0 <_GLOBAL__sub_I_speed+0x144>)
 8000cf8:	f000 feb1 	bl	8001a5e <gpio_init_out_ex>
 8000cfc:	4620      	mov	r0, r4
 8000cfe:	2500      	movs	r5, #0
 8000d00:	f005 f908 	bl	8005f14 <mbed::TimerEvent::TimerEvent()>
 8000d04:	4b37      	ldr	r3, [pc, #220]	; (8000de4 <_GLOBAL__sub_I_speed+0x148>)
 8000d06:	6023      	str	r3, [r4, #0]
 8000d08:	4a30      	ldr	r2, [pc, #192]	; (8000dcc <_GLOBAL__sub_I_speed+0x130>)
 8000d0a:	4937      	ldr	r1, [pc, #220]	; (8000de8 <_GLOBAL__sub_I_speed+0x14c>)
 8000d0c:	6265      	str	r5, [r4, #36]	; 0x24
 8000d0e:	4620      	mov	r0, r4
 8000d10:	4c36      	ldr	r4, [pc, #216]	; (8000dec <_GLOBAL__sub_I_speed+0x150>)
 8000d12:	f005 fa7b 	bl	800620c <__aeabi_atexit>
 8000d16:	4836      	ldr	r0, [pc, #216]	; (8000df0 <_GLOBAL__sub_I_speed+0x154>)
 8000d18:	f005 f8eb 	bl	8005ef2 <mbed::Timer::Timer()>
 8000d1c:	4620      	mov	r0, r4
 8000d1e:	4b35      	ldr	r3, [pc, #212]	; (8000df4 <_GLOBAL__sub_I_speed+0x158>)
 8000d20:	f840 3b04 	str.w	r3, [r0], #4
 8000d24:	2304      	movs	r3, #4
 8000d26:	220f      	movs	r2, #15
 8000d28:	2102      	movs	r1, #2
 8000d2a:	9300      	str	r3, [sp, #0]
 8000d2c:	9501      	str	r5, [sp, #4]
 8000d2e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000d32:	f000 fd63 	bl	80017fc <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000d36:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8000d3a:	f005 f8da 	bl	8005ef2 <mbed::Timer::Timer()>
 8000d3e:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000d42:	67a3      	str	r3, [r4, #120]	; 0x78
 8000d44:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8000d48:	f005 f881 	bl	8005e4e <mbed::Timer::start()>
 8000d4c:	4b2a      	ldr	r3, [pc, #168]	; (8000df8 <_GLOBAL__sub_I_speed+0x15c>)
 8000d4e:	f884 5578 	strb.w	r5, [r4, #1400]	; 0x578
 8000d52:	f8c4 358c 	str.w	r3, [r4, #1420]	; 0x58c
 8000d56:	f8c4 5590 	str.w	r5, [r4, #1424]	; 0x590
 8000d5a:	f8c4 5598 	str.w	r5, [r4, #1432]	; 0x598
 8000d5e:	f8c4 559c 	str.w	r5, [r4, #1436]	; 0x59c
 8000d62:	f8c4 55a4 	str.w	r5, [r4, #1444]	; 0x5a4
 8000d66:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
 8000d6a:	f8c4 55b0 	str.w	r5, [r4, #1456]	; 0x5b0
 8000d6e:	462a      	mov	r2, r5
 8000d70:	1963      	adds	r3, r4, r5
 8000d72:	3504      	adds	r5, #4
 8000d74:	2d64      	cmp	r5, #100	; 0x64
 8000d76:	f8c3 249c 	str.w	r2, [r3, #1180]	; 0x49c
 8000d7a:	d1f9      	bne.n	8000d70 <_GLOBAL__sub_I_speed+0xd4>
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	4619      	mov	r1, r3
 8000d80:	18e2      	adds	r2, r4, r3
 8000d82:	3304      	adds	r3, #4
 8000d84:	2b64      	cmp	r3, #100	; 0x64
 8000d86:	f8c2 1500 	str.w	r1, [r2, #1280]	; 0x500
 8000d8a:	d1f9      	bne.n	8000d80 <_GLOBAL__sub_I_speed+0xe4>
 8000d8c:	2300      	movs	r3, #0
 8000d8e:	4619      	mov	r1, r3
 8000d90:	18e2      	adds	r2, r4, r3
 8000d92:	3301      	adds	r3, #1
 8000d94:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000d98:	f882 109c 	strb.w	r1, [r2, #156]	; 0x9c
 8000d9c:	d1f8      	bne.n	8000d90 <_GLOBAL__sub_I_speed+0xf4>
 8000d9e:	2300      	movs	r3, #0
 8000da0:	461a      	mov	r2, r3
 8000da2:	18e1      	adds	r1, r4, r3
 8000da4:	3301      	adds	r3, #1
 8000da6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000daa:	f881 229c 	strb.w	r2, [r1, #668]	; 0x29c
 8000dae:	d1f8      	bne.n	8000da2 <_GLOBAL__sub_I_speed+0x106>
 8000db0:	f8c4 2098 	str.w	r2, [r4, #152]	; 0x98
 8000db4:	4911      	ldr	r1, [pc, #68]	; (8000dfc <_GLOBAL__sub_I_speed+0x160>)
 8000db6:	4a05      	ldr	r2, [pc, #20]	; (8000dcc <_GLOBAL__sub_I_speed+0x130>)
 8000db8:	480c      	ldr	r0, [pc, #48]	; (8000dec <_GLOBAL__sub_I_speed+0x150>)
 8000dba:	b003      	add	sp, #12
 8000dbc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000dc0:	f005 ba24 	b.w	800620c <__aeabi_atexit>
 8000dc4:	20000114 	.word	0x20000114
 8000dc8:	2000079c 	.word	0x2000079c
 8000dcc:	20000000 	.word	0x20000000
 8000dd0:	08005cc9 	.word	0x08005cc9
 8000dd4:	200000c4 	.word	0x200000c4
 8000dd8:	20000164 	.word	0x20000164
 8000ddc:	20000184 	.word	0x20000184
 8000de0:	200001a0 	.word	0x200001a0
 8000de4:	080087cc 	.word	0x080087cc
 8000de8:	08000585 	.word	0x08000585
 8000dec:	200001c8 	.word	0x200001c8
 8000df0:	2000078c 	.word	0x2000078c
 8000df4:	08008114 	.word	0x08008114
 8000df8:	080080fc 	.word	0x080080fc
 8000dfc:	080010e1 	.word	0x080010e1

08000e00 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000e00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000e04:	f100 087c 	add.w	r8, r0, #124	; 0x7c
 8000e08:	4604      	mov	r4, r0
 8000e0a:	4640      	mov	r0, r8
 8000e0c:	f005 f85b 	bl	8005ec6 <mbed::Timer::read_ms()>
 8000e10:	f8d4 3580 	ldr.w	r3, [r4, #1408]	; 0x580
 8000e14:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000e18:	1ac3      	subs	r3, r0, r3
 8000e1a:	4293      	cmp	r3, r2
 8000e1c:	bf84      	itt	hi
 8000e1e:	2300      	movhi	r3, #0
 8000e20:	f884 3578 	strbhi.w	r3, [r4, #1400]	; 0x578
 8000e24:	f8d4 3564 	ldr.w	r3, [r4, #1380]	; 0x564
 8000e28:	4605      	mov	r5, r0
 8000e2a:	b133      	cbz	r3, 8000e3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000e2c:	f8d4 3584 	ldr.w	r3, [r4, #1412]	; 0x584
 8000e30:	4283      	cmp	r3, r0
 8000e32:	bf3c      	itt	cc
 8000e34:	2300      	movcc	r3, #0
 8000e36:	f8c4 3564 	strcc.w	r3, [r4, #1380]	; 0x564
 8000e3a:	f104 0904 	add.w	r9, r4, #4
 8000e3e:	2600      	movs	r6, #0
 8000e40:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 8000e44:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8000e48:	b9ab      	cbnz	r3, 8000e76 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000e4a:	4648      	mov	r0, r9
 8000e4c:	f000 fc18 	bl	8001680 <BufferedSerial::readable()>
 8000e50:	b9e8      	cbnz	r0, 8000e8e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 8000e52:	f894 0578 	ldrb.w	r0, [r4, #1400]	; 0x578
 8000e56:	b160      	cbz	r0, 8000e72 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8000e58:	f8d4 357c 	ldr.w	r3, [r4, #1404]	; 0x57c
 8000e5c:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000e60:	1aeb      	subs	r3, r5, r3
 8000e62:	4293      	cmp	r3, r2
 8000e64:	d904      	bls.n	8000e70 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8000e66:	4620      	mov	r0, r4
 8000e68:	f7ff fe5a 	bl	8000b20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000e6c:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8000e70:	2000      	movs	r0, #0
 8000e72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000e76:	4640      	mov	r0, r8
 8000e78:	f005 f825 	bl	8005ec6 <mbed::Timer::read_ms()>
 8000e7c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8000e80:	1b40      	subs	r0, r0, r5
 8000e82:	4298      	cmp	r0, r3
 8000e84:	d9e1      	bls.n	8000e4a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8000e86:	f06f 0001 	mvn.w	r0, #1
 8000e8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000e8e:	4648      	mov	r0, r9
 8000e90:	f000 fbfe 	bl	8001690 <BufferedSerial::getc()>
 8000e94:	2800      	cmp	r0, #0
 8000e96:	dbdc      	blt.n	8000e52 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8000e98:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
 8000e9c:	f8d4 a564 	ldr.w	r10, [r4, #1380]	; 0x564
 8000ea0:	4403      	add	r3, r0
 8000ea2:	f1ba 0f07 	cmp.w	r10, #7
 8000ea6:	f8c4 3574 	str.w	r3, [r4, #1396]	; 0x574
 8000eaa:	d112      	bne.n	8000ed2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8000eac:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 8000eb0:	1c5a      	adds	r2, r3, #1
 8000eb2:	4423      	add	r3, r4
 8000eb4:	f8c4 2570 	str.w	r2, [r4, #1392]	; 0x570
 8000eb8:	f883 009c 	strb.w	r0, [r3, #156]	; 0x9c
 8000ebc:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8000ec0:	3b01      	subs	r3, #1
 8000ec2:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
 8000ec6:	2b00      	cmp	r3, #0
 8000ec8:	d1bc      	bne.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000eca:	2308      	movs	r3, #8
 8000ecc:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8000ed0:	e7b8      	b.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ed2:	f1ba 0f00 	cmp.w	r10, #0
 8000ed6:	d114      	bne.n	8000f02 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 8000ed8:	28ff      	cmp	r0, #255	; 0xff
 8000eda:	d107      	bne.n	8000eec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8000edc:	2301      	movs	r3, #1
 8000ede:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8000ee2:	f105 0314 	add.w	r3, r5, #20
 8000ee6:	f8c4 3584 	str.w	r3, [r4, #1412]	; 0x584
 8000eea:	e7ab      	b.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000eec:	4640      	mov	r0, r8
 8000eee:	f004 ffea 	bl	8005ec6 <mbed::Timer::read_ms()>
 8000ef2:	f241 3388 	movw	r3, #5000	; 0x1388
 8000ef6:	1b40      	subs	r0, r0, r5
 8000ef8:	4298      	cmp	r0, r3
 8000efa:	d9a3      	bls.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000efc:	f884 a578 	strb.w	r10, [r4, #1400]	; 0x578
 8000f00:	e7c1      	b.n	8000e86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 8000f02:	f1ba 0f01 	cmp.w	r10, #1
 8000f06:	d10d      	bne.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8000f08:	28fe      	cmp	r0, #254	; 0xfe
 8000f0a:	d101      	bne.n	8000f10 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8000f0c:	2302      	movs	r3, #2
 8000f0e:	e7dd      	b.n	8000ecc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000f10:	f894 3578 	ldrb.w	r3, [r4, #1400]	; 0x578
 8000f14:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 8000f18:	2b00      	cmp	r3, #0
 8000f1a:	d193      	bne.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f1c:	4620      	mov	r0, r4
 8000f1e:	f7ff fdff 	bl	8000b20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000f22:	e78f      	b.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f24:	f1ba 0f02 	cmp.w	r10, #2
 8000f28:	d109      	bne.n	8000f3e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000f2a:	f8c4 0568 	str.w	r0, [r4, #1384]	; 0x568
 8000f2e:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
 8000f32:	2303      	movs	r3, #3
 8000f34:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8000f38:	f8c4 0574 	str.w	r0, [r4, #1396]	; 0x574
 8000f3c:	e782      	b.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f3e:	f1ba 0f03 	cmp.w	r10, #3
 8000f42:	d107      	bne.n	8000f54 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8000f44:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8000f48:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000f4c:	f8c4 0568 	str.w	r0, [r4, #1384]	; 0x568
 8000f50:	2304      	movs	r3, #4
 8000f52:	e7bb      	b.n	8000ecc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000f54:	f1ba 0f04 	cmp.w	r10, #4
 8000f58:	d10b      	bne.n	8000f72 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000f5a:	425a      	negs	r2, r3
 8000f5c:	b2d2      	uxtb	r2, r2
 8000f5e:	b2db      	uxtb	r3, r3
 8000f60:	bf58      	it	pl
 8000f62:	4253      	negpl	r3, r2
 8000f64:	2bff      	cmp	r3, #255	; 0xff
 8000f66:	d101      	bne.n	8000f6c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8000f68:	2305      	movs	r3, #5
 8000f6a:	e7af      	b.n	8000ecc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000f6c:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 8000f70:	e768      	b.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000f72:	f1ba 0f05 	cmp.w	r10, #5
 8000f76:	d103      	bne.n	8000f80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8000f78:	f8c4 056c 	str.w	r0, [r4, #1388]	; 0x56c
 8000f7c:	2306      	movs	r3, #6
 8000f7e:	e7d9      	b.n	8000f34 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8000f80:	f1ba 0f06 	cmp.w	r10, #6
 8000f84:	d10b      	bne.n	8000f9e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8000f86:	f8d4 356c 	ldr.w	r3, [r4, #1388]	; 0x56c
 8000f8a:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000f8e:	2307      	movs	r3, #7
 8000f90:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8000f94:	f8c4 056c 	str.w	r0, [r4, #1388]	; 0x56c
 8000f98:	f8d4 3568 	ldr.w	r3, [r4, #1384]	; 0x568
 8000f9c:	e793      	b.n	8000ec6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8000f9e:	f1ba 0f08 	cmp.w	r10, #8
 8000fa2:	f47f af4f 	bne.w	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fa6:	425a      	negs	r2, r3
 8000fa8:	b2d2      	uxtb	r2, r2
 8000faa:	b2db      	uxtb	r3, r3
 8000fac:	bf58      	it	pl
 8000fae:	4253      	negpl	r3, r2
 8000fb0:	2bff      	cmp	r3, #255	; 0xff
 8000fb2:	f8c4 6564 	str.w	r6, [r4, #1380]	; 0x564
 8000fb6:	f47f af45 	bne.w	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fba:	f8d4 356c 	ldr.w	r3, [r4, #1388]	; 0x56c
 8000fbe:	b96b      	cbnz	r3, 8000fdc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8000fc0:	4620      	mov	r0, r4
 8000fc2:	f7ff fdad 	bl	8000b20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000fc6:	4620      	mov	r0, r4
 8000fc8:	f7ff fdc2 	bl	8000b50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000fcc:	f8c4 557c 	str.w	r5, [r4, #1404]	; 0x57c
 8000fd0:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
 8000fd4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000fdc:	2b0a      	cmp	r3, #10
 8000fde:	d104      	bne.n	8000fea <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8000fe0:	4639      	mov	r1, r7
 8000fe2:	4620      	mov	r0, r4
 8000fe4:	f7ff fe12 	bl	8000c0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000fe8:	e72c      	b.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000fea:	2b06      	cmp	r3, #6
 8000fec:	d108      	bne.n	8001000 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8000fee:	4639      	mov	r1, r7
 8000ff0:	f204 508c 	addw	r0, r4, #1420	; 0x58c
 8000ff4:	f7ff fce2 	bl	80009bc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000ff8:	2301      	movs	r3, #1
 8000ffa:	f884 3588 	strb.w	r3, [r4, #1416]	; 0x588
 8000ffe:	e721      	b.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001000:	2b0b      	cmp	r3, #11
 8001002:	d102      	bne.n	800100a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8001004:	f884 6578 	strb.w	r6, [r4, #1400]	; 0x578
 8001008:	e71c      	b.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 800100a:	33dc      	adds	r3, #220	; 0xdc
 800100c:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8001010:	2800      	cmp	r0, #0
 8001012:	f43f af17 	beq.w	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001016:	6803      	ldr	r3, [r0, #0]
 8001018:	4639      	mov	r1, r7
 800101a:	681b      	ldr	r3, [r3, #0]
 800101c:	4798      	blx	r3
 800101e:	e711      	b.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08001020 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8001020:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001022:	2963      	cmp	r1, #99	; 0x63
 8001024:	b085      	sub	sp, #20
 8001026:	4604      	mov	r4, r0
 8001028:	460e      	mov	r6, r1
 800102a:	dd03      	ble.n	8001034 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 800102c:	f890 5578 	ldrb.w	r5, [r0, #1400]	; 0x578
 8001030:	2d00      	cmp	r5, #0
 8001032:	d04d      	beq.n	80010d0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8001034:	6813      	ldr	r3, [r2, #0]
 8001036:	f204 21a3 	addw	r1, r4, #675	; 0x2a3
 800103a:	681b      	ldr	r3, [r3, #0]
 800103c:	4610      	mov	r0, r2
 800103e:	4798      	blx	r3
 8001040:	23ff      	movs	r3, #255	; 0xff
 8001042:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8001046:	23fe      	movs	r3, #254	; 0xfe
 8001048:	f3c0 2207 	ubfx	r2, r0, #8, #8
 800104c:	f884 329d 	strb.w	r3, [r4, #669]	; 0x29d
 8001050:	b2c3      	uxtb	r3, r0
 8001052:	f884 329e 	strb.w	r3, [r4, #670]	; 0x29e
 8001056:	4413      	add	r3, r2
 8001058:	43db      	mvns	r3, r3
 800105a:	f884 62a1 	strb.w	r6, [r4, #673]	; 0x2a1
 800105e:	f346 2607 	sbfx	r6, r6, #8, #8
 8001062:	f884 229f 	strb.w	r2, [r4, #671]	; 0x29f
 8001066:	f884 32a0 	strb.w	r3, [r4, #672]	; 0x2a0
 800106a:	f884 62a2 	strb.w	r6, [r4, #674]	; 0x2a2
 800106e:	f204 21a1 	addw	r1, r4, #673	; 0x2a1
 8001072:	2205      	movs	r2, #5
 8001074:	2300      	movs	r3, #0
 8001076:	1d86      	adds	r6, r0, #6
 8001078:	42b2      	cmp	r2, r6
 800107a:	dc04      	bgt.n	8001086 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 800107c:	f811 5b01 	ldrb.w	r5, [r1], #1
 8001080:	3201      	adds	r2, #1
 8001082:	442b      	add	r3, r5
 8001084:	e7f8      	b.n	8001078 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8001086:	f100 0508 	add.w	r5, r0, #8
 800108a:	4420      	add	r0, r4
 800108c:	43db      	mvns	r3, r3
 800108e:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8001092:	f880 32a3 	strb.w	r3, [r0, #675]	; 0x2a3
 8001096:	dc0c      	bgt.n	80010b2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8001098:	f504 7727 	add.w	r7, r4, #668	; 0x29c
 800109c:	463e      	mov	r6, r7
 800109e:	3404      	adds	r4, #4
 80010a0:	1bf3      	subs	r3, r6, r7
 80010a2:	429d      	cmp	r5, r3
 80010a4:	dd14      	ble.n	80010d0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 80010a6:	f816 1b01 	ldrb.w	r1, [r6], #1
 80010aa:	4620      	mov	r0, r4
 80010ac:	f000 fc13 	bl	80018d6 <BufferedSerial::putc(int)>
 80010b0:	e7f6      	b.n	80010a0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 80010b2:	4b09      	ldr	r3, [pc, #36]	; (80010d8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 80010b4:	9301      	str	r3, [sp, #4]
 80010b6:	2303      	movs	r3, #3
 80010b8:	f88d 3008 	strb.w	r3, [sp, #8]
 80010bc:	4b07      	ldr	r3, [pc, #28]	; (80010dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 80010be:	9303      	str	r3, [sp, #12]
 80010c0:	6823      	ldr	r3, [r4, #0]
 80010c2:	aa01      	add	r2, sp, #4
 80010c4:	681b      	ldr	r3, [r3, #0]
 80010c6:	2107      	movs	r1, #7
 80010c8:	4620      	mov	r0, r4
 80010ca:	4798      	blx	r3
 80010cc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80010d0:	4628      	mov	r0, r5
 80010d2:	b005      	add	sp, #20
 80010d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010d6:	bf00      	nop
 80010d8:	080080e4 	.word	0x080080e4
 80010dc:	080081d7 	.word	0x080081d7

080010e0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 80010e0:	b510      	push	{r4, lr}
 80010e2:	4b04      	ldr	r3, [pc, #16]	; (80010f4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 80010e4:	4604      	mov	r4, r0
 80010e6:	f840 3b04 	str.w	r3, [r0], #4
 80010ea:	f000 fb13 	bl	8001714 <BufferedSerial::~BufferedSerial()>
 80010ee:	4620      	mov	r0, r4
 80010f0:	bd10      	pop	{r4, pc}
 80010f2:	bf00      	nop
 80010f4:	08008114 	.word	0x08008114

080010f8 <std_msgs::String::getType()>:
 80010f8:	4800      	ldr	r0, [pc, #0]	; (80010fc <std_msgs::String::getType()+0x4>)
 80010fa:	4770      	bx	lr
 80010fc:	080082b9 	.word	0x080082b9

08001100 <std_msgs::String::getMD5()>:
 8001100:	4800      	ldr	r0, [pc, #0]	; (8001104 <std_msgs::String::getMD5()+0x4>)
 8001102:	4770      	bx	lr
 8001104:	08008298 	.word	0x08008298

08001108 <std_msgs::UInt32::serialize(unsigned char*) const>:
 8001108:	6843      	ldr	r3, [r0, #4]
 800110a:	700b      	strb	r3, [r1, #0]
 800110c:	6843      	ldr	r3, [r0, #4]
 800110e:	0a1b      	lsrs	r3, r3, #8
 8001110:	704b      	strb	r3, [r1, #1]
 8001112:	88c3      	ldrh	r3, [r0, #6]
 8001114:	708b      	strb	r3, [r1, #2]
 8001116:	79c3      	ldrb	r3, [r0, #7]
 8001118:	70cb      	strb	r3, [r1, #3]
 800111a:	2004      	movs	r0, #4
 800111c:	4770      	bx	lr

0800111e <std_msgs::UInt32::deserialize(unsigned char*)>:
 800111e:	780b      	ldrb	r3, [r1, #0]
 8001120:	6043      	str	r3, [r0, #4]
 8001122:	784a      	ldrb	r2, [r1, #1]
 8001124:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001128:	6043      	str	r3, [r0, #4]
 800112a:	788a      	ldrb	r2, [r1, #2]
 800112c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001130:	6043      	str	r3, [r0, #4]
 8001132:	78ca      	ldrb	r2, [r1, #3]
 8001134:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001138:	6043      	str	r3, [r0, #4]
 800113a:	2004      	movs	r0, #4
 800113c:	4770      	bx	lr
	...

08001140 <std_msgs::UInt32::getType()>:
 8001140:	4800      	ldr	r0, [pc, #0]	; (8001144 <std_msgs::UInt32::getType()+0x4>)
 8001142:	4770      	bx	lr
 8001144:	080082ea 	.word	0x080082ea

08001148 <std_msgs::UInt32::getMD5()>:
 8001148:	4800      	ldr	r0, [pc, #0]	; (800114c <std_msgs::UInt32::getMD5()+0x4>)
 800114a:	4770      	bx	lr
 800114c:	080082c9 	.word	0x080082c9

08001150 <ros::Subscriber<std_msgs::String, void>::getEndpointType()>:
 8001150:	6980      	ldr	r0, [r0, #24]
 8001152:	4770      	bx	lr

08001154 <ros::Subscriber<std_msgs::String, void>::getMsgType()>:
 8001154:	4800      	ldr	r0, [pc, #0]	; (8001158 <ros::Subscriber<std_msgs::String, void>::getMsgType()+0x4>)
 8001156:	4770      	bx	lr
 8001158:	080082b9 	.word	0x080082b9

0800115c <ros::Subscriber<std_msgs::String, void>::getMsgMD5()>:
 800115c:	4800      	ldr	r0, [pc, #0]	; (8001160 <ros::Subscriber<std_msgs::String, void>::getMsgMD5()+0x4>)
 800115e:	4770      	bx	lr
 8001160:	08008298 	.word	0x08008298

08001164 <std_msgs::String::serialize(unsigned char*) const>:
 8001164:	b570      	push	{r4, r5, r6, lr}
 8001166:	4606      	mov	r6, r0
 8001168:	6840      	ldr	r0, [r0, #4]
 800116a:	460d      	mov	r5, r1
 800116c:	f006 fdc9 	bl	8007d02 <strlen>
 8001170:	4604      	mov	r4, r0
 8001172:	4601      	mov	r1, r0
 8001174:	4628      	mov	r0, r5
 8001176:	f7ff fae3 	bl	8000740 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800117a:	4622      	mov	r2, r4
 800117c:	6871      	ldr	r1, [r6, #4]
 800117e:	1d28      	adds	r0, r5, #4
 8001180:	f006 face 	bl	8007720 <memcpy>
 8001184:	1d20      	adds	r0, r4, #4
 8001186:	bd70      	pop	{r4, r5, r6, pc}

08001188 <std_msgs::String::deserialize(unsigned char*)>:
 8001188:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800118a:	4605      	mov	r5, r0
 800118c:	a801      	add	r0, sp, #4
 800118e:	460c      	mov	r4, r1
 8001190:	f7ff fbaa 	bl	80008e8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8001194:	9b01      	ldr	r3, [sp, #4]
 8001196:	1d22      	adds	r2, r4, #4
 8001198:	1d18      	adds	r0, r3, #4
 800119a:	1b11      	subs	r1, r2, r4
 800119c:	4288      	cmp	r0, r1
 800119e:	d904      	bls.n	80011aa <std_msgs::String::deserialize(unsigned char*)+0x22>
 80011a0:	f812 1b01 	ldrb.w	r1, [r2], #1
 80011a4:	f802 1c02 	strb.w	r1, [r2, #-2]
 80011a8:	e7f7      	b.n	800119a <std_msgs::String::deserialize(unsigned char*)+0x12>
 80011aa:	4423      	add	r3, r4
 80011ac:	2200      	movs	r2, #0
 80011ae:	3403      	adds	r4, #3
 80011b0:	70da      	strb	r2, [r3, #3]
 80011b2:	606c      	str	r4, [r5, #4]
 80011b4:	b003      	add	sp, #12
 80011b6:	bd30      	pop	{r4, r5, pc}

080011b8 <ros::Subscriber<std_msgs::String, void>::callback(unsigned char*)>:
 80011b8:	b570      	push	{r4, r5, r6, lr}
 80011ba:	4605      	mov	r5, r0
 80011bc:	f100 040c 	add.w	r4, r0, #12
 80011c0:	4620      	mov	r0, r4
 80011c2:	f7ff ffe1 	bl	8001188 <std_msgs::String::deserialize(unsigned char*)>
 80011c6:	696b      	ldr	r3, [r5, #20]
 80011c8:	4620      	mov	r0, r4
 80011ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80011ce:	4718      	bx	r3

080011d0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::log(char, char const*)>:
 80011d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80011d2:	4b06      	ldr	r3, [pc, #24]	; (80011ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::log(char, char const*)+0x1c>)
 80011d4:	9301      	str	r3, [sp, #4]
 80011d6:	6803      	ldr	r3, [r0, #0]
 80011d8:	f88d 1008 	strb.w	r1, [sp, #8]
 80011dc:	9203      	str	r2, [sp, #12]
 80011de:	681b      	ldr	r3, [r3, #0]
 80011e0:	aa01      	add	r2, sp, #4
 80011e2:	2107      	movs	r1, #7
 80011e4:	4798      	blx	r3
 80011e6:	b005      	add	sp, #20
 80011e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80011ec:	080080e4 	.word	0x080080e4

080011f0 <decodeCb(std_msgs::String const&)>:
 80011f0:	b510      	push	{r4, lr}
 80011f2:	2300      	movs	r3, #0
 80011f4:	4c4b      	ldr	r4, [pc, #300]	; (8001324 <decodeCb(std_msgs::String const&)+0x134>)
 80011f6:	461a      	mov	r2, r3
 80011f8:	551a      	strb	r2, [r3, r4]
 80011fa:	3301      	adds	r3, #1
 80011fc:	2b08      	cmp	r3, #8
 80011fe:	d1fb      	bne.n	80011f8 <decodeCb(std_msgs::String const&)+0x8>
 8001200:	6843      	ldr	r3, [r0, #4]
 8001202:	781a      	ldrb	r2, [r3, #0]
 8001204:	7022      	strb	r2, [r4, #0]
 8001206:	2a53      	cmp	r2, #83	; 0x53
 8001208:	d07f      	beq.n	800130a <decodeCb(std_msgs::String const&)+0x11a>
 800120a:	2a56      	cmp	r2, #86	; 0x56
 800120c:	d054      	beq.n	80012b8 <decodeCb(std_msgs::String const&)+0xc8>
 800120e:	2a4b      	cmp	r2, #75	; 0x4b
 8001210:	d120      	bne.n	8001254 <decodeCb(std_msgs::String const&)+0x64>
 8001212:	785a      	ldrb	r2, [r3, #1]
 8001214:	7062      	strb	r2, [r4, #1]
 8001216:	789a      	ldrb	r2, [r3, #2]
 8001218:	70a2      	strb	r2, [r4, #2]
 800121a:	78db      	ldrb	r3, [r3, #3]
 800121c:	4a41      	ldr	r2, [pc, #260]	; (8001324 <decodeCb(std_msgs::String const&)+0x134>)
 800121e:	4842      	ldr	r0, [pc, #264]	; (8001328 <decodeCb(std_msgs::String const&)+0x138>)
 8001220:	70e3      	strb	r3, [r4, #3]
 8001222:	2101      	movs	r1, #1
 8001224:	f7ff ffd4 	bl	80011d0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::log(char, char const*)>
 8001228:	7863      	ldrb	r3, [r4, #1]
 800122a:	2b70      	cmp	r3, #112	; 0x70
 800122c:	d11c      	bne.n	8001268 <decodeCb(std_msgs::String const&)+0x78>
 800122e:	78a3      	ldrb	r3, [r4, #2]
 8001230:	3b30      	subs	r3, #48	; 0x30
 8001232:	ee07 3a90 	vmov	s15, r3
 8001236:	78e3      	ldrb	r3, [r4, #3]
 8001238:	3b30      	subs	r3, #48	; 0x30
 800123a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800123e:	ee07 3a90 	vmov	s15, r3
 8001242:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001246:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 800124a:	eee7 7a26 	vfma.f32	s15, s14, s13
 800124e:	4b37      	ldr	r3, [pc, #220]	; (800132c <decodeCb(std_msgs::String const&)+0x13c>)
 8001250:	edc3 7a00 	vstr	s15, [r3]
 8001254:	4b36      	ldr	r3, [pc, #216]	; (8001330 <decodeCb(std_msgs::String const&)+0x140>)
 8001256:	685a      	ldr	r2, [r3, #4]
 8001258:	6811      	ldr	r1, [r2, #0]
 800125a:	681a      	ldr	r2, [r3, #0]
 800125c:	4211      	tst	r1, r2
 800125e:	bf0c      	ite	eq
 8001260:	689b      	ldreq	r3, [r3, #8]
 8001262:	68db      	ldrne	r3, [r3, #12]
 8001264:	601a      	str	r2, [r3, #0]
 8001266:	bd10      	pop	{r4, pc}
 8001268:	2b64      	cmp	r3, #100	; 0x64
 800126a:	d111      	bne.n	8001290 <decodeCb(std_msgs::String const&)+0xa0>
 800126c:	78a3      	ldrb	r3, [r4, #2]
 800126e:	3b30      	subs	r3, #48	; 0x30
 8001270:	ee07 3a90 	vmov	s15, r3
 8001274:	78e3      	ldrb	r3, [r4, #3]
 8001276:	3b30      	subs	r3, #48	; 0x30
 8001278:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800127c:	ee07 3a90 	vmov	s15, r3
 8001280:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001284:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001288:	eee7 7a26 	vfma.f32	s15, s14, s13
 800128c:	4b29      	ldr	r3, [pc, #164]	; (8001334 <decodeCb(std_msgs::String const&)+0x144>)
 800128e:	e7df      	b.n	8001250 <decodeCb(std_msgs::String const&)+0x60>
 8001290:	2b69      	cmp	r3, #105	; 0x69
 8001292:	d1df      	bne.n	8001254 <decodeCb(std_msgs::String const&)+0x64>
 8001294:	78a3      	ldrb	r3, [r4, #2]
 8001296:	3b30      	subs	r3, #48	; 0x30
 8001298:	ee07 3a90 	vmov	s15, r3
 800129c:	78e3      	ldrb	r3, [r4, #3]
 800129e:	3b30      	subs	r3, #48	; 0x30
 80012a0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80012a4:	ee07 3a90 	vmov	s15, r3
 80012a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012ac:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 80012b0:	eee7 7a26 	vfma.f32	s15, s14, s13
 80012b4:	4b20      	ldr	r3, [pc, #128]	; (8001338 <decodeCb(std_msgs::String const&)+0x148>)
 80012b6:	e7cb      	b.n	8001250 <decodeCb(std_msgs::String const&)+0x60>
 80012b8:	785a      	ldrb	r2, [r3, #1]
 80012ba:	7062      	strb	r2, [r4, #1]
 80012bc:	789a      	ldrb	r2, [r3, #2]
 80012be:	70a2      	strb	r2, [r4, #2]
 80012c0:	78db      	ldrb	r3, [r3, #3]
 80012c2:	4a18      	ldr	r2, [pc, #96]	; (8001324 <decodeCb(std_msgs::String const&)+0x134>)
 80012c4:	4818      	ldr	r0, [pc, #96]	; (8001328 <decodeCb(std_msgs::String const&)+0x138>)
 80012c6:	70e3      	strb	r3, [r4, #3]
 80012c8:	2101      	movs	r1, #1
 80012ca:	f7ff ff81 	bl	80011d0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::log(char, char const*)>
 80012ce:	7863      	ldrb	r3, [r4, #1]
 80012d0:	78a2      	ldrb	r2, [r4, #2]
 80012d2:	eddf 6a1a 	vldr	s13, [pc, #104]	; 800133c <decodeCb(std_msgs::String const&)+0x14c>
 80012d6:	3b30      	subs	r3, #48	; 0x30
 80012d8:	ee07 3a90 	vmov	s15, r3
 80012dc:	3a30      	subs	r2, #48	; 0x30
 80012de:	230a      	movs	r3, #10
 80012e0:	4353      	muls	r3, r2
 80012e2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80012e6:	ee07 3a90 	vmov	s15, r3
 80012ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012ee:	78e3      	ldrb	r3, [r4, #3]
 80012f0:	eee7 7a26 	vfma.f32	s15, s14, s13
 80012f4:	3b30      	subs	r3, #48	; 0x30
 80012f6:	eeb0 7a67 	vmov.f32	s14, s15
 80012fa:	ee07 3a90 	vmov	s15, r3
 80012fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001302:	4b0f      	ldr	r3, [pc, #60]	; (8001340 <decodeCb(std_msgs::String const&)+0x150>)
 8001304:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001308:	e7a2      	b.n	8001250 <decodeCb(std_msgs::String const&)+0x60>
 800130a:	785b      	ldrb	r3, [r3, #1]
 800130c:	4a05      	ldr	r2, [pc, #20]	; (8001324 <decodeCb(std_msgs::String const&)+0x134>)
 800130e:	4806      	ldr	r0, [pc, #24]	; (8001328 <decodeCb(std_msgs::String const&)+0x138>)
 8001310:	7063      	strb	r3, [r4, #1]
 8001312:	2101      	movs	r1, #1
 8001314:	f7ff ff5c 	bl	80011d0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::log(char, char const*)>
 8001318:	7863      	ldrb	r3, [r4, #1]
 800131a:	4a0a      	ldr	r2, [pc, #40]	; (8001344 <decodeCb(std_msgs::String const&)+0x154>)
 800131c:	3b30      	subs	r3, #48	; 0x30
 800131e:	6013      	str	r3, [r2, #0]
 8001320:	e798      	b.n	8001254 <decodeCb(std_msgs::String const&)+0x64>
 8001322:	bf00      	nop
 8001324:	200007c4 	.word	0x200007c4
 8001328:	20000810 	.word	0x20000810
 800132c:	200007f0 	.word	0x200007f0
 8001330:	200007f4 	.word	0x200007f4
 8001334:	200007e8 	.word	0x200007e8
 8001338:	200007ec 	.word	0x200007ec
 800133c:	42c80000 	.word	0x42c80000
 8001340:	20000de4 	.word	0x20000de4
 8001344:	20000dc4 	.word	0x20000dc4

08001348 <_GLOBAL__sub_I_target_vel>:
 8001348:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800134a:	4c3a      	ldr	r4, [pc, #232]	; (8001434 <_GLOBAL__sub_I_target_vel+0xec>)
 800134c:	4b3a      	ldr	r3, [pc, #232]	; (8001438 <_GLOBAL__sub_I_target_vel+0xf0>)
 800134e:	4620      	mov	r0, r4
 8001350:	2500      	movs	r5, #0
 8001352:	f840 3b04 	str.w	r3, [r0], #4
 8001356:	2304      	movs	r3, #4
 8001358:	220f      	movs	r2, #15
 800135a:	2102      	movs	r1, #2
 800135c:	e88d 0028 	stmia.w	sp, {r3, r5}
 8001360:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001364:	f000 fa4a 	bl	80017fc <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8001368:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 800136c:	f004 fdc1 	bl	8005ef2 <mbed::Timer::Timer()>
 8001370:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8001374:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8001378:	67a3      	str	r3, [r4, #120]	; 0x78
 800137a:	f004 fd68 	bl	8005e4e <mbed::Timer::start()>
 800137e:	4b2f      	ldr	r3, [pc, #188]	; (800143c <_GLOBAL__sub_I_target_vel+0xf4>)
 8001380:	f884 5578 	strb.w	r5, [r4, #1400]	; 0x578
 8001384:	f8c4 358c 	str.w	r3, [r4, #1420]	; 0x58c
 8001388:	f8c4 5590 	str.w	r5, [r4, #1424]	; 0x590
 800138c:	f8c4 5598 	str.w	r5, [r4, #1432]	; 0x598
 8001390:	f8c4 559c 	str.w	r5, [r4, #1436]	; 0x59c
 8001394:	f8c4 55a4 	str.w	r5, [r4, #1444]	; 0x5a4
 8001398:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
 800139c:	f8c4 55b0 	str.w	r5, [r4, #1456]	; 0x5b0
 80013a0:	462a      	mov	r2, r5
 80013a2:	1963      	adds	r3, r4, r5
 80013a4:	3504      	adds	r5, #4
 80013a6:	2d64      	cmp	r5, #100	; 0x64
 80013a8:	f8c3 249c 	str.w	r2, [r3, #1180]	; 0x49c
 80013ac:	d1f9      	bne.n	80013a2 <_GLOBAL__sub_I_target_vel+0x5a>
 80013ae:	2300      	movs	r3, #0
 80013b0:	4619      	mov	r1, r3
 80013b2:	18e2      	adds	r2, r4, r3
 80013b4:	3304      	adds	r3, #4
 80013b6:	2b64      	cmp	r3, #100	; 0x64
 80013b8:	f8c2 1500 	str.w	r1, [r2, #1280]	; 0x500
 80013bc:	d1f9      	bne.n	80013b2 <_GLOBAL__sub_I_target_vel+0x6a>
 80013be:	2300      	movs	r3, #0
 80013c0:	4619      	mov	r1, r3
 80013c2:	18e2      	adds	r2, r4, r3
 80013c4:	3301      	adds	r3, #1
 80013c6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80013ca:	f882 109c 	strb.w	r1, [r2, #156]	; 0x9c
 80013ce:	d1f8      	bne.n	80013c2 <_GLOBAL__sub_I_target_vel+0x7a>
 80013d0:	2300      	movs	r3, #0
 80013d2:	461d      	mov	r5, r3
 80013d4:	18e2      	adds	r2, r4, r3
 80013d6:	3301      	adds	r3, #1
 80013d8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80013dc:	f882 529c 	strb.w	r5, [r2, #668]	; 0x29c
 80013e0:	d1f8      	bne.n	80013d4 <_GLOBAL__sub_I_target_vel+0x8c>
 80013e2:	4a17      	ldr	r2, [pc, #92]	; (8001440 <_GLOBAL__sub_I_target_vel+0xf8>)
 80013e4:	4917      	ldr	r1, [pc, #92]	; (8001444 <_GLOBAL__sub_I_target_vel+0xfc>)
 80013e6:	4813      	ldr	r0, [pc, #76]	; (8001434 <_GLOBAL__sub_I_target_vel+0xec>)
 80013e8:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 80013ec:	f004 ff0e 	bl	800620c <__aeabi_atexit>
 80013f0:	221c      	movs	r2, #28
 80013f2:	2100      	movs	r1, #0
 80013f4:	4814      	ldr	r0, [pc, #80]	; (8001448 <_GLOBAL__sub_I_target_vel+0x100>)
 80013f6:	f006 f9b8 	bl	800776a <memset>
 80013fa:	2113      	movs	r1, #19
 80013fc:	4812      	ldr	r0, [pc, #72]	; (8001448 <_GLOBAL__sub_I_target_vel+0x100>)
 80013fe:	f000 fb3e 	bl	8001a7e <gpio_init_out>
 8001402:	4a12      	ldr	r2, [pc, #72]	; (800144c <_GLOBAL__sub_I_target_vel+0x104>)
 8001404:	4b12      	ldr	r3, [pc, #72]	; (8001450 <_GLOBAL__sub_I_target_vel+0x108>)
 8001406:	4913      	ldr	r1, [pc, #76]	; (8001454 <_GLOBAL__sub_I_target_vel+0x10c>)
 8001408:	e882 0028 	stmia.w	r2, {r3, r5}
 800140c:	4b12      	ldr	r3, [pc, #72]	; (8001458 <_GLOBAL__sub_I_target_vel+0x110>)
 800140e:	e883 0006 	stmia.w	r3, {r1, r2}
 8001412:	611d      	str	r5, [r3, #16]
 8001414:	4b11      	ldr	r3, [pc, #68]	; (800145c <_GLOBAL__sub_I_target_vel+0x114>)
 8001416:	4a12      	ldr	r2, [pc, #72]	; (8001460 <_GLOBAL__sub_I_target_vel+0x118>)
 8001418:	601a      	str	r2, [r3, #0]
 800141a:	4a12      	ldr	r2, [pc, #72]	; (8001464 <_GLOBAL__sub_I_target_vel+0x11c>)
 800141c:	60da      	str	r2, [r3, #12]
 800141e:	4a12      	ldr	r2, [pc, #72]	; (8001468 <_GLOBAL__sub_I_target_vel+0x120>)
 8001420:	611a      	str	r2, [r3, #16]
 8001422:	4a12      	ldr	r2, [pc, #72]	; (800146c <_GLOBAL__sub_I_target_vel+0x124>)
 8001424:	615a      	str	r2, [r3, #20]
 8001426:	2201      	movs	r2, #1
 8001428:	619a      	str	r2, [r3, #24]
 800142a:	4a11      	ldr	r2, [pc, #68]	; (8001470 <_GLOBAL__sub_I_target_vel+0x128>)
 800142c:	609a      	str	r2, [r3, #8]
 800142e:	b003      	add	sp, #12
 8001430:	bd30      	pop	{r4, r5, pc}
 8001432:	bf00      	nop
 8001434:	20000810 	.word	0x20000810
 8001438:	08008114 	.word	0x08008114
 800143c:	080080fc 	.word	0x080080fc
 8001440:	20000000 	.word	0x20000000
 8001444:	080010e1 	.word	0x080010e1
 8001448:	200007f4 	.word	0x200007f4
 800144c:	200007e0 	.word	0x200007e0
 8001450:	08008260 	.word	0x08008260
 8001454:	08008288 	.word	0x08008288
 8001458:	200007cc 	.word	0x200007cc
 800145c:	20000dc8 	.word	0x20000dc8
 8001460:	08008278 	.word	0x08008278
 8001464:	08008248 	.word	0x08008248
 8001468:	08008391 	.word	0x08008391
 800146c:	080011f1 	.word	0x080011f1
 8001470:	08008290 	.word	0x08008290
 8001474:	00000000 	.word	0x00000000

08001478 <decode()>:
 8001478:	4c2f      	ldr	r4, [pc, #188]	; (8001538 <decode()+0xc0>)
 800147a:	b580      	push	{r7, lr}
 800147c:	6fa1      	ldr	r1, [r4, #120]	; 0x78
 800147e:	1d20      	adds	r0, r4, #4
 8001480:	f004 fb73 	bl	8005b6a <mbed::SerialBase::baud(int)>
 8001484:	2300      	movs	r3, #0
 8001486:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 800148a:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
 800148e:	f8c4 3570 	str.w	r3, [r4, #1392]	; 0x570
 8001492:	f8c4 356c 	str.w	r3, [r4, #1388]	; 0x56c
 8001496:	f204 42fc 	addw	r2, r4, #1276	; 0x4fc
 800149a:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800149e:	2900      	cmp	r1, #0
 80014a0:	d13e      	bne.n	8001520 <decode()+0xa8>
 80014a2:	f503 71a0 	add.w	r1, r3, #320	; 0x140
 80014a6:	4a25      	ldr	r2, [pc, #148]	; (800153c <decode()+0xc4>)
 80014a8:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 80014ac:	3364      	adds	r3, #100	; 0x64
 80014ae:	6053      	str	r3, [r2, #4]
 80014b0:	4a23      	ldr	r2, [pc, #140]	; (8001540 <decode()+0xc8>)
 80014b2:	2300      	movs	r3, #0
 80014b4:	f852 1f04 	ldr.w	r1, [r2, #4]!
 80014b8:	2900      	cmp	r1, #0
 80014ba:	d135      	bne.n	8001528 <decode()+0xb0>
 80014bc:	4a21      	ldr	r2, [pc, #132]	; (8001544 <decode()+0xcc>)
 80014be:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 80014c2:	337d      	adds	r3, #125	; 0x7d
 80014c4:	f8c1 249c 	str.w	r2, [r1, #1180]	; 0x49c
 80014c8:	6093      	str	r3, [r2, #8]
 80014ca:	60d4      	str	r4, [r2, #12]
 80014cc:	a718      	add	r7, pc, #96	; (adr r7, 8001530 <decode()+0xb8>)
 80014ce:	e9d7 6700 	ldrd	r6, r7, [r7]
 80014d2:	f8df 9078 	ldr.w	r9, [pc, #120]	; 800154c <decode()+0xd4>
 80014d6:	4d1c      	ldr	r5, [pc, #112]	; (8001548 <decode()+0xd0>)
 80014d8:	2400      	movs	r4, #0
 80014da:	f8d9 0000 	ldr.w	r0, [r9]
 80014de:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8001550 <decode()+0xd8>
 80014e2:	f005 f9f9 	bl	80068d8 <__aeabi_ui2d>
 80014e6:	4632      	mov	r2, r6
 80014e8:	463b      	mov	r3, r7
 80014ea:	f005 fa6b 	bl	80069c4 <__aeabi_dmul>
 80014ee:	4602      	mov	r2, r0
 80014f0:	460b      	mov	r3, r1
 80014f2:	4620      	mov	r0, r4
 80014f4:	4629      	mov	r1, r5
 80014f6:	f005 fb8f 	bl	8006c18 <__aeabi_ddiv>
 80014fa:	f005 fcfd 	bl	8006ef8 <__aeabi_d2uiz>
 80014fe:	4b11      	ldr	r3, [pc, #68]	; (8001544 <decode()+0xcc>)
 8001500:	f8c8 0004 	str.w	r0, [r8, #4]
 8001504:	68d8      	ldr	r0, [r3, #12]
 8001506:	6899      	ldr	r1, [r3, #8]
 8001508:	6802      	ldr	r2, [r0, #0]
 800150a:	f8d2 a000 	ldr.w	r10, [r2]
 800150e:	4642      	mov	r2, r8
 8001510:	47d0      	blx	r10
 8001512:	4809      	ldr	r0, [pc, #36]	; (8001538 <decode()+0xc0>)
 8001514:	f7ff fc74 	bl	8000e00 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8001518:	200a      	movs	r0, #10
 800151a:	f004 fd75 	bl	8006008 <wait_ms>
 800151e:	e7dc      	b.n	80014da <decode()+0x62>
 8001520:	3301      	adds	r3, #1
 8001522:	2b19      	cmp	r3, #25
 8001524:	d1b9      	bne.n	800149a <decode()+0x22>
 8001526:	e7c3      	b.n	80014b0 <decode()+0x38>
 8001528:	3301      	adds	r3, #1
 800152a:	2b19      	cmp	r3, #25
 800152c:	d1c2      	bne.n	80014b4 <decode()+0x3c>
 800152e:	e7cd      	b.n	80014cc <decode()+0x54>
 8001530:	a0b5ed8d 	.word	0xa0b5ed8d
 8001534:	3eb0c6f7 	.word	0x3eb0c6f7
 8001538:	20000810 	.word	0x20000810
 800153c:	20000dc8 	.word	0x20000dc8
 8001540:	20000ca8 	.word	0x20000ca8
 8001544:	200007cc 	.word	0x200007cc
 8001548:	3ff00000 	.word	0x3ff00000
 800154c:	2000017c 	.word	0x2000017c
 8001550:	200007e0 	.word	0x200007e0

08001554 <main>:
 8001554:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8001556:	4b0d      	ldr	r3, [pc, #52]	; (800158c <main+0x38>)
 8001558:	b993      	cbnz	r3, 8001580 <main+0x2c>
 800155a:	4669      	mov	r1, sp
 800155c:	480c      	ldr	r0, [pc, #48]	; (8001590 <main+0x3c>)
 800155e:	9303      	str	r3, [sp, #12]
 8001560:	f004 fef2 	bl	8006348 <rtos::Thread::start(mbed::Callback<void ()>)>
 8001564:	4668      	mov	r0, sp
 8001566:	f7ff f805 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 800156a:	4b0a      	ldr	r3, [pc, #40]	; (8001594 <main+0x40>)
 800156c:	b95b      	cbnz	r3, 8001586 <main+0x32>
 800156e:	4669      	mov	r1, sp
 8001570:	4809      	ldr	r0, [pc, #36]	; (8001598 <main+0x44>)
 8001572:	9303      	str	r3, [sp, #12]
 8001574:	f004 fee8 	bl	8006348 <rtos::Thread::start(mbed::Callback<void ()>)>
 8001578:	4668      	mov	r0, sp
 800157a:	f7fe fffb 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 800157e:	e7fe      	b.n	800157e <main+0x2a>
 8001580:	9300      	str	r3, [sp, #0]
 8001582:	4b06      	ldr	r3, [pc, #24]	; (800159c <main+0x48>)
 8001584:	e7e9      	b.n	800155a <main+0x6>
 8001586:	9300      	str	r3, [sp, #0]
 8001588:	4b04      	ldr	r3, [pc, #16]	; (800159c <main+0x48>)
 800158a:	e7f0      	b.n	800156e <main+0x1a>
 800158c:	08000659 	.word	0x08000659
 8001590:	20000de8 	.word	0x20000de8
 8001594:	08001479 	.word	0x08001479
 8001598:	20000e40 	.word	0x20000e40
 800159c:	08008120 	.word	0x08008120

080015a0 <_GLOBAL__sub_I_controlthread>:
 80015a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80015a4:	4d1c      	ldr	r5, [pc, #112]	; (8001618 <_GLOBAL__sub_I_controlthread+0x78>)
 80015a6:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8001628 <_GLOBAL__sub_I_controlthread+0x88>
 80015aa:	f8c5 8000 	str.w	r8, [r5]
 80015ae:	2400      	movs	r4, #0
 80015b0:	4621      	mov	r1, r4
 80015b2:	612c      	str	r4, [r5, #16]
 80015b4:	f105 002c 	add.w	r0, r5, #44	; 0x2c
 80015b8:	f004 ff24 	bl	8006404 <rtos::Semaphore::Semaphore(long)>
 80015bc:	f105 003c 	add.w	r0, r5, #60	; 0x3c
 80015c0:	f004 ff38 	bl	8006434 <rtos::Mutex::Mutex()>
 80015c4:	4f15      	ldr	r7, [pc, #84]	; (800161c <_GLOBAL__sub_I_controlthread+0x7c>)
 80015c6:	4e16      	ldr	r6, [pc, #88]	; (8001620 <_GLOBAL__sub_I_controlthread+0x80>)
 80015c8:	4623      	mov	r3, r4
 80015ca:	4621      	mov	r1, r4
 80015cc:	4628      	mov	r0, r5
 80015ce:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80015d2:	f004 fe5b 	bl	800628c <rtos::Thread::constructor(osPriority, unsigned long, unsigned char*)>
 80015d6:	4628      	mov	r0, r5
 80015d8:	4d12      	ldr	r5, [pc, #72]	; (8001624 <_GLOBAL__sub_I_controlthread+0x84>)
 80015da:	463a      	mov	r2, r7
 80015dc:	4631      	mov	r1, r6
 80015de:	f004 fe15 	bl	800620c <__aeabi_atexit>
 80015e2:	4621      	mov	r1, r4
 80015e4:	612c      	str	r4, [r5, #16]
 80015e6:	f105 002c 	add.w	r0, r5, #44	; 0x2c
 80015ea:	f8c5 8000 	str.w	r8, [r5]
 80015ee:	f004 ff09 	bl	8006404 <rtos::Semaphore::Semaphore(long)>
 80015f2:	f105 003c 	add.w	r0, r5, #60	; 0x3c
 80015f6:	f004 ff1d 	bl	8006434 <rtos::Mutex::Mutex()>
 80015fa:	4621      	mov	r1, r4
 80015fc:	4628      	mov	r0, r5
 80015fe:	4623      	mov	r3, r4
 8001600:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001604:	f004 fe42 	bl	800628c <rtos::Thread::constructor(osPriority, unsigned long, unsigned char*)>
 8001608:	463a      	mov	r2, r7
 800160a:	4631      	mov	r1, r6
 800160c:	4628      	mov	r0, r5
 800160e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001612:	f004 bdfb 	b.w	800620c <__aeabi_atexit>
 8001616:	bf00      	nop
 8001618:	20000de8 	.word	0x20000de8
 800161c:	20000000 	.word	0x20000000
 8001620:	080062f9 	.word	0x080062f9
 8001624:	20000e40 	.word	0x20000e40
 8001628:	08008854 	.word	0x08008854

0800162c <_start>:
 800162c:	4807      	ldr	r0, [pc, #28]	; (800164c <_start+0x20>)
 800162e:	4a08      	ldr	r2, [pc, #32]	; (8001650 <_start+0x24>)
 8001630:	b508      	push	{r3, lr}
 8001632:	1a12      	subs	r2, r2, r0
 8001634:	2100      	movs	r1, #0
 8001636:	f006 f898 	bl	800776a <memset>
 800163a:	f004 fda5 	bl	8006188 <software_init_hook>
 800163e:	f005 ffe7 	bl	8007610 <__libc_init_array>
 8001642:	f004 fda8 	bl	8006196 <__wrap_main>
 8001646:	f004 fde3 	bl	8006210 <__wrap_exit>
 800164a:	bf00      	nop
 800164c:	200000a8 	.word	0x200000a8
 8001650:	200030c8 	.word	0x200030c8

08001654 <abort>:
 8001654:	b508      	push	{r3, lr}
 8001656:	2001      	movs	r0, #1
 8001658:	f004 fdda 	bl	8006210 <__wrap_exit>

0800165c <__cxa_pure_virtual>:
 800165c:	b508      	push	{r3, lr}
 800165e:	f7ff fff9 	bl	8001654 <abort>
	...

08001664 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8001664:	b530      	push	{r4, r5, lr}
 8001666:	6802      	ldr	r2, [r0, #0]
 8001668:	680d      	ldr	r5, [r1, #0]
 800166a:	4c04      	ldr	r4, [pc, #16]	; (800167c <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 800166c:	fbb5 f3f4 	udiv	r3, r5, r4
 8001670:	441a      	add	r2, r3
 8001672:	fb04 5313 	mls	r3, r4, r3, r5
 8001676:	6002      	str	r2, [r0, #0]
 8001678:	600b      	str	r3, [r1, #0]
 800167a:	bd30      	pop	{r4, r5, pc}
 800167c:	3b9aca00 	.word	0x3b9aca00

08001680 <BufferedSerial::readable()>:
 8001680:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8001682:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8001684:	1a10      	subs	r0, r2, r0
 8001686:	bf18      	it	ne
 8001688:	2001      	movne	r0, #1
 800168a:	4770      	bx	lr

0800168c <BufferedSerial::writeable()>:
 800168c:	2001      	movs	r0, #1
 800168e:	4770      	bx	lr

08001690 <BufferedSerial::getc()>:
 8001690:	b510      	push	{r4, lr}
 8001692:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8001694:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 8001696:	4603      	mov	r3, r0
 8001698:	1c50      	adds	r0, r2, #1
 800169a:	6558      	str	r0, [r3, #84]	; 0x54
 800169c:	5c88      	ldrb	r0, [r1, r2]
 800169e:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80016a0:	6d5c      	ldr	r4, [r3, #84]	; 0x54
 80016a2:	3a01      	subs	r2, #1
 80016a4:	fbb4 f1f2 	udiv	r1, r4, r2
 80016a8:	fb02 4211 	mls	r2, r2, r1, r4
 80016ac:	655a      	str	r2, [r3, #84]	; 0x54
 80016ae:	bd10      	pop	{r4, pc}

080016b0 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 80016b0:	4603      	mov	r3, r0
 80016b2:	b110      	cbz	r0, 80016ba <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 80016b4:	c907      	ldmia	r1, {r0, r1, r2}
 80016b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80016ba:	4770      	bx	lr

080016bc <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 80016bc:	4770      	bx	lr

080016be <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 80016be:	6842      	ldr	r2, [r0, #4]
 80016c0:	6881      	ldr	r1, [r0, #8]
 80016c2:	6803      	ldr	r3, [r0, #0]
 80016c4:	f012 0f01 	tst.w	r2, #1
 80016c8:	ea4f 0262 	mov.w	r2, r2, asr #1
 80016cc:	bf1c      	itt	ne
 80016ce:	5888      	ldrne	r0, [r1, r2]
 80016d0:	58c3      	ldrne	r3, [r0, r3]
 80016d2:	1888      	adds	r0, r1, r2
 80016d4:	4718      	bx	r3
	...

080016d8 <mbed::SerialBase::~SerialBase()>:
 80016d8:	b570      	push	{r4, r5, r6, lr}
 80016da:	4605      	mov	r5, r0
 80016dc:	4b07      	ldr	r3, [pc, #28]	; (80016fc <mbed::SerialBase::~SerialBase()+0x24>)
 80016de:	f845 3b28 	str.w	r3, [r5], #40
 80016e2:	4606      	mov	r6, r0
 80016e4:	b145      	cbz	r5, 80016f8 <mbed::SerialBase::~SerialBase()+0x20>
 80016e6:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80016ea:	42ac      	cmp	r4, r5
 80016ec:	d004      	beq.n	80016f8 <mbed::SerialBase::~SerialBase()+0x20>
 80016ee:	3c10      	subs	r4, #16
 80016f0:	4620      	mov	r0, r4
 80016f2:	f7fe ff3f 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 80016f6:	e7f8      	b.n	80016ea <mbed::SerialBase::~SerialBase()+0x12>
 80016f8:	4630      	mov	r0, r6
 80016fa:	bd70      	pop	{r4, r5, r6, pc}
 80016fc:	080087e0 	.word	0x080087e0

08001700 <mbed::SerialBase::~SerialBase()>:
 8001700:	b510      	push	{r4, lr}
 8001702:	4604      	mov	r4, r0
 8001704:	f7ff ffe8 	bl	80016d8 <mbed::SerialBase::~SerialBase()>
 8001708:	4620      	mov	r0, r4
 800170a:	f004 fd9d 	bl	8006248 <operator delete(void*)>
 800170e:	4620      	mov	r0, r4
 8001710:	bd10      	pop	{r4, pc}
	...

08001714 <BufferedSerial::~BufferedSerial()>:
 8001714:	b530      	push	{r4, r5, lr}
 8001716:	4b13      	ldr	r3, [pc, #76]	; (8001764 <BufferedSerial::~BufferedSerial()+0x50>)
 8001718:	6003      	str	r3, [r0, #0]
 800171a:	b085      	sub	sp, #20
 800171c:	2500      	movs	r5, #0
 800171e:	462a      	mov	r2, r5
 8001720:	4669      	mov	r1, sp
 8001722:	4604      	mov	r4, r0
 8001724:	9503      	str	r5, [sp, #12]
 8001726:	f004 fa77 	bl	8005c18 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800172a:	4668      	mov	r0, sp
 800172c:	f7fe ff22 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8001730:	2201      	movs	r2, #1
 8001732:	4669      	mov	r1, sp
 8001734:	4620      	mov	r0, r4
 8001736:	9503      	str	r5, [sp, #12]
 8001738:	f004 fa6e 	bl	8005c18 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800173c:	4668      	mov	r0, sp
 800173e:	f7fe ff19 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8001742:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001746:	f000 f945 	bl	80019d4 <Buffer<char>::~Buffer()>
 800174a:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 800174e:	f000 f941 	bl	80019d4 <Buffer<char>::~Buffer()>
 8001752:	4b05      	ldr	r3, [pc, #20]	; (8001768 <BufferedSerial::~BufferedSerial()+0x54>)
 8001754:	6023      	str	r3, [r4, #0]
 8001756:	4620      	mov	r0, r4
 8001758:	f7ff ffbe 	bl	80016d8 <mbed::SerialBase::~SerialBase()>
 800175c:	4620      	mov	r0, r4
 800175e:	b005      	add	sp, #20
 8001760:	bd30      	pop	{r4, r5, pc}
 8001762:	bf00      	nop
 8001764:	0800839c 	.word	0x0800839c
 8001768:	080087f8 	.word	0x080087f8

0800176c <BufferedSerial::~BufferedSerial()>:
 800176c:	b510      	push	{r4, lr}
 800176e:	4604      	mov	r4, r0
 8001770:	f7ff ffd0 	bl	8001714 <BufferedSerial::~BufferedSerial()>
 8001774:	4620      	mov	r0, r4
 8001776:	f004 fd67 	bl	8006248 <operator delete(void*)>
 800177a:	4620      	mov	r0, r4
 800177c:	bd10      	pop	{r4, pc}

0800177e <BufferedSerial::txIrq()>:
 800177e:	b530      	push	{r4, r5, lr}
 8001780:	4604      	mov	r4, r0
 8001782:	b085      	sub	sp, #20
 8001784:	1d05      	adds	r5, r0, #4
 8001786:	4628      	mov	r0, r5
 8001788:	f002 ff36 	bl	80045f8 <serial_writable>
 800178c:	b1f0      	cbz	r0, 80017cc <BufferedSerial::txIrq()+0x4e>
 800178e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8001790:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001792:	429a      	cmp	r2, r3
 8001794:	d010      	beq.n	80017b8 <BufferedSerial::txIrq()+0x3a>
 8001796:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001798:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800179a:	1c59      	adds	r1, r3, #1
 800179c:	6661      	str	r1, [r4, #100]	; 0x64
 800179e:	5cd1      	ldrb	r1, [r2, r3]
 80017a0:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 80017a2:	6e60      	ldr	r0, [r4, #100]	; 0x64
 80017a4:	3b01      	subs	r3, #1
 80017a6:	fbb0 f2f3 	udiv	r2, r0, r3
 80017aa:	fb03 0312 	mls	r3, r3, r2, r0
 80017ae:	6663      	str	r3, [r4, #100]	; 0x64
 80017b0:	4628      	mov	r0, r5
 80017b2:	f002 ff2d 	bl	8004610 <serial_putc>
 80017b6:	e7e6      	b.n	8001786 <BufferedSerial::txIrq()+0x8>
 80017b8:	2300      	movs	r3, #0
 80017ba:	4620      	mov	r0, r4
 80017bc:	2201      	movs	r2, #1
 80017be:	4669      	mov	r1, sp
 80017c0:	9303      	str	r3, [sp, #12]
 80017c2:	f004 fa29 	bl	8005c18 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80017c6:	4668      	mov	r0, sp
 80017c8:	f7fe fed4 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 80017cc:	b005      	add	sp, #20
 80017ce:	bd30      	pop	{r4, r5, pc}

080017d0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 80017d0:	b510      	push	{r4, lr}
 80017d2:	b086      	sub	sp, #24
 80017d4:	e88d 000c 	stmia.w	sp, {r2, r3}
 80017d8:	9b01      	ldr	r3, [sp, #4]
 80017da:	9202      	str	r2, [sp, #8]
 80017dc:	9303      	str	r3, [sp, #12]
 80017de:	9104      	str	r1, [sp, #16]
 80017e0:	4b05      	ldr	r3, [pc, #20]	; (80017f8 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 80017e2:	f89d 2020 	ldrb.w	r2, [sp, #32]
 80017e6:	9305      	str	r3, [sp, #20]
 80017e8:	a902      	add	r1, sp, #8
 80017ea:	f004 fa15 	bl	8005c18 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80017ee:	a802      	add	r0, sp, #8
 80017f0:	f7fe fec0 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 80017f4:	b006      	add	sp, #24
 80017f6:	bd10      	pop	{r4, pc}
 80017f8:	080082fc 	.word	0x080082fc

080017fc <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 80017fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80017fe:	4604      	mov	r4, r0
 8001800:	461d      	mov	r5, r3
 8001802:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8001806:	9e08      	ldr	r6, [sp, #32]
 8001808:	f004 fa52 	bl	8005cb0 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 800180c:	4620      	mov	r0, r4
 800180e:	4b0e      	ldr	r3, [pc, #56]	; (8001848 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x4c>)
 8001810:	f840 3b4c 	str.w	r3, [r0], #76
 8001814:	4629      	mov	r1, r5
 8001816:	f000 f8ec 	bl	80019f2 <Buffer<char>::Buffer(unsigned long)>
 800181a:	fb06 f105 	mul.w	r1, r6, r5
 800181e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001822:	f000 f8e6 	bl	80019f2 <Buffer<char>::Buffer(unsigned long)>
 8001826:	4b09      	ldr	r3, [pc, #36]	; (800184c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8001828:	9302      	str	r3, [sp, #8]
 800182a:	2300      	movs	r3, #0
 800182c:	9303      	str	r3, [sp, #12]
 800182e:	9300      	str	r3, [sp, #0]
 8001830:	ab04      	add	r3, sp, #16
 8001832:	4620      	mov	r0, r4
 8001834:	e913 000c 	ldmdb	r3, {r2, r3}
 8001838:	4621      	mov	r1, r4
 800183a:	f7ff ffc9 	bl	80017d0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 800183e:	4620      	mov	r0, r4
 8001840:	66e5      	str	r5, [r4, #108]	; 0x6c
 8001842:	6726      	str	r6, [r4, #112]	; 0x70
 8001844:	b004      	add	sp, #16
 8001846:	bd70      	pop	{r4, r5, r6, pc}
 8001848:	0800839c 	.word	0x0800839c
 800184c:	080018b7 	.word	0x080018b7

08001850 <BufferedSerial::prime()>:
 8001850:	b570      	push	{r4, r5, r6, lr}
 8001852:	4604      	mov	r4, r0
 8001854:	b086      	sub	sp, #24
 8001856:	3004      	adds	r0, #4
 8001858:	f002 fece 	bl	80045f8 <serial_writable>
 800185c:	b1c0      	cbz	r0, 8001890 <BufferedSerial::prime()+0x40>
 800185e:	ad02      	add	r5, sp, #8
 8001860:	2201      	movs	r2, #1
 8001862:	4629      	mov	r1, r5
 8001864:	2600      	movs	r6, #0
 8001866:	4620      	mov	r0, r4
 8001868:	9605      	str	r6, [sp, #20]
 800186a:	f004 f9d5 	bl	8005c18 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800186e:	4628      	mov	r0, r5
 8001870:	f7fe fe80 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8001874:	4620      	mov	r0, r4
 8001876:	f7ff ff82 	bl	800177e <BufferedSerial::txIrq()>
 800187a:	4b06      	ldr	r3, [pc, #24]	; (8001894 <BufferedSerial::prime()+0x44>)
 800187c:	9302      	str	r3, [sp, #8]
 800187e:	2301      	movs	r3, #1
 8001880:	9603      	str	r6, [sp, #12]
 8001882:	9300      	str	r3, [sp, #0]
 8001884:	e895 000c 	ldmia.w	r5, {r2, r3}
 8001888:	4621      	mov	r1, r4
 800188a:	4620      	mov	r0, r4
 800188c:	f7ff ffa0 	bl	80017d0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001890:	b006      	add	sp, #24
 8001892:	bd70      	pop	{r4, r5, r6, pc}
 8001894:	0800177f 	.word	0x0800177f

08001898 <Buffer<char>::put(char)>:
 8001898:	6843      	ldr	r3, [r0, #4]
 800189a:	6802      	ldr	r2, [r0, #0]
 800189c:	b510      	push	{r4, lr}
 800189e:	1c5c      	adds	r4, r3, #1
 80018a0:	6044      	str	r4, [r0, #4]
 80018a2:	54d1      	strb	r1, [r2, r3]
 80018a4:	68c3      	ldr	r3, [r0, #12]
 80018a6:	6841      	ldr	r1, [r0, #4]
 80018a8:	3b01      	subs	r3, #1
 80018aa:	fbb1 f2f3 	udiv	r2, r1, r3
 80018ae:	fb03 1312 	mls	r3, r3, r2, r1
 80018b2:	6043      	str	r3, [r0, #4]
 80018b4:	bd10      	pop	{r4, pc}

080018b6 <BufferedSerial::rxIrq()>:
 80018b6:	b538      	push	{r3, r4, r5, lr}
 80018b8:	1d05      	adds	r5, r0, #4
 80018ba:	4604      	mov	r4, r0
 80018bc:	4628      	mov	r0, r5
 80018be:	f002 fe79 	bl	80045b4 <serial_readable>
 80018c2:	b138      	cbz	r0, 80018d4 <BufferedSerial::rxIrq()+0x1e>
 80018c4:	4628      	mov	r0, r5
 80018c6:	f002 fe81 	bl	80045cc <serial_getc>
 80018ca:	b2c1      	uxtb	r1, r0
 80018cc:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 80018d0:	f7ff ffe2 	bl	8001898 <Buffer<char>::put(char)>
 80018d4:	bd38      	pop	{r3, r4, r5, pc}

080018d6 <BufferedSerial::putc(int)>:
 80018d6:	b538      	push	{r3, r4, r5, lr}
 80018d8:	4605      	mov	r5, r0
 80018da:	460c      	mov	r4, r1
 80018dc:	305c      	adds	r0, #92	; 0x5c
 80018de:	b2c9      	uxtb	r1, r1
 80018e0:	f7ff ffda 	bl	8001898 <Buffer<char>::put(char)>
 80018e4:	4628      	mov	r0, r5
 80018e6:	f7ff ffb3 	bl	8001850 <BufferedSerial::prime()>
 80018ea:	4620      	mov	r0, r4
 80018ec:	bd38      	pop	{r3, r4, r5, pc}

080018ee <BufferedSerial::puts(char const*)>:
 80018ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80018f2:	4607      	mov	r7, r0
 80018f4:	460c      	mov	r4, r1
 80018f6:	b1b1      	cbz	r1, 8001926 <BufferedSerial::puts(char const*)+0x38>
 80018f8:	460d      	mov	r5, r1
 80018fa:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 80018fe:	462e      	mov	r6, r5
 8001900:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001904:	b121      	cbz	r1, 8001910 <BufferedSerial::puts(char const*)+0x22>
 8001906:	4640      	mov	r0, r8
 8001908:	f7ff ffc6 	bl	8001898 <Buffer<char>::put(char)>
 800190c:	4635      	mov	r5, r6
 800190e:	e7f6      	b.n	80018fe <BufferedSerial::puts(char const*)+0x10>
 8001910:	210a      	movs	r1, #10
 8001912:	4640      	mov	r0, r8
 8001914:	f7ff ffc0 	bl	8001898 <Buffer<char>::put(char)>
 8001918:	1b2c      	subs	r4, r5, r4
 800191a:	4638      	mov	r0, r7
 800191c:	f7ff ff98 	bl	8001850 <BufferedSerial::prime()>
 8001920:	1c60      	adds	r0, r4, #1
 8001922:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001926:	4608      	mov	r0, r1
 8001928:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800192c <BufferedSerial::write(void const*, unsigned int)>:
 800192c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001930:	4607      	mov	r7, r0
 8001932:	460d      	mov	r5, r1
 8001934:	b191      	cbz	r1, 800195c <BufferedSerial::write(void const*, unsigned int)+0x30>
 8001936:	b1a2      	cbz	r2, 8001962 <BufferedSerial::write(void const*, unsigned int)+0x36>
 8001938:	188c      	adds	r4, r1, r2
 800193a:	460e      	mov	r6, r1
 800193c:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 8001940:	42b4      	cmp	r4, r6
 8001942:	d005      	beq.n	8001950 <BufferedSerial::write(void const*, unsigned int)+0x24>
 8001944:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001948:	4640      	mov	r0, r8
 800194a:	f7ff ffa5 	bl	8001898 <Buffer<char>::put(char)>
 800194e:	e7f7      	b.n	8001940 <BufferedSerial::write(void const*, unsigned int)+0x14>
 8001950:	4638      	mov	r0, r7
 8001952:	f7ff ff7d 	bl	8001850 <BufferedSerial::prime()>
 8001956:	1b60      	subs	r0, r4, r5
 8001958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800195c:	4608      	mov	r0, r1
 800195e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001962:	4610      	mov	r0, r2
 8001964:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001968 <BufferedSerial::printf(char const*, ...)>:
 8001968:	b40e      	push	{r1, r2, r3}
 800196a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800196e:	b085      	sub	sp, #20
 8001970:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 8001972:	af02      	add	r7, sp, #8
 8001974:	1dd3      	adds	r3, r2, #7
 8001976:	f023 0307 	bic.w	r3, r3, #7
 800197a:	f107 0424 	add.w	r4, r7, #36	; 0x24
 800197e:	ebad 0d03 	sub.w	sp, sp, r3
 8001982:	f854 8b04 	ldr.w	r8, [r4], #4
 8001986:	ae02      	add	r6, sp, #8
 8001988:	4605      	mov	r5, r0
 800198a:	2100      	movs	r1, #0
 800198c:	4630      	mov	r0, r6
 800198e:	f005 feec 	bl	800776a <memset>
 8001992:	4622      	mov	r2, r4
 8001994:	4641      	mov	r1, r8
 8001996:	4630      	mov	r0, r6
 8001998:	607c      	str	r4, [r7, #4]
 800199a:	f006 f9d3 	bl	8007d44 <vsiprintf>
 800199e:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
 80019a0:	4283      	cmp	r3, r0
 80019a2:	4602      	mov	r2, r0
 80019a4:	d20c      	bcs.n	80019c0 <BufferedSerial::printf(char const*, ...)+0x58>
 80019a6:	9000      	str	r0, [sp, #0]
 80019a8:	225d      	movs	r2, #93	; 0x5d
 80019aa:	4808      	ldr	r0, [pc, #32]	; (80019cc <BufferedSerial::printf(char const*, ...)+0x64>)
 80019ac:	4908      	ldr	r1, [pc, #32]	; (80019d0 <BufferedSerial::printf(char const*, ...)+0x68>)
 80019ae:	f000 f97b 	bl	8001ca8 <error>
 80019b2:	2000      	movs	r0, #0
 80019b4:	370c      	adds	r7, #12
 80019b6:	46bd      	mov	sp, r7
 80019b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80019bc:	b003      	add	sp, #12
 80019be:	4770      	bx	lr
 80019c0:	4631      	mov	r1, r6
 80019c2:	4628      	mov	r0, r5
 80019c4:	f7ff ffb2 	bl	800192c <BufferedSerial::write(void const*, unsigned int)>
 80019c8:	e7f4      	b.n	80019b4 <BufferedSerial::printf(char const*, ...)+0x4c>
 80019ca:	bf00      	nop
 80019cc:	08008358 	.word	0x08008358
 80019d0:	08008308 	.word	0x08008308

080019d4 <Buffer<char>::~Buffer()>:
 80019d4:	b510      	push	{r4, lr}
 80019d6:	4604      	mov	r4, r0
 80019d8:	6800      	ldr	r0, [r0, #0]
 80019da:	b108      	cbz	r0, 80019e0 <Buffer<char>::~Buffer()+0xc>
 80019dc:	f004 fc30 	bl	8006240 <operator delete[](void*)>
 80019e0:	4620      	mov	r0, r4
 80019e2:	bd10      	pop	{r4, pc}

080019e4 <Buffer<char>::clear()>:
 80019e4:	2100      	movs	r1, #0
 80019e6:	6041      	str	r1, [r0, #4]
 80019e8:	68c2      	ldr	r2, [r0, #12]
 80019ea:	6081      	str	r1, [r0, #8]
 80019ec:	6800      	ldr	r0, [r0, #0]
 80019ee:	f005 bebc 	b.w	800776a <memset>

080019f2 <Buffer<char>::Buffer(unsigned long)>:
 80019f2:	b538      	push	{r3, r4, r5, lr}
 80019f4:	4604      	mov	r4, r0
 80019f6:	4608      	mov	r0, r1
 80019f8:	460d      	mov	r5, r1
 80019fa:	f004 fc15 	bl	8006228 <operator new[](unsigned int)>
 80019fe:	60e5      	str	r5, [r4, #12]
 8001a00:	6020      	str	r0, [r4, #0]
 8001a02:	4620      	mov	r0, r4
 8001a04:	f7ff ffee 	bl	80019e4 <Buffer<char>::clear()>
 8001a08:	4620      	mov	r0, r4
 8001a0a:	bd38      	pop	{r3, r4, r5, pc}

08001a0c <_gpio_init_in>:
 8001a0c:	b570      	push	{r4, r5, r6, lr}
 8001a0e:	460e      	mov	r6, r1
 8001a10:	4604      	mov	r4, r0
 8001a12:	4615      	mov	r5, r2
 8001a14:	f002 f8b0 	bl	8003b78 <gpio_init>
 8001a18:	3601      	adds	r6, #1
 8001a1a:	d009      	beq.n	8001a30 <_gpio_init_in+0x24>
 8001a1c:	4620      	mov	r0, r4
 8001a1e:	2100      	movs	r1, #0
 8001a20:	f002 f8d0 	bl	8003bc4 <gpio_dir>
 8001a24:	4629      	mov	r1, r5
 8001a26:	4620      	mov	r0, r4
 8001a28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001a2c:	f002 b8c6 	b.w	8003bbc <gpio_mode>
 8001a30:	bd70      	pop	{r4, r5, r6, pc}

08001a32 <_gpio_init_out.part.1>:
 8001a32:	b538      	push	{r3, r4, r5, lr}
 8001a34:	4604      	mov	r4, r0
 8001a36:	460d      	mov	r5, r1
 8001a38:	6803      	ldr	r3, [r0, #0]
 8001a3a:	b15a      	cbz	r2, 8001a54 <_gpio_init_out.part.1+0x22>
 8001a3c:	6882      	ldr	r2, [r0, #8]
 8001a3e:	6013      	str	r3, [r2, #0]
 8001a40:	4620      	mov	r0, r4
 8001a42:	2101      	movs	r1, #1
 8001a44:	f002 f8be 	bl	8003bc4 <gpio_dir>
 8001a48:	4629      	mov	r1, r5
 8001a4a:	4620      	mov	r0, r4
 8001a4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001a50:	f002 b8b4 	b.w	8003bbc <gpio_mode>
 8001a54:	68c2      	ldr	r2, [r0, #12]
 8001a56:	e7f2      	b.n	8001a3e <_gpio_init_out.part.1+0xc>

08001a58 <gpio_init_in>:
 8001a58:	2200      	movs	r2, #0
 8001a5a:	f7ff bfd7 	b.w	8001a0c <_gpio_init_in>

08001a5e <gpio_init_out_ex>:
 8001a5e:	b570      	push	{r4, r5, r6, lr}
 8001a60:	460e      	mov	r6, r1
 8001a62:	4604      	mov	r4, r0
 8001a64:	4615      	mov	r5, r2
 8001a66:	f002 f887 	bl	8003b78 <gpio_init>
 8001a6a:	3601      	adds	r6, #1
 8001a6c:	d006      	beq.n	8001a7c <gpio_init_out_ex+0x1e>
 8001a6e:	462a      	mov	r2, r5
 8001a70:	4620      	mov	r0, r4
 8001a72:	2100      	movs	r1, #0
 8001a74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001a78:	f7ff bfdb 	b.w	8001a32 <_gpio_init_out.part.1>
 8001a7c:	bd70      	pop	{r4, r5, r6, pc}

08001a7e <gpio_init_out>:
 8001a7e:	2200      	movs	r2, #0
 8001a80:	f7ff bfed 	b.w	8001a5e <gpio_init_out_ex>

08001a84 <get_us_ticker_data>:
 8001a84:	4800      	ldr	r0, [pc, #0]	; (8001a88 <get_us_ticker_data+0x4>)
 8001a86:	4770      	bx	lr
 8001a88:	080083c8 	.word	0x080083c8

08001a8c <us_ticker_irq_handler>:
 8001a8c:	4801      	ldr	r0, [pc, #4]	; (8001a94 <us_ticker_irq_handler+0x8>)
 8001a8e:	f000 b80c 	b.w	8001aaa <ticker_irq_handler>
 8001a92:	bf00      	nop
 8001a94:	080083c8 	.word	0x080083c8

08001a98 <ticker_set_handler>:
 8001a98:	b538      	push	{r3, r4, r5, lr}
 8001a9a:	6803      	ldr	r3, [r0, #0]
 8001a9c:	4604      	mov	r4, r0
 8001a9e:	681b      	ldr	r3, [r3, #0]
 8001aa0:	460d      	mov	r5, r1
 8001aa2:	4798      	blx	r3
 8001aa4:	6863      	ldr	r3, [r4, #4]
 8001aa6:	601d      	str	r5, [r3, #0]
 8001aa8:	bd38      	pop	{r3, r4, r5, pc}

08001aaa <ticker_irq_handler>:
 8001aaa:	6803      	ldr	r3, [r0, #0]
 8001aac:	b570      	push	{r4, r5, r6, lr}
 8001aae:	68db      	ldr	r3, [r3, #12]
 8001ab0:	4604      	mov	r4, r0
 8001ab2:	4798      	blx	r3
 8001ab4:	6863      	ldr	r3, [r4, #4]
 8001ab6:	685a      	ldr	r2, [r3, #4]
 8001ab8:	6823      	ldr	r3, [r4, #0]
 8001aba:	b91a      	cbnz	r2, 8001ac4 <ticker_irq_handler+0x1a>
 8001abc:	689b      	ldr	r3, [r3, #8]
 8001abe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001ac2:	4718      	bx	r3
 8001ac4:	685b      	ldr	r3, [r3, #4]
 8001ac6:	6815      	ldr	r5, [r2, #0]
 8001ac8:	4798      	blx	r3
 8001aca:	6863      	ldr	r3, [r4, #4]
 8001acc:	1a28      	subs	r0, r5, r0
 8001ace:	2800      	cmp	r0, #0
 8001ad0:	685a      	ldr	r2, [r3, #4]
 8001ad2:	dc07      	bgt.n	8001ae4 <ticker_irq_handler+0x3a>
 8001ad4:	6891      	ldr	r1, [r2, #8]
 8001ad6:	6059      	str	r1, [r3, #4]
 8001ad8:	681b      	ldr	r3, [r3, #0]
 8001ada:	2b00      	cmp	r3, #0
 8001adc:	d0ea      	beq.n	8001ab4 <ticker_irq_handler+0xa>
 8001ade:	6850      	ldr	r0, [r2, #4]
 8001ae0:	4798      	blx	r3
 8001ae2:	e7e7      	b.n	8001ab4 <ticker_irq_handler+0xa>
 8001ae4:	6823      	ldr	r3, [r4, #0]
 8001ae6:	6810      	ldr	r0, [r2, #0]
 8001ae8:	691b      	ldr	r3, [r3, #16]
 8001aea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001aee:	4718      	bx	r3

08001af0 <ticker_insert_event>:
 8001af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001af2:	4606      	mov	r6, r0
 8001af4:	460c      	mov	r4, r1
 8001af6:	461f      	mov	r7, r3
 8001af8:	4615      	mov	r5, r2
 8001afa:	f000 f8ab 	bl	8001c54 <core_util_critical_section_enter>
 8001afe:	6870      	ldr	r0, [r6, #4]
 8001b00:	e884 00a0 	stmia.w	r4, {r5, r7}
 8001b04:	6843      	ldr	r3, [r0, #4]
 8001b06:	2100      	movs	r1, #0
 8001b08:	b953      	cbnz	r3, 8001b20 <ticker_insert_event+0x30>
 8001b0a:	60a3      	str	r3, [r4, #8]
 8001b0c:	b979      	cbnz	r1, 8001b2e <ticker_insert_event+0x3e>
 8001b0e:	6833      	ldr	r3, [r6, #0]
 8001b10:	6044      	str	r4, [r0, #4]
 8001b12:	691b      	ldr	r3, [r3, #16]
 8001b14:	4628      	mov	r0, r5
 8001b16:	4798      	blx	r3
 8001b18:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001b1c:	f000 b8b0 	b.w	8001c80 <core_util_critical_section_exit>
 8001b20:	681a      	ldr	r2, [r3, #0]
 8001b22:	1aaa      	subs	r2, r5, r2
 8001b24:	2a00      	cmp	r2, #0
 8001b26:	dbf0      	blt.n	8001b0a <ticker_insert_event+0x1a>
 8001b28:	4619      	mov	r1, r3
 8001b2a:	689b      	ldr	r3, [r3, #8]
 8001b2c:	e7ec      	b.n	8001b08 <ticker_insert_event+0x18>
 8001b2e:	608c      	str	r4, [r1, #8]
 8001b30:	e7f2      	b.n	8001b18 <ticker_insert_event+0x28>

08001b32 <ticker_remove_event>:
 8001b32:	b538      	push	{r3, r4, r5, lr}
 8001b34:	4605      	mov	r5, r0
 8001b36:	460c      	mov	r4, r1
 8001b38:	f000 f88c 	bl	8001c54 <core_util_critical_section_enter>
 8001b3c:	686a      	ldr	r2, [r5, #4]
 8001b3e:	6853      	ldr	r3, [r2, #4]
 8001b40:	42a3      	cmp	r3, r4
 8001b42:	d10e      	bne.n	8001b62 <ticker_remove_event+0x30>
 8001b44:	689b      	ldr	r3, [r3, #8]
 8001b46:	6053      	str	r3, [r2, #4]
 8001b48:	682a      	ldr	r2, [r5, #0]
 8001b4a:	b92b      	cbnz	r3, 8001b58 <ticker_remove_event+0x26>
 8001b4c:	6893      	ldr	r3, [r2, #8]
 8001b4e:	4798      	blx	r3
 8001b50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001b54:	f000 b894 	b.w	8001c80 <core_util_critical_section_exit>
 8001b58:	6912      	ldr	r2, [r2, #16]
 8001b5a:	6818      	ldr	r0, [r3, #0]
 8001b5c:	4790      	blx	r2
 8001b5e:	e7f7      	b.n	8001b50 <ticker_remove_event+0x1e>
 8001b60:	4613      	mov	r3, r2
 8001b62:	2b00      	cmp	r3, #0
 8001b64:	d0f4      	beq.n	8001b50 <ticker_remove_event+0x1e>
 8001b66:	689a      	ldr	r2, [r3, #8]
 8001b68:	4294      	cmp	r4, r2
 8001b6a:	d1f9      	bne.n	8001b60 <ticker_remove_event+0x2e>
 8001b6c:	68a2      	ldr	r2, [r4, #8]
 8001b6e:	609a      	str	r2, [r3, #8]
 8001b70:	e7ee      	b.n	8001b50 <ticker_remove_event+0x1e>

08001b72 <ticker_read>:
 8001b72:	6803      	ldr	r3, [r0, #0]
 8001b74:	685b      	ldr	r3, [r3, #4]
 8001b76:	4718      	bx	r3

08001b78 <pinmap_pinout>:
 8001b78:	b510      	push	{r4, lr}
 8001b7a:	4604      	mov	r4, r0
 8001b7c:	3001      	adds	r0, #1
 8001b7e:	d10d      	bne.n	8001b9c <pinmap_pinout+0x24>
 8001b80:	bd10      	pop	{r4, pc}
 8001b82:	429c      	cmp	r4, r3
 8001b84:	d109      	bne.n	8001b9a <pinmap_pinout+0x22>
 8001b86:	4620      	mov	r0, r4
 8001b88:	6889      	ldr	r1, [r1, #8]
 8001b8a:	f002 fac3 	bl	8004114 <pin_function>
 8001b8e:	4620      	mov	r0, r4
 8001b90:	2100      	movs	r1, #0
 8001b92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b96:	f002 bb41 	b.w	800421c <pin_mode>
 8001b9a:	310c      	adds	r1, #12
 8001b9c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001ba0:	1c5a      	adds	r2, r3, #1
 8001ba2:	d1ee      	bne.n	8001b82 <pinmap_pinout+0xa>
 8001ba4:	4802      	ldr	r0, [pc, #8]	; (8001bb0 <pinmap_pinout+0x38>)
 8001ba6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001baa:	f000 b87d 	b.w	8001ca8 <error>
 8001bae:	bf00      	nop
 8001bb0:	08008433 	.word	0x08008433

08001bb4 <pinmap_merge>:
 8001bb4:	4288      	cmp	r0, r1
 8001bb6:	b508      	push	{r3, lr}
 8001bb8:	d008      	beq.n	8001bcc <pinmap_merge+0x18>
 8001bba:	1c43      	adds	r3, r0, #1
 8001bbc:	d006      	beq.n	8001bcc <pinmap_merge+0x18>
 8001bbe:	3101      	adds	r1, #1
 8001bc0:	d006      	beq.n	8001bd0 <pinmap_merge+0x1c>
 8001bc2:	4804      	ldr	r0, [pc, #16]	; (8001bd4 <pinmap_merge+0x20>)
 8001bc4:	f000 f870 	bl	8001ca8 <error>
 8001bc8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001bcc:	4608      	mov	r0, r1
 8001bce:	bd08      	pop	{r3, pc}
 8001bd0:	4601      	mov	r1, r0
 8001bd2:	e7fb      	b.n	8001bcc <pinmap_merge+0x18>
 8001bd4:	08008402 	.word	0x08008402

08001bd8 <pinmap_find_peripheral>:
 8001bd8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001bdc:	1c5a      	adds	r2, r3, #1
 8001bde:	d101      	bne.n	8001be4 <pinmap_find_peripheral+0xc>
 8001be0:	4618      	mov	r0, r3
 8001be2:	4770      	bx	lr
 8001be4:	4283      	cmp	r3, r0
 8001be6:	d101      	bne.n	8001bec <pinmap_find_peripheral+0x14>
 8001be8:	6848      	ldr	r0, [r1, #4]
 8001bea:	4770      	bx	lr
 8001bec:	310c      	adds	r1, #12
 8001bee:	e7f3      	b.n	8001bd8 <pinmap_find_peripheral>

08001bf0 <pinmap_peripheral>:
 8001bf0:	1c42      	adds	r2, r0, #1
 8001bf2:	b510      	push	{r4, lr}
 8001bf4:	4604      	mov	r4, r0
 8001bf6:	d007      	beq.n	8001c08 <pinmap_peripheral+0x18>
 8001bf8:	f7ff ffee 	bl	8001bd8 <pinmap_find_peripheral>
 8001bfc:	1c43      	adds	r3, r0, #1
 8001bfe:	4604      	mov	r4, r0
 8001c00:	d102      	bne.n	8001c08 <pinmap_peripheral+0x18>
 8001c02:	4802      	ldr	r0, [pc, #8]	; (8001c0c <pinmap_peripheral+0x1c>)
 8001c04:	f000 f850 	bl	8001ca8 <error>
 8001c08:	4620      	mov	r0, r4
 8001c0a:	bd10      	pop	{r4, pc}
 8001c0c:	08008413 	.word	0x08008413

08001c10 <pinmap_find_function>:
 8001c10:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001c14:	1c5a      	adds	r2, r3, #1
 8001c16:	d101      	bne.n	8001c1c <pinmap_find_function+0xc>
 8001c18:	4618      	mov	r0, r3
 8001c1a:	4770      	bx	lr
 8001c1c:	4283      	cmp	r3, r0
 8001c1e:	d101      	bne.n	8001c24 <pinmap_find_function+0x14>
 8001c20:	6888      	ldr	r0, [r1, #8]
 8001c22:	4770      	bx	lr
 8001c24:	310c      	adds	r1, #12
 8001c26:	e7f3      	b.n	8001c10 <pinmap_find_function>

08001c28 <pinmap_function>:
 8001c28:	1c42      	adds	r2, r0, #1
 8001c2a:	b510      	push	{r4, lr}
 8001c2c:	4604      	mov	r4, r0
 8001c2e:	d007      	beq.n	8001c40 <pinmap_function+0x18>
 8001c30:	f7ff ffee 	bl	8001c10 <pinmap_find_function>
 8001c34:	1c43      	adds	r3, r0, #1
 8001c36:	4604      	mov	r4, r0
 8001c38:	d102      	bne.n	8001c40 <pinmap_function+0x18>
 8001c3a:	4802      	ldr	r0, [pc, #8]	; (8001c44 <pinmap_function+0x1c>)
 8001c3c:	f000 f834 	bl	8001ca8 <error>
 8001c40:	4620      	mov	r0, r4
 8001c42:	bd10      	pop	{r4, pc}
 8001c44:	080083e4 	.word	0x080083e4

08001c48 <core_util_are_interrupts_enabled>:
 8001c48:	f3ef 8010 	mrs	r0, PRIMASK
 8001c4c:	43c0      	mvns	r0, r0
 8001c4e:	f000 0001 	and.w	r0, r0, #1
 8001c52:	4770      	bx	lr

08001c54 <core_util_critical_section_enter>:
 8001c54:	b508      	push	{r3, lr}
 8001c56:	f7ff fff7 	bl	8001c48 <core_util_are_interrupts_enabled>
 8001c5a:	b672      	cpsid	i
 8001c5c:	4b06      	ldr	r3, [pc, #24]	; (8001c78 <core_util_critical_section_enter+0x24>)
 8001c5e:	681a      	ldr	r2, [r3, #0]
 8001c60:	b922      	cbnz	r2, 8001c6c <core_util_critical_section_enter+0x18>
 8001c62:	f080 0001 	eor.w	r0, r0, #1
 8001c66:	4a05      	ldr	r2, [pc, #20]	; (8001c7c <core_util_critical_section_enter+0x28>)
 8001c68:	b2c0      	uxtb	r0, r0
 8001c6a:	7010      	strb	r0, [r2, #0]
 8001c6c:	681a      	ldr	r2, [r3, #0]
 8001c6e:	681a      	ldr	r2, [r3, #0]
 8001c70:	3201      	adds	r2, #1
 8001c72:	601a      	str	r2, [r3, #0]
 8001c74:	bd08      	pop	{r3, pc}
 8001c76:	bf00      	nop
 8001c78:	20000ea4 	.word	0x20000ea4
 8001c7c:	20000ea0 	.word	0x20000ea0

08001c80 <core_util_critical_section_exit>:
 8001c80:	b508      	push	{r3, lr}
 8001c82:	4b07      	ldr	r3, [pc, #28]	; (8001ca0 <core_util_critical_section_exit+0x20>)
 8001c84:	681a      	ldr	r2, [r3, #0]
 8001c86:	b152      	cbz	r2, 8001c9e <core_util_critical_section_exit+0x1e>
 8001c88:	f7ff ffde 	bl	8001c48 <core_util_are_interrupts_enabled>
 8001c8c:	681a      	ldr	r2, [r3, #0]
 8001c8e:	3a01      	subs	r2, #1
 8001c90:	601a      	str	r2, [r3, #0]
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	b91b      	cbnz	r3, 8001c9e <core_util_critical_section_exit+0x1e>
 8001c96:	4b03      	ldr	r3, [pc, #12]	; (8001ca4 <core_util_critical_section_exit+0x24>)
 8001c98:	781b      	ldrb	r3, [r3, #0]
 8001c9a:	b903      	cbnz	r3, 8001c9e <core_util_critical_section_exit+0x1e>
 8001c9c:	b662      	cpsie	i
 8001c9e:	bd08      	pop	{r3, pc}
 8001ca0:	20000ea4 	.word	0x20000ea4
 8001ca4:	20000ea0 	.word	0x20000ea0

08001ca8 <error>:
 8001ca8:	b40f      	push	{r0, r1, r2, r3}
 8001caa:	2001      	movs	r0, #1
 8001cac:	b508      	push	{r3, lr}
 8001cae:	f004 faaf 	bl	8006210 <__wrap_exit>

08001cb2 <mbed_die>:
 8001cb2:	b508      	push	{r3, lr}
 8001cb4:	f7ff ffce 	bl	8001c54 <core_util_critical_section_enter>
 8001cb8:	2096      	movs	r0, #150	; 0x96
 8001cba:	f004 f9a5 	bl	8006008 <wait_ms>
 8001cbe:	2096      	movs	r0, #150	; 0x96
 8001cc0:	f004 f9a2 	bl	8006008 <wait_ms>
 8001cc4:	e7f8      	b.n	8001cb8 <mbed_die+0x6>

08001cc6 <default_idle_hook>:
 8001cc6:	f001 bfa6 	b.w	8003c16 <hal_sleep>
	...

08001ccc <rtos_idle_loop>:
 8001ccc:	b508      	push	{r3, lr}
 8001cce:	4c02      	ldr	r4, [pc, #8]	; (8001cd8 <rtos_idle_loop+0xc>)
 8001cd0:	6823      	ldr	r3, [r4, #0]
 8001cd2:	4798      	blx	r3
 8001cd4:	e7fc      	b.n	8001cd0 <rtos_idle_loop+0x4>
 8001cd6:	bf00      	nop
 8001cd8:	20000008 	.word	0x20000008

08001cdc <pre_main>:
 8001cdc:	b508      	push	{r3, lr}
 8001cde:	480b      	ldr	r0, [pc, #44]	; (8001d0c <pre_main+0x30>)
 8001ce0:	f000 ff92 	bl	8002c08 <osMutexCreate>
 8001ce4:	4b0a      	ldr	r3, [pc, #40]	; (8001d10 <pre_main+0x34>)
 8001ce6:	6018      	str	r0, [r3, #0]
 8001ce8:	480a      	ldr	r0, [pc, #40]	; (8001d14 <pre_main+0x38>)
 8001cea:	f000 ff8d 	bl	8002c08 <osMutexCreate>
 8001cee:	4b0a      	ldr	r3, [pc, #40]	; (8001d18 <pre_main+0x3c>)
 8001cf0:	6018      	str	r0, [r3, #0]
 8001cf2:	480a      	ldr	r0, [pc, #40]	; (8001d1c <pre_main+0x40>)
 8001cf4:	f000 ff88 	bl	8002c08 <osMutexCreate>
 8001cf8:	4b09      	ldr	r3, [pc, #36]	; (8001d20 <pre_main+0x44>)
 8001cfa:	6018      	str	r0, [r3, #0]
 8001cfc:	f005 fc88 	bl	8007610 <__libc_init_array>
 8001d00:	2100      	movs	r1, #0
 8001d02:	4608      	mov	r0, r1
 8001d04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d08:	f004 ba45 	b.w	8006196 <__wrap_main>
 8001d0c:	08008490 	.word	0x08008490
 8001d10:	20002688 	.word	0x20002688
 8001d14:	0800848c 	.word	0x0800848c
 8001d18:	20000eb0 	.word	0x20000eb0
 8001d1c:	08008488 	.word	0x08008488
 8001d20:	20000ea8 	.word	0x20000ea8

08001d24 <os_idle_demon>:
 8001d24:	f7ff bfd2 	b.w	8001ccc <rtos_idle_loop>

08001d28 <os_error>:
 8001d28:	b510      	push	{r4, lr}
 8001d2a:	4604      	mov	r4, r0
 8001d2c:	f000 fe3e 	bl	80029ac <svcThreadGetId>
 8001d30:	4621      	mov	r1, r4
 8001d32:	4602      	mov	r2, r0
 8001d34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d38:	4801      	ldr	r0, [pc, #4]	; (8001d40 <os_error+0x18>)
 8001d3a:	f7ff bfb5 	b.w	8001ca8 <error>
 8001d3e:	bf00      	nop
 8001d40:	08008450 	.word	0x08008450

08001d44 <sysThreadTerminate>:
 8001d44:	f004 ba9a 	b.w	800627c <thread_terminate_hook>

08001d48 <set_stack_heap>:
 8001d48:	4a0b      	ldr	r2, [pc, #44]	; (8001d78 <set_stack_heap+0x30>)
 8001d4a:	4b0c      	ldr	r3, [pc, #48]	; (8001d7c <set_stack_heap+0x34>)
 8001d4c:	480c      	ldr	r0, [pc, #48]	; (8001d80 <set_stack_heap+0x38>)
 8001d4e:	b430      	push	{r4, r5}
 8001d50:	601a      	str	r2, [r3, #0]
 8001d52:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8001d56:	f503 4340 	add.w	r3, r3, #49152	; 0xc000
 8001d5a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001d5e:	4619      	mov	r1, r3
 8001d60:	bf28      	it	cs
 8001d62:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 8001d66:	4d07      	ldr	r5, [pc, #28]	; (8001d84 <set_stack_heap+0x3c>)
 8001d68:	4c07      	ldr	r4, [pc, #28]	; (8001d88 <set_stack_heap+0x40>)
 8001d6a:	6001      	str	r1, [r0, #0]
 8001d6c:	1a5b      	subs	r3, r3, r1
 8001d6e:	441a      	add	r2, r3
 8001d70:	602a      	str	r2, [r5, #0]
 8001d72:	6023      	str	r3, [r4, #0]
 8001d74:	bc30      	pop	{r4, r5}
 8001d76:	4770      	bx	lr
 8001d78:	200030c8 	.word	0x200030c8
 8001d7c:	200025ec 	.word	0x200025ec
 8001d80:	20000eb4 	.word	0x20000eb4
 8001d84:	20000eb8 	.word	0x20000eb8
 8001d88:	200025e8 	.word	0x200025e8

08001d8c <software_init_hook_rtos>:
 8001d8c:	f001 f8d0 	bl	8002f30 <osKernelInitialize>
 8001d90:	f7ff ffda 	bl	8001d48 <set_stack_heap>
 8001d94:	4803      	ldr	r0, [pc, #12]	; (8001da4 <software_init_hook_rtos+0x18>)
 8001d96:	2100      	movs	r1, #0
 8001d98:	f000 ffbe 	bl	8002d18 <osThreadCreate>
 8001d9c:	f000 fd88 	bl	80028b0 <osKernelStart>
 8001da0:	e7fe      	b.n	8001da0 <software_init_hook_rtos+0x14>
 8001da2:	0000      	.short	0x0000
 8001da4:	2000000c 	.word	0x2000000c

08001da8 <__rtos_malloc_lock>:
 8001da8:	4b02      	ldr	r3, [pc, #8]	; (8001db4 <__rtos_malloc_lock+0xc>)
 8001daa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001dae:	6818      	ldr	r0, [r3, #0]
 8001db0:	f000 bf48 	b.w	8002c44 <osMutexWait>
 8001db4:	20000eb0 	.word	0x20000eb0

08001db8 <__rtos_malloc_unlock>:
 8001db8:	4b01      	ldr	r3, [pc, #4]	; (8001dc0 <__rtos_malloc_unlock+0x8>)
 8001dba:	6818      	ldr	r0, [r3, #0]
 8001dbc:	f000 bf6a 	b.w	8002c94 <osMutexRelease>
 8001dc0:	20000eb0 	.word	0x20000eb0

08001dc4 <rt_put_prio>:
 8001dc4:	b530      	push	{r4, r5, lr}
 8001dc6:	7802      	ldrb	r2, [r0, #0]
 8001dc8:	788c      	ldrb	r4, [r1, #2]
 8001dca:	6843      	ldr	r3, [r0, #4]
 8001dcc:	3a01      	subs	r2, #1
 8001dce:	b2d2      	uxtb	r2, r2
 8001dd0:	b113      	cbz	r3, 8001dd8 <rt_put_prio+0x14>
 8001dd2:	789d      	ldrb	r5, [r3, #2]
 8001dd4:	42a5      	cmp	r5, r4
 8001dd6:	d207      	bcs.n	8001de8 <rt_put_prio+0x24>
 8001dd8:	2a02      	cmp	r2, #2
 8001dda:	604b      	str	r3, [r1, #4]
 8001ddc:	6041      	str	r1, [r0, #4]
 8001dde:	d806      	bhi.n	8001dee <rt_put_prio+0x2a>
 8001de0:	b103      	cbz	r3, 8001de4 <rt_put_prio+0x20>
 8001de2:	6099      	str	r1, [r3, #8]
 8001de4:	6088      	str	r0, [r1, #8]
 8001de6:	bd30      	pop	{r4, r5, pc}
 8001de8:	4618      	mov	r0, r3
 8001dea:	685b      	ldr	r3, [r3, #4]
 8001dec:	e7f0      	b.n	8001dd0 <rt_put_prio+0xc>
 8001dee:	2300      	movs	r3, #0
 8001df0:	608b      	str	r3, [r1, #8]
 8001df2:	bd30      	pop	{r4, r5, pc}

08001df4 <rt_get_first>:
 8001df4:	7802      	ldrb	r2, [r0, #0]
 8001df6:	6843      	ldr	r3, [r0, #4]
 8001df8:	3a01      	subs	r2, #1
 8001dfa:	6859      	ldr	r1, [r3, #4]
 8001dfc:	6041      	str	r1, [r0, #4]
 8001dfe:	2a02      	cmp	r2, #2
 8001e00:	f04f 0200 	mov.w	r2, #0
 8001e04:	d805      	bhi.n	8001e12 <rt_get_first+0x1e>
 8001e06:	b109      	cbz	r1, 8001e0c <rt_get_first+0x18>
 8001e08:	6088      	str	r0, [r1, #8]
 8001e0a:	605a      	str	r2, [r3, #4]
 8001e0c:	609a      	str	r2, [r3, #8]
 8001e0e:	4618      	mov	r0, r3
 8001e10:	4770      	bx	lr
 8001e12:	605a      	str	r2, [r3, #4]
 8001e14:	e7fb      	b.n	8001e0e <rt_get_first+0x1a>
	...

08001e18 <rt_put_rdy_first>:
 8001e18:	4b03      	ldr	r3, [pc, #12]	; (8001e28 <rt_put_rdy_first+0x10>)
 8001e1a:	685a      	ldr	r2, [r3, #4]
 8001e1c:	6042      	str	r2, [r0, #4]
 8001e1e:	2200      	movs	r2, #0
 8001e20:	6082      	str	r2, [r0, #8]
 8001e22:	6058      	str	r0, [r3, #4]
 8001e24:	4770      	bx	lr
 8001e26:	bf00      	nop
 8001e28:	20002fc8 	.word	0x20002fc8

08001e2c <rt_put_dly>:
 8001e2c:	4b10      	ldr	r3, [pc, #64]	; (8001e70 <rt_put_dly+0x44>)
 8001e2e:	68da      	ldr	r2, [r3, #12]
 8001e30:	b510      	push	{r4, lr}
 8001e32:	b18a      	cbz	r2, 8001e58 <rt_put_dly+0x2c>
 8001e34:	8a9a      	ldrh	r2, [r3, #20]
 8001e36:	68dc      	ldr	r4, [r3, #12]
 8001e38:	428a      	cmp	r2, r1
 8001e3a:	d30c      	bcc.n	8001e56 <rt_put_dly+0x2a>
 8001e3c:	60c4      	str	r4, [r0, #12]
 8001e3e:	60d8      	str	r0, [r3, #12]
 8001e40:	68c4      	ldr	r4, [r0, #12]
 8001e42:	6103      	str	r3, [r0, #16]
 8001e44:	b104      	cbz	r4, 8001e48 <rt_put_dly+0x1c>
 8001e46:	6120      	str	r0, [r4, #16]
 8001e48:	1a52      	subs	r2, r2, r1
 8001e4a:	b292      	uxth	r2, r2
 8001e4c:	8282      	strh	r2, [r0, #20]
 8001e4e:	8a99      	ldrh	r1, [r3, #20]
 8001e50:	1a8a      	subs	r2, r1, r2
 8001e52:	829a      	strh	r2, [r3, #20]
 8001e54:	bd10      	pop	{r4, pc}
 8001e56:	b93c      	cbnz	r4, 8001e68 <rt_put_dly+0x3c>
 8001e58:	2400      	movs	r4, #0
 8001e5a:	1a8a      	subs	r2, r1, r2
 8001e5c:	60c4      	str	r4, [r0, #12]
 8001e5e:	60d8      	str	r0, [r3, #12]
 8001e60:	6103      	str	r3, [r0, #16]
 8001e62:	829a      	strh	r2, [r3, #20]
 8001e64:	8284      	strh	r4, [r0, #20]
 8001e66:	bd10      	pop	{r4, pc}
 8001e68:	8aa3      	ldrh	r3, [r4, #20]
 8001e6a:	441a      	add	r2, r3
 8001e6c:	4623      	mov	r3, r4
 8001e6e:	e7e2      	b.n	8001e36 <rt_put_dly+0xa>
 8001e70:	20002fe0 	.word	0x20002fe0

08001e74 <rt_dec_dly>:
 8001e74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e78:	4d17      	ldr	r5, [pc, #92]	; (8001ed8 <rt_dec_dly+0x64>)
 8001e7a:	68eb      	ldr	r3, [r5, #12]
 8001e7c:	b153      	cbz	r3, 8001e94 <rt_dec_dly+0x20>
 8001e7e:	8aab      	ldrh	r3, [r5, #20]
 8001e80:	4f16      	ldr	r7, [pc, #88]	; (8001edc <rt_dec_dly+0x68>)
 8001e82:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8001ee0 <rt_dec_dly+0x6c>
 8001e86:	3b01      	subs	r3, #1
 8001e88:	82ab      	strh	r3, [r5, #20]
 8001e8a:	2600      	movs	r6, #0
 8001e8c:	8aaa      	ldrh	r2, [r5, #20]
 8001e8e:	b90a      	cbnz	r2, 8001e94 <rt_dec_dly+0x20>
 8001e90:	68ec      	ldr	r4, [r5, #12]
 8001e92:	b90c      	cbnz	r4, 8001e98 <rt_dec_dly+0x24>
 8001e94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e98:	68a3      	ldr	r3, [r4, #8]
 8001e9a:	b133      	cbz	r3, 8001eaa <rt_dec_dly+0x36>
 8001e9c:	6861      	ldr	r1, [r4, #4]
 8001e9e:	6059      	str	r1, [r3, #4]
 8001ea0:	6861      	ldr	r1, [r4, #4]
 8001ea2:	b109      	cbz	r1, 8001ea8 <rt_dec_dly+0x34>
 8001ea4:	608b      	str	r3, [r1, #8]
 8001ea6:	6062      	str	r2, [r4, #4]
 8001ea8:	60a6      	str	r6, [r4, #8]
 8001eaa:	4621      	mov	r1, r4
 8001eac:	4638      	mov	r0, r7
 8001eae:	f7ff ff89 	bl	8001dc4 <rt_put_prio>
 8001eb2:	8aa3      	ldrh	r3, [r4, #20]
 8001eb4:	82ab      	strh	r3, [r5, #20]
 8001eb6:	7863      	ldrb	r3, [r4, #1]
 8001eb8:	2b04      	cmp	r3, #4
 8001eba:	bf01      	itttt	eq
 8001ebc:	f8d8 3000 	ldreq.w	r3, [r8]
 8001ec0:	8ae2      	ldrheq	r2, [r4, #22]
 8001ec2:	189b      	addeq	r3, r3, r2
 8001ec4:	82a3      	strheq	r3, [r4, #20]
 8001ec6:	2301      	movs	r3, #1
 8001ec8:	7063      	strb	r3, [r4, #1]
 8001eca:	68e3      	ldr	r3, [r4, #12]
 8001ecc:	60eb      	str	r3, [r5, #12]
 8001ece:	b10b      	cbz	r3, 8001ed4 <rt_dec_dly+0x60>
 8001ed0:	611d      	str	r5, [r3, #16]
 8001ed2:	60e6      	str	r6, [r4, #12]
 8001ed4:	6126      	str	r6, [r4, #16]
 8001ed6:	e7d9      	b.n	8001e8c <rt_dec_dly+0x18>
 8001ed8:	20002fe0 	.word	0x20002fe0
 8001edc:	20002fc8 	.word	0x20002fc8
 8001ee0:	2000305c 	.word	0x2000305c

08001ee4 <rt_rmv_list>:
 8001ee4:	6883      	ldr	r3, [r0, #8]
 8001ee6:	b12b      	cbz	r3, 8001ef4 <rt_rmv_list+0x10>
 8001ee8:	6842      	ldr	r2, [r0, #4]
 8001eea:	605a      	str	r2, [r3, #4]
 8001eec:	6842      	ldr	r2, [r0, #4]
 8001eee:	b15a      	cbz	r2, 8001f08 <rt_rmv_list+0x24>
 8001ef0:	6093      	str	r3, [r2, #8]
 8001ef2:	4770      	bx	lr
 8001ef4:	4b05      	ldr	r3, [pc, #20]	; (8001f0c <rt_rmv_list+0x28>)
 8001ef6:	685a      	ldr	r2, [r3, #4]
 8001ef8:	4290      	cmp	r0, r2
 8001efa:	d102      	bne.n	8001f02 <rt_rmv_list+0x1e>
 8001efc:	6842      	ldr	r2, [r0, #4]
 8001efe:	605a      	str	r2, [r3, #4]
 8001f00:	4770      	bx	lr
 8001f02:	4613      	mov	r3, r2
 8001f04:	2a00      	cmp	r2, #0
 8001f06:	d1f6      	bne.n	8001ef6 <rt_rmv_list+0x12>
 8001f08:	4770      	bx	lr
 8001f0a:	bf00      	nop
 8001f0c:	20002fc8 	.word	0x20002fc8

08001f10 <rt_resort_prio>:
 8001f10:	b510      	push	{r4, lr}
 8001f12:	6884      	ldr	r4, [r0, #8]
 8001f14:	4601      	mov	r1, r0
 8001f16:	b92c      	cbnz	r4, 8001f24 <rt_resort_prio+0x14>
 8001f18:	7843      	ldrb	r3, [r0, #1]
 8001f1a:	2b01      	cmp	r3, #1
 8001f1c:	d10d      	bne.n	8001f3a <rt_resort_prio+0x2a>
 8001f1e:	4c07      	ldr	r4, [pc, #28]	; (8001f3c <rt_resort_prio+0x2c>)
 8001f20:	e003      	b.n	8001f2a <rt_resort_prio+0x1a>
 8001f22:	68a4      	ldr	r4, [r4, #8]
 8001f24:	7823      	ldrb	r3, [r4, #0]
 8001f26:	2b00      	cmp	r3, #0
 8001f28:	d0fb      	beq.n	8001f22 <rt_resort_prio+0x12>
 8001f2a:	4608      	mov	r0, r1
 8001f2c:	f7ff ffda 	bl	8001ee4 <rt_rmv_list>
 8001f30:	4620      	mov	r0, r4
 8001f32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f36:	f7ff bf45 	b.w	8001dc4 <rt_put_prio>
 8001f3a:	bd10      	pop	{r4, pc}
 8001f3c:	20002fc8 	.word	0x20002fc8

08001f40 <rt_rmv_dly>:
 8001f40:	6903      	ldr	r3, [r0, #16]
 8001f42:	b510      	push	{r4, lr}
 8001f44:	b163      	cbz	r3, 8001f60 <rt_rmv_dly+0x20>
 8001f46:	68c2      	ldr	r2, [r0, #12]
 8001f48:	60da      	str	r2, [r3, #12]
 8001f4a:	68c2      	ldr	r2, [r0, #12]
 8001f4c:	b14a      	cbz	r2, 8001f62 <rt_rmv_dly+0x22>
 8001f4e:	8a99      	ldrh	r1, [r3, #20]
 8001f50:	8a84      	ldrh	r4, [r0, #20]
 8001f52:	4421      	add	r1, r4
 8001f54:	8299      	strh	r1, [r3, #20]
 8001f56:	6113      	str	r3, [r2, #16]
 8001f58:	2300      	movs	r3, #0
 8001f5a:	60c3      	str	r3, [r0, #12]
 8001f5c:	2300      	movs	r3, #0
 8001f5e:	6103      	str	r3, [r0, #16]
 8001f60:	bd10      	pop	{r4, pc}
 8001f62:	829a      	strh	r2, [r3, #20]
 8001f64:	e7fa      	b.n	8001f5c <rt_rmv_dly+0x1c>
	...

08001f68 <rt_psq_enq>:
 8001f68:	b470      	push	{r4, r5, r6}
 8001f6a:	4b11      	ldr	r3, [pc, #68]	; (8001fb0 <rt_psq_enq+0x48>)
 8001f6c:	78dd      	ldrb	r5, [r3, #3]
 8001f6e:	f3ef 8610 	mrs	r6, PRIMASK
 8001f72:	f3ef 8210 	mrs	r2, PRIMASK
 8001f76:	b672      	cpsid	i
 8001f78:	789a      	ldrb	r2, [r3, #2]
 8001f7a:	4295      	cmp	r5, r2
 8001f7c:	d911      	bls.n	8001fa2 <rt_psq_enq+0x3a>
 8001f7e:	3201      	adds	r2, #1
 8001f80:	709a      	strb	r2, [r3, #2]
 8001f82:	781a      	ldrb	r2, [r3, #0]
 8001f84:	1c54      	adds	r4, r2, #1
 8001f86:	42a5      	cmp	r5, r4
 8001f88:	bf08      	it	eq
 8001f8a:	2400      	moveq	r4, #0
 8001f8c:	701c      	strb	r4, [r3, #0]
 8001f8e:	b906      	cbnz	r6, 8001f92 <rt_psq_enq+0x2a>
 8001f90:	b662      	cpsie	i
 8001f92:	4295      	cmp	r5, r2
 8001f94:	d907      	bls.n	8001fa6 <rt_psq_enq+0x3e>
 8001f96:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001f9a:	bc70      	pop	{r4, r5, r6}
 8001f9c:	6058      	str	r0, [r3, #4]
 8001f9e:	6099      	str	r1, [r3, #8]
 8001fa0:	4770      	bx	lr
 8001fa2:	2e00      	cmp	r6, #0
 8001fa4:	d0f4      	beq.n	8001f90 <rt_psq_enq+0x28>
 8001fa6:	2002      	movs	r0, #2
 8001fa8:	bc70      	pop	{r4, r5, r6}
 8001faa:	f7ff bebd 	b.w	8001d28 <os_error>
 8001fae:	bf00      	nop
 8001fb0:	20002600 	.word	0x20002600

08001fb4 <rt_psh_req>:
 8001fb4:	4b05      	ldr	r3, [pc, #20]	; (8001fcc <rt_psh_req+0x18>)
 8001fb6:	781b      	ldrb	r3, [r3, #0]
 8001fb8:	b923      	cbnz	r3, 8001fc4 <rt_psh_req+0x10>
 8001fba:	4b05      	ldr	r3, [pc, #20]	; (8001fd0 <rt_psh_req+0x1c>)
 8001fbc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001fc0:	601a      	str	r2, [r3, #0]
 8001fc2:	4770      	bx	lr
 8001fc4:	4b03      	ldr	r3, [pc, #12]	; (8001fd4 <rt_psh_req+0x20>)
 8001fc6:	2201      	movs	r2, #1
 8001fc8:	701a      	strb	r2, [r3, #0]
 8001fca:	4770      	bx	lr
 8001fcc:	20001f0c 	.word	0x20001f0c
 8001fd0:	e000ed04 	.word	0xe000ed04
 8001fd4:	20001f0d 	.word	0x20001f0d

08001fd8 <rt_pop_req>:
 8001fd8:	b538      	push	{r3, r4, r5, lr}
 8001fda:	4b1a      	ldr	r3, [pc, #104]	; (8002044 <rt_pop_req+0x6c>)
 8001fdc:	4c1a      	ldr	r4, [pc, #104]	; (8002048 <rt_pop_req+0x70>)
 8001fde:	6818      	ldr	r0, [r3, #0]
 8001fe0:	2301      	movs	r3, #1
 8001fe2:	7043      	strb	r3, [r0, #1]
 8001fe4:	f7ff ff18 	bl	8001e18 <rt_put_rdy_first>
 8001fe8:	7865      	ldrb	r5, [r4, #1]
 8001fea:	78a3      	ldrb	r3, [r4, #2]
 8001fec:	b93b      	cbnz	r3, 8001ffe <rt_pop_req+0x26>
 8001fee:	4817      	ldr	r0, [pc, #92]	; (800204c <rt_pop_req+0x74>)
 8001ff0:	7065      	strb	r5, [r4, #1]
 8001ff2:	f7ff feff 	bl	8001df4 <rt_get_first>
 8001ff6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001ffa:	f001 b873 	b.w	80030e4 <rt_switch_req>
 8001ffe:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8002002:	6858      	ldr	r0, [r3, #4]
 8002004:	7802      	ldrb	r2, [r0, #0]
 8002006:	b99a      	cbnz	r2, 8002030 <rt_pop_req+0x58>
 8002008:	8919      	ldrh	r1, [r3, #8]
 800200a:	f000 fb75 	bl	80026f8 <rt_evt_psh>
 800200e:	78e3      	ldrb	r3, [r4, #3]
 8002010:	3501      	adds	r5, #1
 8002012:	429d      	cmp	r5, r3
 8002014:	bf08      	it	eq
 8002016:	2500      	moveq	r5, #0
 8002018:	f3ef 8310 	mrs	r3, PRIMASK
 800201c:	f3ef 8210 	mrs	r2, PRIMASK
 8002020:	b672      	cpsid	i
 8002022:	78a2      	ldrb	r2, [r4, #2]
 8002024:	3a01      	subs	r2, #1
 8002026:	70a2      	strb	r2, [r4, #2]
 8002028:	2b00      	cmp	r3, #0
 800202a:	d1de      	bne.n	8001fea <rt_pop_req+0x12>
 800202c:	b662      	cpsie	i
 800202e:	e7dc      	b.n	8001fea <rt_pop_req+0x12>
 8002030:	2a01      	cmp	r2, #1
 8002032:	d103      	bne.n	800203c <rt_pop_req+0x64>
 8002034:	6899      	ldr	r1, [r3, #8]
 8002036:	f000 f993 	bl	8002360 <rt_mbx_psh>
 800203a:	e7e8      	b.n	800200e <rt_pop_req+0x36>
 800203c:	f001 fb06 	bl	800364c <rt_sem_psh>
 8002040:	e7e5      	b.n	800200e <rt_pop_req+0x36>
 8002042:	bf00      	nop
 8002044:	20003014 	.word	0x20003014
 8002048:	20002600 	.word	0x20002600
 800204c:	20002fc8 	.word	0x20002fc8

08002050 <os_tick_init>:
 8002050:	4b08      	ldr	r3, [pc, #32]	; (8002074 <os_tick_init+0x24>)
 8002052:	681a      	ldr	r2, [r3, #0]
 8002054:	4b08      	ldr	r3, [pc, #32]	; (8002078 <os_tick_init+0x28>)
 8002056:	601a      	str	r2, [r3, #0]
 8002058:	2200      	movs	r2, #0
 800205a:	605a      	str	r2, [r3, #4]
 800205c:	2207      	movs	r2, #7
 800205e:	f843 2c04 	str.w	r2, [r3, #-4]
 8002062:	4a06      	ldr	r2, [pc, #24]	; (800207c <os_tick_init+0x2c>)
 8002064:	6813      	ldr	r3, [r2, #0]
 8002066:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800206a:	6013      	str	r3, [r2, #0]
 800206c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002070:	4770      	bx	lr
 8002072:	bf00      	nop
 8002074:	080084b0 	.word	0x080084b0
 8002078:	e000e014 	.word	0xe000e014
 800207c:	e000ed20 	.word	0xe000ed20

08002080 <os_tick_irqack>:
 8002080:	4770      	bx	lr
	...

08002084 <rt_systick>:
 8002084:	b508      	push	{r3, lr}
 8002086:	4b0b      	ldr	r3, [pc, #44]	; (80020b4 <rt_systick+0x30>)
 8002088:	6818      	ldr	r0, [r3, #0]
 800208a:	2301      	movs	r3, #1
 800208c:	7043      	strb	r3, [r0, #1]
 800208e:	f7ff fec3 	bl	8001e18 <rt_put_rdy_first>
 8002092:	f000 fb67 	bl	8002764 <rt_chk_robin>
 8002096:	4a08      	ldr	r2, [pc, #32]	; (80020b8 <rt_systick+0x34>)
 8002098:	6813      	ldr	r3, [r2, #0]
 800209a:	3301      	adds	r3, #1
 800209c:	6013      	str	r3, [r2, #0]
 800209e:	f7ff fee9 	bl	8001e74 <rt_dec_dly>
 80020a2:	f000 ffa7 	bl	8002ff4 <sysTimerTick>
 80020a6:	4805      	ldr	r0, [pc, #20]	; (80020bc <rt_systick+0x38>)
 80020a8:	f7ff fea4 	bl	8001df4 <rt_get_first>
 80020ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80020b0:	f001 b818 	b.w	80030e4 <rt_switch_req>
 80020b4:	20003014 	.word	0x20003014
 80020b8:	2000305c 	.word	0x2000305c
 80020bc:	20002fc8 	.word	0x20002fc8

080020c0 <rt_stk_check>:
 80020c0:	4b06      	ldr	r3, [pc, #24]	; (80020dc <rt_stk_check+0x1c>)
 80020c2:	681a      	ldr	r2, [r3, #0]
 80020c4:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80020c6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80020c8:	4293      	cmp	r3, r2
 80020ca:	d803      	bhi.n	80020d4 <rt_stk_check+0x14>
 80020cc:	681a      	ldr	r2, [r3, #0]
 80020ce:	4b04      	ldr	r3, [pc, #16]	; (80020e0 <rt_stk_check+0x20>)
 80020d0:	429a      	cmp	r2, r3
 80020d2:	d002      	beq.n	80020da <rt_stk_check+0x1a>
 80020d4:	2001      	movs	r0, #1
 80020d6:	f7ff be27 	b.w	8001d28 <os_error>
 80020da:	4770      	bx	lr
 80020dc:	20003014 	.word	0x20003014
 80020e0:	e25a2ea5 	.word	0xe25a2ea5

080020e4 <rt_init_stack>:
 80020e4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80020e6:	089b      	lsrs	r3, r3, #2
 80020e8:	bf04      	itt	eq
 80020ea:	4b22      	ldreq	r3, [pc, #136]	; (8002174 <rt_init_stack+0x90>)
 80020ec:	881b      	ldrheq	r3, [r3, #0]
 80020ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020f0:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80020f2:	bf08      	it	eq
 80020f4:	089b      	lsreq	r3, r3, #2
 80020f6:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 80020fa:	0754      	lsls	r4, r2, #29
 80020fc:	bf48      	it	mi
 80020fe:	3a04      	submi	r2, #4
 8002100:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8002104:	e902 0042 	stmdb	r2, {r1, r6}
 8002108:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 800210c:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8002110:	f1a2 070c 	sub.w	r7, r2, #12
 8002114:	f04f 0e00 	mov.w	lr, #0
 8002118:	f846 ef04 	str.w	lr, [r6, #4]!
 800211c:	42be      	cmp	r6, r7
 800211e:	d1fb      	bne.n	8002118 <rt_init_stack+0x34>
 8002120:	69c6      	ldr	r6, [r0, #28]
 8002122:	f842 6c20 	str.w	r6, [r2, #-32]
 8002126:	6341      	str	r1, [r0, #52]	; 0x34
 8002128:	4912      	ldr	r1, [pc, #72]	; (8002174 <rt_init_stack+0x90>)
 800212a:	62c4      	str	r4, [r0, #44]	; 0x2c
 800212c:	6809      	ldr	r1, [r1, #0]
 800212e:	00c9      	lsls	r1, r1, #3
 8002130:	d517      	bpl.n	8002162 <rt_init_stack+0x7e>
 8002132:	2b11      	cmp	r3, #17
 8002134:	d915      	bls.n	8002162 <rt_init_stack+0x7e>
 8002136:	3b10      	subs	r3, #16
 8002138:	f06f 0107 	mvn.w	r1, #7
 800213c:	085b      	lsrs	r3, r3, #1
 800213e:	434b      	muls	r3, r1
 8002140:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8002144:	440a      	add	r2, r1
 8002146:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 800214a:	4621      	mov	r1, r4
 800214c:	4291      	cmp	r1, r2
 800214e:	d10b      	bne.n	8002168 <rt_init_stack+0x84>
 8002150:	3308      	adds	r3, #8
 8002152:	441c      	add	r4, r3
 8002154:	1f23      	subs	r3, r4, #4
 8002156:	429d      	cmp	r5, r3
 8002158:	bf3c      	itt	cc
 800215a:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 800215e:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8002162:	4b05      	ldr	r3, [pc, #20]	; (8002178 <rt_init_stack+0x94>)
 8002164:	602b      	str	r3, [r5, #0]
 8002166:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002168:	f841 0c04 	str.w	r0, [r1, #-4]
 800216c:	f841 0d08 	str.w	r0, [r1, #-8]!
 8002170:	e7ec      	b.n	800214c <rt_init_stack+0x68>
 8002172:	bf00      	nop
 8002174:	08008498 	.word	0x08008498
 8002178:	e25a2ea5 	.word	0xe25a2ea5

0800217c <rt_ret_val>:
 800217c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002180:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002182:	b112      	cbz	r2, 800218a <rt_ret_val+0xe>
 8002184:	3360      	adds	r3, #96	; 0x60
 8002186:	6019      	str	r1, [r3, #0]
 8002188:	4770      	bx	lr
 800218a:	3320      	adds	r3, #32
 800218c:	e7fb      	b.n	8002186 <rt_ret_val+0xa>

0800218e <rt_ret_val2>:
 800218e:	b510      	push	{r4, lr}
 8002190:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8002194:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002196:	b11c      	cbz	r4, 80021a0 <rt_ret_val2+0x12>
 8002198:	3360      	adds	r3, #96	; 0x60
 800219a:	e883 0006 	stmia.w	r3, {r1, r2}
 800219e:	bd10      	pop	{r4, pc}
 80021a0:	3320      	adds	r3, #32
 80021a2:	e7fa      	b.n	800219a <rt_ret_val2+0xc>

080021a4 <_init_box>:
 80021a4:	2a00      	cmp	r2, #0
 80021a6:	bfbb      	ittet	lt
 80021a8:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 80021ac:	3207      	addlt	r2, #7
 80021ae:	3203      	addge	r2, #3
 80021b0:	f022 0207 	biclt.w	r2, r2, #7
 80021b4:	bfa8      	it	ge
 80021b6:	f022 0203 	bicge.w	r2, r2, #3
 80021ba:	b510      	push	{r4, lr}
 80021bc:	bfb4      	ite	lt
 80021be:	2310      	movlt	r3, #16
 80021c0:	230c      	movge	r3, #12
 80021c2:	b192      	cbz	r2, 80021ea <_init_box+0x46>
 80021c4:	18d4      	adds	r4, r2, r3
 80021c6:	428c      	cmp	r4, r1
 80021c8:	d80f      	bhi.n	80021ea <_init_box+0x46>
 80021ca:	4401      	add	r1, r0
 80021cc:	4403      	add	r3, r0
 80021ce:	4254      	negs	r4, r2
 80021d0:	6041      	str	r1, [r0, #4]
 80021d2:	6003      	str	r3, [r0, #0]
 80021d4:	6082      	str	r2, [r0, #8]
 80021d6:	4421      	add	r1, r4
 80021d8:	1898      	adds	r0, r3, r2
 80021da:	4281      	cmp	r1, r0
 80021dc:	d302      	bcc.n	80021e4 <_init_box+0x40>
 80021de:	5100      	str	r0, [r0, r4]
 80021e0:	4603      	mov	r3, r0
 80021e2:	e7f9      	b.n	80021d8 <_init_box+0x34>
 80021e4:	2000      	movs	r0, #0
 80021e6:	6018      	str	r0, [r3, #0]
 80021e8:	bd10      	pop	{r4, pc}
 80021ea:	2001      	movs	r0, #1
 80021ec:	bd10      	pop	{r4, pc}

080021ee <rt_alloc_box>:
 80021ee:	f3ef 8310 	mrs	r3, PRIMASK
 80021f2:	b672      	cpsid	i
 80021f4:	6802      	ldr	r2, [r0, #0]
 80021f6:	f003 0301 	and.w	r3, r3, #1
 80021fa:	b10a      	cbz	r2, 8002200 <rt_alloc_box+0x12>
 80021fc:	6811      	ldr	r1, [r2, #0]
 80021fe:	6001      	str	r1, [r0, #0]
 8002200:	b903      	cbnz	r3, 8002204 <rt_alloc_box+0x16>
 8002202:	b662      	cpsie	i
 8002204:	4610      	mov	r0, r2
 8002206:	4770      	bx	lr

08002208 <rt_free_box>:
 8002208:	4281      	cmp	r1, r0
 800220a:	d30d      	bcc.n	8002228 <rt_free_box+0x20>
 800220c:	6843      	ldr	r3, [r0, #4]
 800220e:	4299      	cmp	r1, r3
 8002210:	d20a      	bcs.n	8002228 <rt_free_box+0x20>
 8002212:	f3ef 8310 	mrs	r3, PRIMASK
 8002216:	b672      	cpsid	i
 8002218:	6802      	ldr	r2, [r0, #0]
 800221a:	600a      	str	r2, [r1, #0]
 800221c:	6001      	str	r1, [r0, #0]
 800221e:	f013 0001 	ands.w	r0, r3, #1
 8002222:	d103      	bne.n	800222c <rt_free_box+0x24>
 8002224:	b662      	cpsie	i
 8002226:	4770      	bx	lr
 8002228:	2001      	movs	r0, #1
 800222a:	4770      	bx	lr
 800222c:	2000      	movs	r0, #0
 800222e:	4770      	bx	lr

08002230 <rt_mbx_init>:
 8002230:	2301      	movs	r3, #1
 8002232:	3910      	subs	r1, #16
 8002234:	7003      	strb	r3, [r0, #0]
 8002236:	0889      	lsrs	r1, r1, #2
 8002238:	2300      	movs	r3, #0
 800223a:	7043      	strb	r3, [r0, #1]
 800223c:	7083      	strb	r3, [r0, #2]
 800223e:	6043      	str	r3, [r0, #4]
 8002240:	8103      	strh	r3, [r0, #8]
 8002242:	8143      	strh	r3, [r0, #10]
 8002244:	8183      	strh	r3, [r0, #12]
 8002246:	81c1      	strh	r1, [r0, #14]
 8002248:	4770      	bx	lr
	...

0800224c <rt_mbx_wait>:
 800224c:	b570      	push	{r4, r5, r6, lr}
 800224e:	8985      	ldrh	r5, [r0, #12]
 8002250:	4604      	mov	r4, r0
 8002252:	4616      	mov	r6, r2
 8002254:	2d00      	cmp	r5, #0
 8002256:	d038      	beq.n	80022ca <rt_mbx_wait+0x7e>
 8002258:	8943      	ldrh	r3, [r0, #10]
 800225a:	1d1a      	adds	r2, r3, #4
 800225c:	3301      	adds	r3, #1
 800225e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8002262:	600a      	str	r2, [r1, #0]
 8002264:	89c2      	ldrh	r2, [r0, #14]
 8002266:	b29b      	uxth	r3, r3
 8002268:	429a      	cmp	r2, r3
 800226a:	8143      	strh	r3, [r0, #10]
 800226c:	bf04      	itt	eq
 800226e:	2300      	moveq	r3, #0
 8002270:	8143      	strheq	r3, [r0, #10]
 8002272:	6843      	ldr	r3, [r0, #4]
 8002274:	b1f3      	cbz	r3, 80022b4 <rt_mbx_wait+0x68>
 8002276:	7843      	ldrb	r3, [r0, #1]
 8002278:	2b02      	cmp	r3, #2
 800227a:	d11b      	bne.n	80022b4 <rt_mbx_wait+0x68>
 800227c:	f7ff fdba 	bl	8001df4 <rt_get_first>
 8002280:	2100      	movs	r1, #0
 8002282:	4605      	mov	r5, r0
 8002284:	f7ff ff7a 	bl	800217c <rt_ret_val>
 8002288:	8923      	ldrh	r3, [r4, #8]
 800228a:	69e9      	ldr	r1, [r5, #28]
 800228c:	1d1a      	adds	r2, r3, #4
 800228e:	3301      	adds	r3, #1
 8002290:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8002294:	89e2      	ldrh	r2, [r4, #14]
 8002296:	b29b      	uxth	r3, r3
 8002298:	429a      	cmp	r2, r3
 800229a:	8123      	strh	r3, [r4, #8]
 800229c:	bf08      	it	eq
 800229e:	2300      	moveq	r3, #0
 80022a0:	4628      	mov	r0, r5
 80022a2:	bf08      	it	eq
 80022a4:	8123      	strheq	r3, [r4, #8]
 80022a6:	f7ff fe4b 	bl	8001f40 <rt_rmv_dly>
 80022aa:	4628      	mov	r0, r5
 80022ac:	f000 ff34 	bl	8003118 <rt_dispatch>
 80022b0:	2000      	movs	r0, #0
 80022b2:	bd70      	pop	{r4, r5, r6, pc}
 80022b4:	f3ef 8010 	mrs	r0, PRIMASK
 80022b8:	f3ef 8310 	mrs	r3, PRIMASK
 80022bc:	b672      	cpsid	i
 80022be:	3d01      	subs	r5, #1
 80022c0:	81a5      	strh	r5, [r4, #12]
 80022c2:	2800      	cmp	r0, #0
 80022c4:	d1f4      	bne.n	80022b0 <rt_mbx_wait+0x64>
 80022c6:	b662      	cpsie	i
 80022c8:	bd70      	pop	{r4, r5, r6, pc}
 80022ca:	b14a      	cbz	r2, 80022e0 <rt_mbx_wait+0x94>
 80022cc:	6842      	ldr	r2, [r0, #4]
 80022ce:	4b09      	ldr	r3, [pc, #36]	; (80022f4 <rt_mbx_wait+0xa8>)
 80022d0:	b142      	cbz	r2, 80022e4 <rt_mbx_wait+0x98>
 80022d2:	6819      	ldr	r1, [r3, #0]
 80022d4:	f7ff fd76 	bl	8001dc4 <rt_put_prio>
 80022d8:	2108      	movs	r1, #8
 80022da:	4630      	mov	r0, r6
 80022dc:	f000 ff40 	bl	8003160 <rt_block>
 80022e0:	2001      	movs	r0, #1
 80022e2:	bd70      	pop	{r4, r5, r6, pc}
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	6043      	str	r3, [r0, #4]
 80022e8:	605a      	str	r2, [r3, #4]
 80022ea:	6098      	str	r0, [r3, #8]
 80022ec:	2301      	movs	r3, #1
 80022ee:	7043      	strb	r3, [r0, #1]
 80022f0:	e7f2      	b.n	80022d8 <rt_mbx_wait+0x8c>
 80022f2:	bf00      	nop
 80022f4:	20003014 	.word	0x20003014

080022f8 <rt_mbx_check>:
 80022f8:	89c2      	ldrh	r2, [r0, #14]
 80022fa:	8980      	ldrh	r0, [r0, #12]
 80022fc:	1a10      	subs	r0, r2, r0
 80022fe:	4770      	bx	lr

08002300 <isr_mbx_send>:
 8002300:	b508      	push	{r3, lr}
 8002302:	f7ff fe31 	bl	8001f68 <rt_psq_enq>
 8002306:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800230a:	f7ff be53 	b.w	8001fb4 <rt_psh_req>

0800230e <isr_mbx_receive>:
 800230e:	8983      	ldrh	r3, [r0, #12]
 8002310:	b510      	push	{r4, lr}
 8002312:	4604      	mov	r4, r0
 8002314:	b30b      	cbz	r3, 800235a <isr_mbx_receive+0x4c>
 8002316:	8943      	ldrh	r3, [r0, #10]
 8002318:	3304      	adds	r3, #4
 800231a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800231e:	600b      	str	r3, [r1, #0]
 8002320:	7843      	ldrb	r3, [r0, #1]
 8002322:	2b02      	cmp	r3, #2
 8002324:	d104      	bne.n	8002330 <isr_mbx_receive+0x22>
 8002326:	2100      	movs	r1, #0
 8002328:	f7ff fe1e 	bl	8001f68 <rt_psq_enq>
 800232c:	f7ff fe42 	bl	8001fb4 <rt_psh_req>
 8002330:	f3ef 8310 	mrs	r3, PRIMASK
 8002334:	f3ef 8210 	mrs	r2, PRIMASK
 8002338:	b672      	cpsid	i
 800233a:	89a2      	ldrh	r2, [r4, #12]
 800233c:	3a01      	subs	r2, #1
 800233e:	81a2      	strh	r2, [r4, #12]
 8002340:	b903      	cbnz	r3, 8002344 <isr_mbx_receive+0x36>
 8002342:	b662      	cpsie	i
 8002344:	8963      	ldrh	r3, [r4, #10]
 8002346:	89e2      	ldrh	r2, [r4, #14]
 8002348:	3301      	adds	r3, #1
 800234a:	b29b      	uxth	r3, r3
 800234c:	429a      	cmp	r2, r3
 800234e:	8163      	strh	r3, [r4, #10]
 8002350:	d101      	bne.n	8002356 <isr_mbx_receive+0x48>
 8002352:	2300      	movs	r3, #0
 8002354:	8163      	strh	r3, [r4, #10]
 8002356:	2004      	movs	r0, #4
 8002358:	bd10      	pop	{r4, pc}
 800235a:	4618      	mov	r0, r3
 800235c:	bd10      	pop	{r4, pc}
	...

08002360 <rt_mbx_psh>:
 8002360:	6843      	ldr	r3, [r0, #4]
 8002362:	b570      	push	{r4, r5, r6, lr}
 8002364:	4604      	mov	r4, r0
 8002366:	460e      	mov	r6, r1
 8002368:	2b00      	cmp	r3, #0
 800236a:	d04b      	beq.n	8002404 <rt_mbx_psh+0xa4>
 800236c:	7845      	ldrb	r5, [r0, #1]
 800236e:	2d02      	cmp	r5, #2
 8002370:	d020      	beq.n	80023b4 <rt_mbx_psh+0x54>
 8002372:	2d03      	cmp	r5, #3
 8002374:	d00a      	beq.n	800238c <rt_mbx_psh+0x2c>
 8002376:	2d01      	cmp	r5, #1
 8002378:	d161      	bne.n	800243e <rt_mbx_psh+0xde>
 800237a:	f7ff fd3b 	bl	8001df4 <rt_get_first>
 800237e:	4604      	mov	r4, r0
 8002380:	4632      	mov	r2, r6
 8002382:	2110      	movs	r1, #16
 8002384:	f7ff ff03 	bl	800218e <rt_ret_val2>
 8002388:	7065      	strb	r5, [r4, #1]
 800238a:	e00e      	b.n	80023aa <rt_mbx_psh+0x4a>
 800238c:	4608      	mov	r0, r1
 800238e:	f7ff ff2e 	bl	80021ee <rt_alloc_box>
 8002392:	4605      	mov	r5, r0
 8002394:	2800      	cmp	r0, #0
 8002396:	d052      	beq.n	800243e <rt_mbx_psh+0xde>
 8002398:	4620      	mov	r0, r4
 800239a:	f7ff fd2b 	bl	8001df4 <rt_get_first>
 800239e:	4629      	mov	r1, r5
 80023a0:	4604      	mov	r4, r0
 80023a2:	f7ff feeb 	bl	800217c <rt_ret_val>
 80023a6:	2301      	movs	r3, #1
 80023a8:	7063      	strb	r3, [r4, #1]
 80023aa:	4620      	mov	r0, r4
 80023ac:	f7ff fdc8 	bl	8001f40 <rt_rmv_dly>
 80023b0:	4621      	mov	r1, r4
 80023b2:	e022      	b.n	80023fa <rt_mbx_psh+0x9a>
 80023b4:	f7ff fd1e 	bl	8001df4 <rt_get_first>
 80023b8:	2100      	movs	r1, #0
 80023ba:	4605      	mov	r5, r0
 80023bc:	f7ff fede 	bl	800217c <rt_ret_val>
 80023c0:	8923      	ldrh	r3, [r4, #8]
 80023c2:	69e9      	ldr	r1, [r5, #28]
 80023c4:	1d1a      	adds	r2, r3, #4
 80023c6:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80023ca:	f3ef 8210 	mrs	r2, PRIMASK
 80023ce:	f3ef 8110 	mrs	r1, PRIMASK
 80023d2:	b672      	cpsid	i
 80023d4:	89a1      	ldrh	r1, [r4, #12]
 80023d6:	3101      	adds	r1, #1
 80023d8:	81a1      	strh	r1, [r4, #12]
 80023da:	b902      	cbnz	r2, 80023de <rt_mbx_psh+0x7e>
 80023dc:	b662      	cpsie	i
 80023de:	89e2      	ldrh	r2, [r4, #14]
 80023e0:	3301      	adds	r3, #1
 80023e2:	b29b      	uxth	r3, r3
 80023e4:	429a      	cmp	r2, r3
 80023e6:	8123      	strh	r3, [r4, #8]
 80023e8:	bf04      	itt	eq
 80023ea:	2300      	moveq	r3, #0
 80023ec:	8123      	strheq	r3, [r4, #8]
 80023ee:	2301      	movs	r3, #1
 80023f0:	706b      	strb	r3, [r5, #1]
 80023f2:	4628      	mov	r0, r5
 80023f4:	f7ff fda4 	bl	8001f40 <rt_rmv_dly>
 80023f8:	4629      	mov	r1, r5
 80023fa:	4811      	ldr	r0, [pc, #68]	; (8002440 <rt_mbx_psh+0xe0>)
 80023fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002400:	f7ff bce0 	b.w	8001dc4 <rt_put_prio>
 8002404:	8980      	ldrh	r0, [r0, #12]
 8002406:	89e1      	ldrh	r1, [r4, #14]
 8002408:	4288      	cmp	r0, r1
 800240a:	d213      	bcs.n	8002434 <rt_mbx_psh+0xd4>
 800240c:	8923      	ldrh	r3, [r4, #8]
 800240e:	1d1a      	adds	r2, r3, #4
 8002410:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8002414:	f3ef 8210 	mrs	r2, PRIMASK
 8002418:	f3ef 8510 	mrs	r5, PRIMASK
 800241c:	b672      	cpsid	i
 800241e:	3001      	adds	r0, #1
 8002420:	81a0      	strh	r0, [r4, #12]
 8002422:	b902      	cbnz	r2, 8002426 <rt_mbx_psh+0xc6>
 8002424:	b662      	cpsie	i
 8002426:	3301      	adds	r3, #1
 8002428:	b29b      	uxth	r3, r3
 800242a:	4299      	cmp	r1, r3
 800242c:	bf08      	it	eq
 800242e:	2300      	moveq	r3, #0
 8002430:	8123      	strh	r3, [r4, #8]
 8002432:	bd70      	pop	{r4, r5, r6, pc}
 8002434:	2003      	movs	r0, #3
 8002436:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800243a:	f7ff bc75 	b.w	8001d28 <os_error>
 800243e:	bd70      	pop	{r4, r5, r6, pc}
 8002440:	20002fc8 	.word	0x20002fc8

08002444 <rt_mut_init>:
 8002444:	2303      	movs	r3, #3
 8002446:	7003      	strb	r3, [r0, #0]
 8002448:	2300      	movs	r3, #0
 800244a:	8043      	strh	r3, [r0, #2]
 800244c:	6043      	str	r3, [r0, #4]
 800244e:	6083      	str	r3, [r0, #8]
 8002450:	60c3      	str	r3, [r0, #12]
 8002452:	4770      	bx	lr

08002454 <rt_mut_delete>:
 8002454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002456:	8843      	ldrh	r3, [r0, #2]
 8002458:	4604      	mov	r4, r0
 800245a:	b19b      	cbz	r3, 8002484 <rt_mut_delete+0x30>
 800245c:	6880      	ldr	r0, [r0, #8]
 800245e:	6a03      	ldr	r3, [r0, #32]
 8002460:	429c      	cmp	r4, r3
 8002462:	d128      	bne.n	80024b6 <rt_mut_delete+0x62>
 8002464:	68e3      	ldr	r3, [r4, #12]
 8002466:	6203      	str	r3, [r0, #32]
 8002468:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800246c:	6a02      	ldr	r2, [r0, #32]
 800246e:	bb52      	cbnz	r2, 80024c6 <rt_mut_delete+0x72>
 8002470:	7882      	ldrb	r2, [r0, #2]
 8002472:	429a      	cmp	r2, r3
 8002474:	d006      	beq.n	8002484 <rt_mut_delete+0x30>
 8002476:	7083      	strb	r3, [r0, #2]
 8002478:	4b1f      	ldr	r3, [pc, #124]	; (80024f8 <rt_mut_delete+0xa4>)
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	4298      	cmp	r0, r3
 800247e:	d001      	beq.n	8002484 <rt_mut_delete+0x30>
 8002480:	f7ff fd46 	bl	8001f10 <rt_resort_prio>
 8002484:	4f1d      	ldr	r7, [pc, #116]	; (80024fc <rt_mut_delete+0xa8>)
 8002486:	2601      	movs	r6, #1
 8002488:	6865      	ldr	r5, [r4, #4]
 800248a:	bb25      	cbnz	r5, 80024d6 <rt_mut_delete+0x82>
 800248c:	481b      	ldr	r0, [pc, #108]	; (80024fc <rt_mut_delete+0xa8>)
 800248e:	6843      	ldr	r3, [r0, #4]
 8002490:	b16b      	cbz	r3, 80024ae <rt_mut_delete+0x5a>
 8002492:	4e19      	ldr	r6, [pc, #100]	; (80024f8 <rt_mut_delete+0xa4>)
 8002494:	789a      	ldrb	r2, [r3, #2]
 8002496:	6831      	ldr	r1, [r6, #0]
 8002498:	788b      	ldrb	r3, [r1, #2]
 800249a:	429a      	cmp	r2, r3
 800249c:	d907      	bls.n	80024ae <rt_mut_delete+0x5a>
 800249e:	f7ff fc91 	bl	8001dc4 <rt_put_prio>
 80024a2:	6833      	ldr	r3, [r6, #0]
 80024a4:	2201      	movs	r2, #1
 80024a6:	705a      	strb	r2, [r3, #1]
 80024a8:	4628      	mov	r0, r5
 80024aa:	f000 fe35 	bl	8003118 <rt_dispatch>
 80024ae:	2000      	movs	r0, #0
 80024b0:	7020      	strb	r0, [r4, #0]
 80024b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024b4:	4613      	mov	r3, r2
 80024b6:	2b00      	cmp	r3, #0
 80024b8:	d0d6      	beq.n	8002468 <rt_mut_delete+0x14>
 80024ba:	68da      	ldr	r2, [r3, #12]
 80024bc:	4294      	cmp	r4, r2
 80024be:	d1f9      	bne.n	80024b4 <rt_mut_delete+0x60>
 80024c0:	68e2      	ldr	r2, [r4, #12]
 80024c2:	60da      	str	r2, [r3, #12]
 80024c4:	e7d0      	b.n	8002468 <rt_mut_delete+0x14>
 80024c6:	6851      	ldr	r1, [r2, #4]
 80024c8:	b119      	cbz	r1, 80024d2 <rt_mut_delete+0x7e>
 80024ca:	7889      	ldrb	r1, [r1, #2]
 80024cc:	428b      	cmp	r3, r1
 80024ce:	bf38      	it	cc
 80024d0:	460b      	movcc	r3, r1
 80024d2:	68d2      	ldr	r2, [r2, #12]
 80024d4:	e7cb      	b.n	800246e <rt_mut_delete+0x1a>
 80024d6:	4620      	mov	r0, r4
 80024d8:	f7ff fc8c 	bl	8001df4 <rt_get_first>
 80024dc:	2100      	movs	r1, #0
 80024de:	4605      	mov	r5, r0
 80024e0:	f7ff fe4c 	bl	800217c <rt_ret_val>
 80024e4:	4628      	mov	r0, r5
 80024e6:	f7ff fd2b 	bl	8001f40 <rt_rmv_dly>
 80024ea:	706e      	strb	r6, [r5, #1]
 80024ec:	4629      	mov	r1, r5
 80024ee:	4638      	mov	r0, r7
 80024f0:	f7ff fc68 	bl	8001dc4 <rt_put_prio>
 80024f4:	e7c8      	b.n	8002488 <rt_mut_delete+0x34>
 80024f6:	bf00      	nop
 80024f8:	20003014 	.word	0x20003014
 80024fc:	20002fc8 	.word	0x20002fc8

08002500 <rt_mut_release>:
 8002500:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002504:	8843      	ldrh	r3, [r0, #2]
 8002506:	4605      	mov	r5, r0
 8002508:	2b00      	cmp	r3, #0
 800250a:	d063      	beq.n	80025d4 <rt_mut_release+0xd4>
 800250c:	4f32      	ldr	r7, [pc, #200]	; (80025d8 <rt_mut_release+0xd8>)
 800250e:	6881      	ldr	r1, [r0, #8]
 8002510:	683a      	ldr	r2, [r7, #0]
 8002512:	4291      	cmp	r1, r2
 8002514:	d15e      	bne.n	80025d4 <rt_mut_release+0xd4>
 8002516:	3b01      	subs	r3, #1
 8002518:	b29b      	uxth	r3, r3
 800251a:	8043      	strh	r3, [r0, #2]
 800251c:	b11b      	cbz	r3, 8002526 <rt_mut_release+0x26>
 800251e:	2400      	movs	r4, #0
 8002520:	4620      	mov	r0, r4
 8002522:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002526:	6a0b      	ldr	r3, [r1, #32]
 8002528:	4298      	cmp	r0, r3
 800252a:	d129      	bne.n	8002580 <rt_mut_release+0x80>
 800252c:	68c3      	ldr	r3, [r0, #12]
 800252e:	620b      	str	r3, [r1, #32]
 8002530:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002534:	6a0c      	ldr	r4, [r1, #32]
 8002536:	bb5c      	cbnz	r4, 8002590 <rt_mut_release+0x90>
 8002538:	708b      	strb	r3, [r1, #2]
 800253a:	686a      	ldr	r2, [r5, #4]
 800253c:	f8df 809c 	ldr.w	r8, [pc, #156]	; 80025dc <rt_mut_release+0xdc>
 8002540:	2a00      	cmp	r2, #0
 8002542:	d03b      	beq.n	80025bc <rt_mut_release+0xbc>
 8002544:	4628      	mov	r0, r5
 8002546:	f7ff fc55 	bl	8001df4 <rt_get_first>
 800254a:	4621      	mov	r1, r4
 800254c:	4606      	mov	r6, r0
 800254e:	f7ff fe15 	bl	800217c <rt_ret_val>
 8002552:	4630      	mov	r0, r6
 8002554:	f7ff fcf4 	bl	8001f40 <rt_rmv_dly>
 8002558:	6a33      	ldr	r3, [r6, #32]
 800255a:	60eb      	str	r3, [r5, #12]
 800255c:	f04f 0901 	mov.w	r9, #1
 8002560:	6839      	ldr	r1, [r7, #0]
 8002562:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8002566:	f8a5 9002 	strh.w	r9, [r5, #2]
 800256a:	60ae      	str	r6, [r5, #8]
 800256c:	6235      	str	r5, [r6, #32]
 800256e:	788a      	ldrb	r2, [r1, #2]
 8002570:	789b      	ldrb	r3, [r3, #2]
 8002572:	429a      	cmp	r2, r3
 8002574:	d314      	bcc.n	80025a0 <rt_mut_release+0xa0>
 8002576:	4630      	mov	r0, r6
 8002578:	f000 fdce 	bl	8003118 <rt_dispatch>
 800257c:	e7d0      	b.n	8002520 <rt_mut_release+0x20>
 800257e:	4613      	mov	r3, r2
 8002580:	2b00      	cmp	r3, #0
 8002582:	d0d5      	beq.n	8002530 <rt_mut_release+0x30>
 8002584:	68da      	ldr	r2, [r3, #12]
 8002586:	4295      	cmp	r5, r2
 8002588:	d1f9      	bne.n	800257e <rt_mut_release+0x7e>
 800258a:	68ea      	ldr	r2, [r5, #12]
 800258c:	60da      	str	r2, [r3, #12]
 800258e:	e7cf      	b.n	8002530 <rt_mut_release+0x30>
 8002590:	6862      	ldr	r2, [r4, #4]
 8002592:	b11a      	cbz	r2, 800259c <rt_mut_release+0x9c>
 8002594:	7892      	ldrb	r2, [r2, #2]
 8002596:	4293      	cmp	r3, r2
 8002598:	bf38      	it	cc
 800259a:	4613      	movcc	r3, r2
 800259c:	68e4      	ldr	r4, [r4, #12]
 800259e:	e7ca      	b.n	8002536 <rt_mut_release+0x36>
 80025a0:	4640      	mov	r0, r8
 80025a2:	f7ff fc0f 	bl	8001dc4 <rt_put_prio>
 80025a6:	4631      	mov	r1, r6
 80025a8:	4640      	mov	r0, r8
 80025aa:	f7ff fc0b 	bl	8001dc4 <rt_put_prio>
 80025ae:	683b      	ldr	r3, [r7, #0]
 80025b0:	f883 9001 	strb.w	r9, [r3, #1]
 80025b4:	f886 9001 	strb.w	r9, [r6, #1]
 80025b8:	4620      	mov	r0, r4
 80025ba:	e7dd      	b.n	8002578 <rt_mut_release+0x78>
 80025bc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80025c0:	7892      	ldrb	r2, [r2, #2]
 80025c2:	429a      	cmp	r2, r3
 80025c4:	d9ab      	bls.n	800251e <rt_mut_release+0x1e>
 80025c6:	4640      	mov	r0, r8
 80025c8:	f7ff fbfc 	bl	8001dc4 <rt_put_prio>
 80025cc:	683b      	ldr	r3, [r7, #0]
 80025ce:	2201      	movs	r2, #1
 80025d0:	705a      	strb	r2, [r3, #1]
 80025d2:	e7f1      	b.n	80025b8 <rt_mut_release+0xb8>
 80025d4:	24ff      	movs	r4, #255	; 0xff
 80025d6:	e7a3      	b.n	8002520 <rt_mut_release+0x20>
 80025d8:	20003014 	.word	0x20003014
 80025dc:	20002fc8 	.word	0x20002fc8

080025e0 <rt_mut_wait>:
 80025e0:	8843      	ldrh	r3, [r0, #2]
 80025e2:	b570      	push	{r4, r5, r6, lr}
 80025e4:	4604      	mov	r4, r0
 80025e6:	460e      	mov	r6, r1
 80025e8:	4d13      	ldr	r5, [pc, #76]	; (8002638 <rt_mut_wait+0x58>)
 80025ea:	b943      	cbnz	r3, 80025fe <rt_mut_wait+0x1e>
 80025ec:	682a      	ldr	r2, [r5, #0]
 80025ee:	6082      	str	r2, [r0, #8]
 80025f0:	6a11      	ldr	r1, [r2, #32]
 80025f2:	60c1      	str	r1, [r0, #12]
 80025f4:	6210      	str	r0, [r2, #32]
 80025f6:	3301      	adds	r3, #1
 80025f8:	8063      	strh	r3, [r4, #2]
 80025fa:	2000      	movs	r0, #0
 80025fc:	bd70      	pop	{r4, r5, r6, pc}
 80025fe:	6880      	ldr	r0, [r0, #8]
 8002600:	682a      	ldr	r2, [r5, #0]
 8002602:	4290      	cmp	r0, r2
 8002604:	d0f7      	beq.n	80025f6 <rt_mut_wait+0x16>
 8002606:	b181      	cbz	r1, 800262a <rt_mut_wait+0x4a>
 8002608:	7893      	ldrb	r3, [r2, #2]
 800260a:	7882      	ldrb	r2, [r0, #2]
 800260c:	429a      	cmp	r2, r3
 800260e:	d202      	bcs.n	8002616 <rt_mut_wait+0x36>
 8002610:	7083      	strb	r3, [r0, #2]
 8002612:	f7ff fc7d 	bl	8001f10 <rt_resort_prio>
 8002616:	6862      	ldr	r2, [r4, #4]
 8002618:	b14a      	cbz	r2, 800262e <rt_mut_wait+0x4e>
 800261a:	6829      	ldr	r1, [r5, #0]
 800261c:	4620      	mov	r0, r4
 800261e:	f7ff fbd1 	bl	8001dc4 <rt_put_prio>
 8002622:	2109      	movs	r1, #9
 8002624:	4630      	mov	r0, r6
 8002626:	f000 fd9b 	bl	8003160 <rt_block>
 800262a:	2001      	movs	r0, #1
 800262c:	bd70      	pop	{r4, r5, r6, pc}
 800262e:	682b      	ldr	r3, [r5, #0]
 8002630:	6063      	str	r3, [r4, #4]
 8002632:	605a      	str	r2, [r3, #4]
 8002634:	609c      	str	r4, [r3, #8]
 8002636:	e7f4      	b.n	8002622 <rt_mut_wait+0x42>
 8002638:	20003014 	.word	0x20003014

0800263c <rt_evt_wait>:
 800263c:	b538      	push	{r3, r4, r5, lr}
 800263e:	4c0e      	ldr	r4, [pc, #56]	; (8002678 <rt_evt_wait+0x3c>)
 8002640:	4603      	mov	r3, r0
 8002642:	4608      	mov	r0, r1
 8002644:	6821      	ldr	r1, [r4, #0]
 8002646:	b142      	cbz	r2, 800265a <rt_evt_wait+0x1e>
 8002648:	8b0a      	ldrh	r2, [r1, #24]
 800264a:	ea33 0502 	bics.w	r5, r3, r2
 800264e:	d10a      	bne.n	8002666 <rt_evt_wait+0x2a>
 8002650:	ea22 0303 	bic.w	r3, r2, r3
 8002654:	830b      	strh	r3, [r1, #24]
 8002656:	2002      	movs	r0, #2
 8002658:	bd38      	pop	{r3, r4, r5, pc}
 800265a:	8b0a      	ldrh	r2, [r1, #24]
 800265c:	ea13 0502 	ands.w	r5, r3, r2
 8002660:	d008      	beq.n	8002674 <rt_evt_wait+0x38>
 8002662:	834d      	strh	r5, [r1, #26]
 8002664:	e7f4      	b.n	8002650 <rt_evt_wait+0x14>
 8002666:	2106      	movs	r1, #6
 8002668:	6822      	ldr	r2, [r4, #0]
 800266a:	8353      	strh	r3, [r2, #26]
 800266c:	f000 fd78 	bl	8003160 <rt_block>
 8002670:	2001      	movs	r0, #1
 8002672:	bd38      	pop	{r3, r4, r5, pc}
 8002674:	2105      	movs	r1, #5
 8002676:	e7f7      	b.n	8002668 <rt_evt_wait+0x2c>
 8002678:	20003014 	.word	0x20003014

0800267c <rt_evt_set>:
 800267c:	3901      	subs	r1, #1
 800267e:	4b14      	ldr	r3, [pc, #80]	; (80026d0 <rt_evt_set+0x54>)
 8002680:	b510      	push	{r4, lr}
 8002682:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
 8002686:	b314      	cbz	r4, 80026ce <rt_evt_set+0x52>
 8002688:	8b23      	ldrh	r3, [r4, #24]
 800268a:	7862      	ldrb	r2, [r4, #1]
 800268c:	4318      	orrs	r0, r3
 800268e:	2a06      	cmp	r2, #6
 8002690:	8320      	strh	r0, [r4, #24]
 8002692:	8b63      	ldrh	r3, [r4, #26]
 8002694:	d114      	bne.n	80026c0 <rt_evt_set+0x44>
 8002696:	ea33 0200 	bics.w	r2, r3, r0
 800269a:	d118      	bne.n	80026ce <rt_evt_set+0x52>
 800269c:	ea20 0003 	bic.w	r0, r0, r3
 80026a0:	8320      	strh	r0, [r4, #24]
 80026a2:	4620      	mov	r0, r4
 80026a4:	f7ff fc4c 	bl	8001f40 <rt_rmv_dly>
 80026a8:	2301      	movs	r3, #1
 80026aa:	4620      	mov	r0, r4
 80026ac:	7063      	strb	r3, [r4, #1]
 80026ae:	8b62      	ldrh	r2, [r4, #26]
 80026b0:	2108      	movs	r1, #8
 80026b2:	f7ff fd6c 	bl	800218e <rt_ret_val2>
 80026b6:	4620      	mov	r0, r4
 80026b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80026bc:	f000 bd2c 	b.w	8003118 <rt_dispatch>
 80026c0:	2a05      	cmp	r2, #5
 80026c2:	d104      	bne.n	80026ce <rt_evt_set+0x52>
 80026c4:	ea10 0203 	ands.w	r2, r0, r3
 80026c8:	d001      	beq.n	80026ce <rt_evt_set+0x52>
 80026ca:	8362      	strh	r2, [r4, #26]
 80026cc:	e7e6      	b.n	800269c <rt_evt_set+0x20>
 80026ce:	bd10      	pop	{r4, pc}
 80026d0:	200029b0 	.word	0x200029b0

080026d4 <isr_evt_set>:
 80026d4:	b508      	push	{r3, lr}
 80026d6:	3901      	subs	r1, #1
 80026d8:	4b06      	ldr	r3, [pc, #24]	; (80026f4 <isr_evt_set+0x20>)
 80026da:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80026de:	b13b      	cbz	r3, 80026f0 <isr_evt_set+0x1c>
 80026e0:	4601      	mov	r1, r0
 80026e2:	4618      	mov	r0, r3
 80026e4:	f7ff fc40 	bl	8001f68 <rt_psq_enq>
 80026e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80026ec:	f7ff bc62 	b.w	8001fb4 <rt_psh_req>
 80026f0:	bd08      	pop	{r3, pc}
 80026f2:	bf00      	nop
 80026f4:	200029b0 	.word	0x200029b0

080026f8 <rt_evt_psh>:
 80026f8:	b510      	push	{r4, lr}
 80026fa:	8b03      	ldrh	r3, [r0, #24]
 80026fc:	7842      	ldrb	r2, [r0, #1]
 80026fe:	4319      	orrs	r1, r3
 8002700:	2a06      	cmp	r2, #6
 8002702:	4604      	mov	r4, r0
 8002704:	8301      	strh	r1, [r0, #24]
 8002706:	8b43      	ldrh	r3, [r0, #26]
 8002708:	d115      	bne.n	8002736 <rt_evt_psh+0x3e>
 800270a:	ea33 0201 	bics.w	r2, r3, r1
 800270e:	d119      	bne.n	8002744 <rt_evt_psh+0x4c>
 8002710:	ea21 0103 	bic.w	r1, r1, r3
 8002714:	8321      	strh	r1, [r4, #24]
 8002716:	4620      	mov	r0, r4
 8002718:	f7ff fc12 	bl	8001f40 <rt_rmv_dly>
 800271c:	2301      	movs	r3, #1
 800271e:	4620      	mov	r0, r4
 8002720:	7063      	strb	r3, [r4, #1]
 8002722:	8b62      	ldrh	r2, [r4, #26]
 8002724:	2108      	movs	r1, #8
 8002726:	f7ff fd32 	bl	800218e <rt_ret_val2>
 800272a:	4621      	mov	r1, r4
 800272c:	4806      	ldr	r0, [pc, #24]	; (8002748 <rt_evt_psh+0x50>)
 800272e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002732:	f7ff bb47 	b.w	8001dc4 <rt_put_prio>
 8002736:	2a05      	cmp	r2, #5
 8002738:	d104      	bne.n	8002744 <rt_evt_psh+0x4c>
 800273a:	ea11 0203 	ands.w	r2, r1, r3
 800273e:	d001      	beq.n	8002744 <rt_evt_psh+0x4c>
 8002740:	8342      	strh	r2, [r0, #26]
 8002742:	e7e5      	b.n	8002710 <rt_evt_psh+0x18>
 8002744:	bd10      	pop	{r4, pc}
 8002746:	bf00      	nop
 8002748:	20002fc8 	.word	0x20002fc8

0800274c <rt_init_robin>:
 800274c:	4b03      	ldr	r3, [pc, #12]	; (800275c <rt_init_robin+0x10>)
 800274e:	2200      	movs	r2, #0
 8002750:	601a      	str	r2, [r3, #0]
 8002752:	4a03      	ldr	r2, [pc, #12]	; (8002760 <rt_init_robin+0x14>)
 8002754:	6812      	ldr	r2, [r2, #0]
 8002756:	80da      	strh	r2, [r3, #6]
 8002758:	4770      	bx	lr
 800275a:	bf00      	nop
 800275c:	20003000 	.word	0x20003000
 8002760:	08008494 	.word	0x08008494

08002764 <rt_chk_robin>:
 8002764:	b508      	push	{r3, lr}
 8002766:	4b0e      	ldr	r3, [pc, #56]	; (80027a0 <rt_chk_robin+0x3c>)
 8002768:	685a      	ldr	r2, [r3, #4]
 800276a:	4b0e      	ldr	r3, [pc, #56]	; (80027a4 <rt_chk_robin+0x40>)
 800276c:	6819      	ldr	r1, [r3, #0]
 800276e:	4291      	cmp	r1, r2
 8002770:	490d      	ldr	r1, [pc, #52]	; (80027a8 <rt_chk_robin+0x44>)
 8002772:	d005      	beq.n	8002780 <rt_chk_robin+0x1c>
 8002774:	601a      	str	r2, [r3, #0]
 8002776:	88da      	ldrh	r2, [r3, #6]
 8002778:	6808      	ldr	r0, [r1, #0]
 800277a:	3a01      	subs	r2, #1
 800277c:	4402      	add	r2, r0
 800277e:	809a      	strh	r2, [r3, #4]
 8002780:	8898      	ldrh	r0, [r3, #4]
 8002782:	880a      	ldrh	r2, [r1, #0]
 8002784:	4290      	cmp	r0, r2
 8002786:	d10a      	bne.n	800279e <rt_chk_robin+0x3a>
 8002788:	2200      	movs	r2, #0
 800278a:	4805      	ldr	r0, [pc, #20]	; (80027a0 <rt_chk_robin+0x3c>)
 800278c:	601a      	str	r2, [r3, #0]
 800278e:	f7ff fb31 	bl	8001df4 <rt_get_first>
 8002792:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002796:	4601      	mov	r1, r0
 8002798:	4801      	ldr	r0, [pc, #4]	; (80027a0 <rt_chk_robin+0x3c>)
 800279a:	f7ff bb13 	b.w	8001dc4 <rt_put_prio>
 800279e:	bd08      	pop	{r3, pc}
 80027a0:	20002fc8 	.word	0x20002fc8
 80027a4:	20003000 	.word	0x20003000
 80027a8:	2000305c 	.word	0x2000305c

080027ac <rt_timer_insert>:
 80027ac:	4a0b      	ldr	r2, [pc, #44]	; (80027dc <rt_timer_insert+0x30>)
 80027ae:	6813      	ldr	r3, [r2, #0]
 80027b0:	b530      	push	{r4, r5, lr}
 80027b2:	2400      	movs	r4, #0
 80027b4:	b943      	cbnz	r3, 80027c8 <rt_timer_insert+0x1c>
 80027b6:	6003      	str	r3, [r0, #0]
 80027b8:	6081      	str	r1, [r0, #8]
 80027ba:	b113      	cbz	r3, 80027c2 <rt_timer_insert+0x16>
 80027bc:	689d      	ldr	r5, [r3, #8]
 80027be:	1a69      	subs	r1, r5, r1
 80027c0:	6099      	str	r1, [r3, #8]
 80027c2:	b144      	cbz	r4, 80027d6 <rt_timer_insert+0x2a>
 80027c4:	6020      	str	r0, [r4, #0]
 80027c6:	bd30      	pop	{r4, r5, pc}
 80027c8:	689d      	ldr	r5, [r3, #8]
 80027ca:	42a9      	cmp	r1, r5
 80027cc:	d3f3      	bcc.n	80027b6 <rt_timer_insert+0xa>
 80027ce:	461c      	mov	r4, r3
 80027d0:	1b49      	subs	r1, r1, r5
 80027d2:	681b      	ldr	r3, [r3, #0]
 80027d4:	e7ee      	b.n	80027b4 <rt_timer_insert+0x8>
 80027d6:	6010      	str	r0, [r2, #0]
 80027d8:	bd30      	pop	{r4, r5, pc}
 80027da:	bf00      	nop
 80027dc:	20003010 	.word	0x20003010

080027e0 <rt_ms2tick>:
 80027e0:	b1c0      	cbz	r0, 8002814 <rt_ms2tick+0x34>
 80027e2:	1c43      	adds	r3, r0, #1
 80027e4:	d011      	beq.n	800280a <rt_ms2tick+0x2a>
 80027e6:	4b0c      	ldr	r3, [pc, #48]	; (8002818 <rt_ms2tick+0x38>)
 80027e8:	4298      	cmp	r0, r3
 80027ea:	d811      	bhi.n	8002810 <rt_ms2tick+0x30>
 80027ec:	4b0b      	ldr	r3, [pc, #44]	; (800281c <rt_ms2tick+0x3c>)
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80027f4:	1e5a      	subs	r2, r3, #1
 80027f6:	fb01 2000 	mla	r0, r1, r0, r2
 80027fa:	fbb0 f3f3 	udiv	r3, r0, r3
 80027fe:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002802:	4283      	cmp	r3, r0
 8002804:	d806      	bhi.n	8002814 <rt_ms2tick+0x34>
 8002806:	b298      	uxth	r0, r3
 8002808:	4770      	bx	lr
 800280a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800280e:	4770      	bx	lr
 8002810:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002814:	4770      	bx	lr
 8002816:	bf00      	nop
 8002818:	003d0900 	.word	0x003d0900
 800281c:	0800844c 	.word	0x0800844c

08002820 <rt_tid2ptcb>:
 8002820:	b138      	cbz	r0, 8002832 <rt_tid2ptcb+0x12>
 8002822:	0783      	lsls	r3, r0, #30
 8002824:	d104      	bne.n	8002830 <rt_tid2ptcb+0x10>
 8002826:	7803      	ldrb	r3, [r0, #0]
 8002828:	2b00      	cmp	r3, #0
 800282a:	bf18      	it	ne
 800282c:	2000      	movne	r0, #0
 800282e:	4770      	bx	lr
 8002830:	2000      	movs	r0, #0
 8002832:	4770      	bx	lr

08002834 <svcKernelStart>:
 8002834:	b5b0      	push	{r4, r5, r7, lr}
 8002836:	4d0e      	ldr	r5, [pc, #56]	; (8002870 <svcKernelStart+0x3c>)
 8002838:	7828      	ldrb	r0, [r5, #0]
 800283a:	af00      	add	r7, sp, #0
 800283c:	b9a8      	cbnz	r0, 800286a <svcKernelStart+0x36>
 800283e:	4c0d      	ldr	r4, [pc, #52]	; (8002874 <svcKernelStart+0x40>)
 8002840:	6823      	ldr	r3, [r4, #0]
 8002842:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8002846:	f000 fcad 	bl	80031a4 <rt_tsk_prio>
 800284a:	6823      	ldr	r3, [r4, #0]
 800284c:	78da      	ldrb	r2, [r3, #3]
 800284e:	2aff      	cmp	r2, #255	; 0xff
 8002850:	d103      	bne.n	800285a <svcKernelStart+0x26>
 8002852:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002854:	3220      	adds	r2, #32
 8002856:	f382 8809 	msr	PSP, r2
 800285a:	6862      	ldr	r2, [r4, #4]
 800285c:	b90a      	cbnz	r2, 8002862 <svcKernelStart+0x2e>
 800285e:	e884 000c 	stmia.w	r4, {r2, r3}
 8002862:	f000 fe57 	bl	8003514 <rt_sys_start>
 8002866:	2301      	movs	r3, #1
 8002868:	702b      	strb	r3, [r5, #0]
 800286a:	2000      	movs	r0, #0
 800286c:	bdb0      	pop	{r4, r5, r7, pc}
 800286e:	bf00      	nop
 8002870:	2000300d 	.word	0x2000300d
 8002874:	20003014 	.word	0x20003014

08002878 <svcKernelRunning>:
 8002878:	4b01      	ldr	r3, [pc, #4]	; (8002880 <svcKernelRunning+0x8>)
 800287a:	7818      	ldrb	r0, [r3, #0]
 800287c:	4770      	bx	lr
 800287e:	bf00      	nop
 8002880:	2000300d 	.word	0x2000300d

08002884 <osKernelRunning>:
 8002884:	b510      	push	{r4, lr}
 8002886:	f3ef 8410 	mrs	r4, PRIMASK
 800288a:	b934      	cbnz	r4, 800289a <osKernelRunning+0x16>
 800288c:	f3ef 8405 	mrs	r4, IPSR
 8002890:	b91c      	cbnz	r4, 800289a <osKernelRunning+0x16>
 8002892:	f3ef 8414 	mrs	r4, CONTROL
 8002896:	07e4      	lsls	r4, r4, #31
 8002898:	d402      	bmi.n	80028a0 <osKernelRunning+0x1c>
 800289a:	4b03      	ldr	r3, [pc, #12]	; (80028a8 <osKernelRunning+0x24>)
 800289c:	7818      	ldrb	r0, [r3, #0]
 800289e:	bd10      	pop	{r4, pc}
 80028a0:	f8df c008 	ldr.w	r12, [pc, #8]	; 80028ac <osKernelRunning+0x28>
 80028a4:	df00      	svc	0
 80028a6:	bd10      	pop	{r4, pc}
 80028a8:	2000300d 	.word	0x2000300d
 80028ac:	08002879 	.word	0x08002879

080028b0 <osKernelStart>:
 80028b0:	b590      	push	{r4, r7, lr}
 80028b2:	b089      	sub	sp, #36	; 0x24
 80028b4:	af00      	add	r7, sp, #0
 80028b6:	f3ef 8310 	mrs	r3, PRIMASK
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d137      	bne.n	800292e <osKernelStart+0x7e>
 80028be:	f3ef 8305 	mrs	r3, IPSR
 80028c2:	2b00      	cmp	r3, #0
 80028c4:	d133      	bne.n	800292e <osKernelStart+0x7e>
 80028c6:	f7ff ffdd 	bl	8002884 <osKernelRunning>
 80028ca:	b928      	cbnz	r0, 80028d8 <osKernelStart+0x28>
 80028cc:	4c19      	ldr	r4, [pc, #100]	; (8002934 <osKernelStart+0x84>)
 80028ce:	6824      	ldr	r4, [r4, #0]
 80028d0:	b114      	cbz	r4, 80028d8 <osKernelStart+0x28>
 80028d2:	6864      	ldr	r4, [r4, #4]
 80028d4:	b104      	cbz	r4, 80028d8 <osKernelStart+0x28>
 80028d6:	47a0      	blx	r4
 80028d8:	f3ef 8414 	mrs	r4, CONTROL
 80028dc:	f004 0403 	and.w	r4, r4, #3
 80028e0:	2c02      	cmp	r4, #2
 80028e2:	d018      	beq.n	8002916 <osKernelStart+0x66>
 80028e4:	2c03      	cmp	r4, #3
 80028e6:	d01c      	beq.n	8002922 <osKernelStart+0x72>
 80028e8:	2c01      	cmp	r4, #1
 80028ea:	d01e      	beq.n	800292a <osKernelStart+0x7a>
 80028ec:	f107 0420 	add.w	r4, r7, #32
 80028f0:	f384 8809 	msr	PSP, r4
 80028f4:	4c10      	ldr	r4, [pc, #64]	; (8002938 <osKernelStart+0x88>)
 80028f6:	7824      	ldrb	r4, [r4, #0]
 80028f8:	07e4      	lsls	r4, r4, #31
 80028fa:	d510      	bpl.n	800291e <osKernelStart+0x6e>
 80028fc:	2402      	movs	r4, #2
 80028fe:	f384 8814 	msr	CONTROL, r4
 8002902:	f3bf 8f4f 	dsb	sy
 8002906:	f3bf 8f6f 	isb	sy
 800290a:	f8df c030 	ldr.w	r12, [pc, #48]	; 800293c <osKernelStart+0x8c>
 800290e:	df00      	svc	0
 8002910:	3724      	adds	r7, #36	; 0x24
 8002912:	46bd      	mov	sp, r7
 8002914:	bd90      	pop	{r4, r7, pc}
 8002916:	4c08      	ldr	r4, [pc, #32]	; (8002938 <osKernelStart+0x88>)
 8002918:	7824      	ldrb	r4, [r4, #0]
 800291a:	07e4      	lsls	r4, r4, #31
 800291c:	d4f5      	bmi.n	800290a <osKernelStart+0x5a>
 800291e:	2403      	movs	r4, #3
 8002920:	e7ed      	b.n	80028fe <osKernelStart+0x4e>
 8002922:	4c05      	ldr	r4, [pc, #20]	; (8002938 <osKernelStart+0x88>)
 8002924:	7824      	ldrb	r4, [r4, #0]
 8002926:	07e4      	lsls	r4, r4, #31
 8002928:	d5ef      	bpl.n	800290a <osKernelStart+0x5a>
 800292a:	20ff      	movs	r0, #255	; 0xff
 800292c:	e7f0      	b.n	8002910 <osKernelStart+0x60>
 800292e:	2082      	movs	r0, #130	; 0x82
 8002930:	e7ee      	b.n	8002910 <osKernelStart+0x60>
 8002932:	bf00      	nop
 8002934:	20002ffc 	.word	0x20002ffc
 8002938:	0800847a 	.word	0x0800847a
 800293c:	08002835 	.word	0x08002835

08002940 <svcThreadCreate>:
 8002940:	b570      	push	{r4, r5, r6, lr}
 8002942:	460b      	mov	r3, r1
 8002944:	4616      	mov	r6, r2
 8002946:	4602      	mov	r2, r0
 8002948:	b910      	cbnz	r0, 8002950 <svcThreadCreate+0x10>
 800294a:	2400      	movs	r4, #0
 800294c:	4620      	mov	r0, r4
 800294e:	bd70      	pop	{r4, r5, r6, pc}
 8002950:	6800      	ldr	r0, [r0, #0]
 8002952:	2800      	cmp	r0, #0
 8002954:	d0f9      	beq.n	800294a <svcThreadCreate+0xa>
 8002956:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 800295a:	1ce5      	adds	r5, r4, #3
 800295c:	b2ad      	uxth	r5, r5
 800295e:	2d06      	cmp	r5, #6
 8002960:	d8f3      	bhi.n	800294a <svcThreadCreate+0xa>
 8002962:	68d1      	ldr	r1, [r2, #12]
 8002964:	b1c1      	cbz	r1, 8002998 <svcThreadCreate+0x58>
 8002966:	6912      	ldr	r2, [r2, #16]
 8002968:	3404      	adds	r4, #4
 800296a:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 800296e:	f000 fc57 	bl	8003220 <rt_tsk_create>
 8002972:	2800      	cmp	r0, #0
 8002974:	d0e9      	beq.n	800294a <svcThreadCreate+0xa>
 8002976:	4b0a      	ldr	r3, [pc, #40]	; (80029a0 <svcThreadCreate+0x60>)
 8002978:	4a0a      	ldr	r2, [pc, #40]	; (80029a4 <svcThreadCreate+0x64>)
 800297a:	3801      	subs	r0, #1
 800297c:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002980:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002982:	635a      	str	r2, [r3, #52]	; 0x34
 8002984:	4b08      	ldr	r3, [pc, #32]	; (80029a8 <svcThreadCreate+0x68>)
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	b143      	cbz	r3, 800299c <svcThreadCreate+0x5c>
 800298a:	689b      	ldr	r3, [r3, #8]
 800298c:	b133      	cbz	r3, 800299c <svcThreadCreate+0x5c>
 800298e:	4631      	mov	r1, r6
 8002990:	78e0      	ldrb	r0, [r4, #3]
 8002992:	4798      	blx	r3
 8002994:	63e0      	str	r0, [r4, #60]	; 0x3c
 8002996:	e7d9      	b.n	800294c <svcThreadCreate+0xc>
 8002998:	460a      	mov	r2, r1
 800299a:	e7e5      	b.n	8002968 <svcThreadCreate+0x28>
 800299c:	63e6      	str	r6, [r4, #60]	; 0x3c
 800299e:	e7d5      	b.n	800294c <svcThreadCreate+0xc>
 80029a0:	200029b0 	.word	0x200029b0
 80029a4:	08002c65 	.word	0x08002c65
 80029a8:	20002ffc 	.word	0x20002ffc

080029ac <svcThreadGetId>:
 80029ac:	b508      	push	{r3, lr}
 80029ae:	f000 fbf1 	bl	8003194 <rt_tsk_self>
 80029b2:	b118      	cbz	r0, 80029bc <svcThreadGetId+0x10>
 80029b4:	3801      	subs	r0, #1
 80029b6:	4b02      	ldr	r3, [pc, #8]	; (80029c0 <svcThreadGetId+0x14>)
 80029b8:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80029bc:	bd08      	pop	{r3, pc}
 80029be:	bf00      	nop
 80029c0:	200029b0 	.word	0x200029b0

080029c4 <svcThreadTerminate>:
 80029c4:	b510      	push	{r4, lr}
 80029c6:	f7ff ff2b 	bl	8002820 <rt_tid2ptcb>
 80029ca:	4604      	mov	r4, r0
 80029cc:	b170      	cbz	r0, 80029ec <svcThreadTerminate+0x28>
 80029ce:	4b08      	ldr	r3, [pc, #32]	; (80029f0 <svcThreadTerminate+0x2c>)
 80029d0:	681b      	ldr	r3, [r3, #0]
 80029d2:	b11b      	cbz	r3, 80029dc <svcThreadTerminate+0x18>
 80029d4:	68db      	ldr	r3, [r3, #12]
 80029d6:	b10b      	cbz	r3, 80029dc <svcThreadTerminate+0x18>
 80029d8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80029da:	4798      	blx	r3
 80029dc:	78e0      	ldrb	r0, [r4, #3]
 80029de:	f000 fc75 	bl	80032cc <rt_tsk_delete>
 80029e2:	28ff      	cmp	r0, #255	; 0xff
 80029e4:	bf0c      	ite	eq
 80029e6:	2081      	moveq	r0, #129	; 0x81
 80029e8:	2000      	movne	r0, #0
 80029ea:	bd10      	pop	{r4, pc}
 80029ec:	2080      	movs	r0, #128	; 0x80
 80029ee:	bd10      	pop	{r4, pc}
 80029f0:	20002ffc 	.word	0x20002ffc

080029f4 <svcDelay>:
 80029f4:	b508      	push	{r3, lr}
 80029f6:	b128      	cbz	r0, 8002a04 <svcDelay+0x10>
 80029f8:	f7ff fef2 	bl	80027e0 <rt_ms2tick>
 80029fc:	f000 fdd0 	bl	80035a0 <rt_dly_wait>
 8002a00:	2040      	movs	r0, #64	; 0x40
 8002a02:	bd08      	pop	{r3, pc}
 8002a04:	bd08      	pop	{r3, pc}
	...

08002a08 <osDelay>:
 8002a08:	b510      	push	{r4, lr}
 8002a0a:	f3ef 8410 	mrs	r4, PRIMASK
 8002a0e:	b934      	cbnz	r4, 8002a1e <osDelay+0x16>
 8002a10:	f3ef 8405 	mrs	r4, IPSR
 8002a14:	b91c      	cbnz	r4, 8002a1e <osDelay+0x16>
 8002a16:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002a24 <osDelay+0x1c>
 8002a1a:	df00      	svc	0
 8002a1c:	bd10      	pop	{r4, pc}
 8002a1e:	2082      	movs	r0, #130	; 0x82
 8002a20:	bd10      	pop	{r4, pc}
 8002a22:	0000      	.short	0x0000
 8002a24:	080029f5 	.word	0x080029f5

08002a28 <svcTimerCall>:
 8002a28:	0783      	lsls	r3, r0, #30
 8002a2a:	d105      	bne.n	8002a38 <svcTimerCall+0x10>
 8002a2c:	b138      	cbz	r0, 8002a3e <svcTimerCall+0x16>
 8002a2e:	6943      	ldr	r3, [r0, #20]
 8002a30:	6901      	ldr	r1, [r0, #16]
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	4618      	mov	r0, r3
 8002a36:	4770      	bx	lr
 8002a38:	2300      	movs	r3, #0
 8002a3a:	4619      	mov	r1, r3
 8002a3c:	e7fa      	b.n	8002a34 <svcTimerCall+0xc>
 8002a3e:	4603      	mov	r3, r0
 8002a40:	e7fb      	b.n	8002a3a <svcTimerCall+0x12>
	...

08002a44 <osTimerCall>:
 8002a44:	b510      	push	{r4, lr}
 8002a46:	4604      	mov	r4, r0
 8002a48:	4608      	mov	r0, r1
 8002a4a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002a58 <osTimerCall+0x14>
 8002a4e:	df00      	svc	0
 8002a50:	e884 0003 	stmia.w	r4, {r0, r1}
 8002a54:	4620      	mov	r0, r4
 8002a56:	bd10      	pop	{r4, pc}
 8002a58:	08002a29 	.word	0x08002a29

08002a5c <svcSignalSet>:
 8002a5c:	b510      	push	{r4, lr}
 8002a5e:	460a      	mov	r2, r1
 8002a60:	f7ff fede 	bl	8002820 <rt_tid2ptcb>
 8002a64:	b148      	cbz	r0, 8002a7a <svcSignalSet+0x1e>
 8002a66:	0c0b      	lsrs	r3, r1, #16
 8002a68:	041b      	lsls	r3, r3, #16
 8002a6a:	b933      	cbnz	r3, 8002a7a <svcSignalSet+0x1e>
 8002a6c:	8b04      	ldrh	r4, [r0, #24]
 8002a6e:	78c1      	ldrb	r1, [r0, #3]
 8002a70:	b290      	uxth	r0, r2
 8002a72:	f7ff fe03 	bl	800267c <rt_evt_set>
 8002a76:	4620      	mov	r0, r4
 8002a78:	bd10      	pop	{r4, pc}
 8002a7a:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8002a7e:	e7fa      	b.n	8002a76 <svcSignalSet+0x1a>

08002a80 <svcSignalWait>:
 8002a80:	0c03      	lsrs	r3, r0, #16
 8002a82:	041b      	lsls	r3, r3, #16
 8002a84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002a88:	4680      	mov	r8, r0
 8002a8a:	460c      	mov	r4, r1
 8002a8c:	bb7b      	cbnz	r3, 8002aee <svcSignalWait+0x6e>
 8002a8e:	4608      	mov	r0, r1
 8002a90:	f1b8 0f00 	cmp.w	r8, #0
 8002a94:	d00b      	beq.n	8002aae <svcSignalWait+0x2e>
 8002a96:	f7ff fea3 	bl	80027e0 <rt_ms2tick>
 8002a9a:	2201      	movs	r2, #1
 8002a9c:	4601      	mov	r1, r0
 8002a9e:	fa1f f088 	uxth.w	r0, r8
 8002aa2:	f7ff fdcb 	bl	800263c <rt_evt_wait>
 8002aa6:	2802      	cmp	r0, #2
 8002aa8:	d110      	bne.n	8002acc <svcSignalWait+0x4c>
 8002aaa:	2408      	movs	r4, #8
 8002aac:	e010      	b.n	8002ad0 <svcSignalWait+0x50>
 8002aae:	f7ff fe97 	bl	80027e0 <rt_ms2tick>
 8002ab2:	4642      	mov	r2, r8
 8002ab4:	4601      	mov	r1, r0
 8002ab6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002aba:	f7ff fdbf 	bl	800263c <rt_evt_wait>
 8002abe:	2802      	cmp	r0, #2
 8002ac0:	d104      	bne.n	8002acc <svcSignalWait+0x4c>
 8002ac2:	4b0d      	ldr	r3, [pc, #52]	; (8002af8 <svcSignalWait+0x78>)
 8002ac4:	681b      	ldr	r3, [r3, #0]
 8002ac6:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 8002aca:	e7ee      	b.n	8002aaa <svcSignalWait+0x2a>
 8002acc:	b95c      	cbnz	r4, 8002ae6 <svcSignalWait+0x66>
 8002ace:	46a0      	mov	r8, r4
 8002ad0:	2000      	movs	r0, #0
 8002ad2:	4601      	mov	r1, r0
 8002ad4:	4645      	mov	r5, r8
 8002ad6:	460e      	mov	r6, r1
 8002ad8:	460f      	mov	r7, r1
 8002ada:	4620      	mov	r0, r4
 8002adc:	4629      	mov	r1, r5
 8002ade:	4632      	mov	r2, r6
 8002ae0:	463b      	mov	r3, r7
 8002ae2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002ae6:	f04f 0800 	mov.w	r8, #0
 8002aea:	2440      	movs	r4, #64	; 0x40
 8002aec:	e7f0      	b.n	8002ad0 <svcSignalWait+0x50>
 8002aee:	2500      	movs	r5, #0
 8002af0:	2486      	movs	r4, #134	; 0x86
 8002af2:	462e      	mov	r6, r5
 8002af4:	462f      	mov	r7, r5
 8002af6:	e7f0      	b.n	8002ada <svcSignalWait+0x5a>
 8002af8:	20003014 	.word	0x20003014

08002afc <isrSignalSet>:
 8002afc:	b510      	push	{r4, lr}
 8002afe:	460a      	mov	r2, r1
 8002b00:	f7ff fe8e 	bl	8002820 <rt_tid2ptcb>
 8002b04:	b148      	cbz	r0, 8002b1a <isrSignalSet+0x1e>
 8002b06:	0c0b      	lsrs	r3, r1, #16
 8002b08:	041b      	lsls	r3, r3, #16
 8002b0a:	b933      	cbnz	r3, 8002b1a <isrSignalSet+0x1e>
 8002b0c:	8b04      	ldrh	r4, [r0, #24]
 8002b0e:	78c1      	ldrb	r1, [r0, #3]
 8002b10:	b290      	uxth	r0, r2
 8002b12:	f7ff fddf 	bl	80026d4 <isr_evt_set>
 8002b16:	4620      	mov	r0, r4
 8002b18:	bd10      	pop	{r4, pc}
 8002b1a:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8002b1e:	e7fa      	b.n	8002b16 <isrSignalSet+0x1a>

08002b20 <osSignalSet>:
 8002b20:	b570      	push	{r4, r5, r6, lr}
 8002b22:	4604      	mov	r4, r0
 8002b24:	460d      	mov	r5, r1
 8002b26:	f3ef 8610 	mrs	r6, PRIMASK
 8002b2a:	b916      	cbnz	r6, 8002b32 <osSignalSet+0x12>
 8002b2c:	f3ef 8605 	mrs	r6, IPSR
 8002b30:	b12e      	cbz	r6, 8002b3e <osSignalSet+0x1e>
 8002b32:	4629      	mov	r1, r5
 8002b34:	4620      	mov	r0, r4
 8002b36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002b3a:	f7ff bfdf 	b.w	8002afc <isrSignalSet>
 8002b3e:	f8df c008 	ldr.w	r12, [pc, #8]	; 8002b48 <osSignalSet+0x28>
 8002b42:	df00      	svc	0
 8002b44:	bd70      	pop	{r4, r5, r6, pc}
 8002b46:	0000      	.short	0x0000
 8002b48:	08002a5d 	.word	0x08002a5d

08002b4c <osSignalWait>:
 8002b4c:	b530      	push	{r4, r5, lr}
 8002b4e:	4604      	mov	r4, r0
 8002b50:	4608      	mov	r0, r1
 8002b52:	4611      	mov	r1, r2
 8002b54:	f3ef 8510 	mrs	r5, PRIMASK
 8002b58:	b915      	cbnz	r5, 8002b60 <osSignalWait+0x14>
 8002b5a:	f3ef 8505 	mrs	r5, IPSR
 8002b5e:	b11d      	cbz	r5, 8002b68 <osSignalWait+0x1c>
 8002b60:	2382      	movs	r3, #130	; 0x82
 8002b62:	6023      	str	r3, [r4, #0]
 8002b64:	4620      	mov	r0, r4
 8002b66:	bd30      	pop	{r4, r5, pc}
 8002b68:	f8df c008 	ldr.w	r12, [pc, #8]	; 8002b74 <osSignalWait+0x28>
 8002b6c:	df00      	svc	0
 8002b6e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002b72:	e7f7      	b.n	8002b64 <osSignalWait+0x18>
 8002b74:	08002a81 	.word	0x08002a81

08002b78 <svcMutexCreate>:
 8002b78:	b510      	push	{r4, lr}
 8002b7a:	b148      	cbz	r0, 8002b90 <svcMutexCreate+0x18>
 8002b7c:	6804      	ldr	r4, [r0, #0]
 8002b7e:	b124      	cbz	r4, 8002b8a <svcMutexCreate+0x12>
 8002b80:	7823      	ldrb	r3, [r4, #0]
 8002b82:	b923      	cbnz	r3, 8002b8e <svcMutexCreate+0x16>
 8002b84:	4620      	mov	r0, r4
 8002b86:	f7ff fc5d 	bl	8002444 <rt_mut_init>
 8002b8a:	4620      	mov	r0, r4
 8002b8c:	bd10      	pop	{r4, pc}
 8002b8e:	2000      	movs	r0, #0
 8002b90:	bd10      	pop	{r4, pc}

08002b92 <svcMutexWait>:
 8002b92:	b570      	push	{r4, r5, r6, lr}
 8002b94:	f010 0403 	ands.w	r4, r0, #3
 8002b98:	4605      	mov	r5, r0
 8002b9a:	460e      	mov	r6, r1
 8002b9c:	d111      	bne.n	8002bc2 <svcMutexWait+0x30>
 8002b9e:	b180      	cbz	r0, 8002bc2 <svcMutexWait+0x30>
 8002ba0:	7803      	ldrb	r3, [r0, #0]
 8002ba2:	2b03      	cmp	r3, #3
 8002ba4:	d10d      	bne.n	8002bc2 <svcMutexWait+0x30>
 8002ba6:	4608      	mov	r0, r1
 8002ba8:	f7ff fe1a 	bl	80027e0 <rt_ms2tick>
 8002bac:	4601      	mov	r1, r0
 8002bae:	4628      	mov	r0, r5
 8002bb0:	f7ff fd16 	bl	80025e0 <rt_mut_wait>
 8002bb4:	2801      	cmp	r0, #1
 8002bb6:	d106      	bne.n	8002bc6 <svcMutexWait+0x34>
 8002bb8:	2e00      	cmp	r6, #0
 8002bba:	bf14      	ite	ne
 8002bbc:	20c1      	movne	r0, #193	; 0xc1
 8002bbe:	2081      	moveq	r0, #129	; 0x81
 8002bc0:	bd70      	pop	{r4, r5, r6, pc}
 8002bc2:	2080      	movs	r0, #128	; 0x80
 8002bc4:	bd70      	pop	{r4, r5, r6, pc}
 8002bc6:	4620      	mov	r0, r4
 8002bc8:	bd70      	pop	{r4, r5, r6, pc}

08002bca <svcMutexRelease>:
 8002bca:	0782      	lsls	r2, r0, #30
 8002bcc:	b508      	push	{r3, lr}
 8002bce:	d10a      	bne.n	8002be6 <svcMutexRelease+0x1c>
 8002bd0:	b148      	cbz	r0, 8002be6 <svcMutexRelease+0x1c>
 8002bd2:	7803      	ldrb	r3, [r0, #0]
 8002bd4:	2b03      	cmp	r3, #3
 8002bd6:	d106      	bne.n	8002be6 <svcMutexRelease+0x1c>
 8002bd8:	f7ff fc92 	bl	8002500 <rt_mut_release>
 8002bdc:	28ff      	cmp	r0, #255	; 0xff
 8002bde:	bf0c      	ite	eq
 8002be0:	2081      	moveq	r0, #129	; 0x81
 8002be2:	2000      	movne	r0, #0
 8002be4:	bd08      	pop	{r3, pc}
 8002be6:	2080      	movs	r0, #128	; 0x80
 8002be8:	bd08      	pop	{r3, pc}

08002bea <svcMutexDelete>:
 8002bea:	b510      	push	{r4, lr}
 8002bec:	f010 0403 	ands.w	r4, r0, #3
 8002bf0:	d107      	bne.n	8002c02 <svcMutexDelete+0x18>
 8002bf2:	b130      	cbz	r0, 8002c02 <svcMutexDelete+0x18>
 8002bf4:	7803      	ldrb	r3, [r0, #0]
 8002bf6:	2b03      	cmp	r3, #3
 8002bf8:	d103      	bne.n	8002c02 <svcMutexDelete+0x18>
 8002bfa:	f7ff fc2b 	bl	8002454 <rt_mut_delete>
 8002bfe:	4620      	mov	r0, r4
 8002c00:	bd10      	pop	{r4, pc}
 8002c02:	2080      	movs	r0, #128	; 0x80
 8002c04:	bd10      	pop	{r4, pc}
	...

08002c08 <osMutexCreate>:
 8002c08:	b570      	push	{r4, r5, r6, lr}
 8002c0a:	4605      	mov	r5, r0
 8002c0c:	f3ef 8410 	mrs	r4, PRIMASK
 8002c10:	b994      	cbnz	r4, 8002c38 <osMutexCreate+0x30>
 8002c12:	f3ef 8605 	mrs	r6, IPSR
 8002c16:	b97e      	cbnz	r6, 8002c38 <osMutexCreate+0x30>
 8002c18:	f3ef 8414 	mrs	r4, CONTROL
 8002c1c:	07e4      	lsls	r4, r4, #31
 8002c1e:	d406      	bmi.n	8002c2e <osMutexCreate+0x26>
 8002c20:	4c06      	ldr	r4, [pc, #24]	; (8002c3c <osMutexCreate+0x34>)
 8002c22:	7824      	ldrb	r4, [r4, #0]
 8002c24:	b91c      	cbnz	r4, 8002c2e <osMutexCreate+0x26>
 8002c26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002c2a:	f7ff bfa5 	b.w	8002b78 <svcMutexCreate>
 8002c2e:	4628      	mov	r0, r5
 8002c30:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002c40 <osMutexCreate+0x38>
 8002c34:	df00      	svc	0
 8002c36:	bd70      	pop	{r4, r5, r6, pc}
 8002c38:	2000      	movs	r0, #0
 8002c3a:	bd70      	pop	{r4, r5, r6, pc}
 8002c3c:	2000300d 	.word	0x2000300d
 8002c40:	08002b79 	.word	0x08002b79

08002c44 <osMutexWait>:
 8002c44:	b510      	push	{r4, lr}
 8002c46:	f3ef 8410 	mrs	r4, PRIMASK
 8002c4a:	b934      	cbnz	r4, 8002c5a <osMutexWait+0x16>
 8002c4c:	f3ef 8405 	mrs	r4, IPSR
 8002c50:	b91c      	cbnz	r4, 8002c5a <osMutexWait+0x16>
 8002c52:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002c60 <osMutexWait+0x1c>
 8002c56:	df00      	svc	0
 8002c58:	bd10      	pop	{r4, pc}
 8002c5a:	2082      	movs	r0, #130	; 0x82
 8002c5c:	bd10      	pop	{r4, pc}
 8002c5e:	0000      	.short	0x0000
 8002c60:	08002b93 	.word	0x08002b93

08002c64 <osThreadExit>:
 8002c64:	4808      	ldr	r0, [pc, #32]	; (8002c88 <osThreadExit+0x24>)
 8002c66:	b508      	push	{r3, lr}
 8002c68:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002c6c:	6800      	ldr	r0, [r0, #0]
 8002c6e:	f7ff ffe9 	bl	8002c44 <osMutexWait>
 8002c72:	f8df c018 	ldr.w	r12, [pc, #24]	; 8002c8c <osThreadExit+0x28>
 8002c76:	df00      	svc	0
 8002c78:	4604      	mov	r4, r0
 8002c7a:	f7ff f863 	bl	8001d44 <sysThreadTerminate>
 8002c7e:	4620      	mov	r0, r4
 8002c80:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002c90 <osThreadExit+0x2c>
 8002c84:	df00      	svc	0
 8002c86:	e7fe      	b.n	8002c86 <osThreadExit+0x22>
 8002c88:	20003008 	.word	0x20003008
 8002c8c:	080029ad 	.word	0x080029ad
 8002c90:	080029c5 	.word	0x080029c5

08002c94 <osMutexRelease>:
 8002c94:	b510      	push	{r4, lr}
 8002c96:	f3ef 8410 	mrs	r4, PRIMASK
 8002c9a:	b934      	cbnz	r4, 8002caa <osMutexRelease+0x16>
 8002c9c:	f3ef 8405 	mrs	r4, IPSR
 8002ca0:	b91c      	cbnz	r4, 8002caa <osMutexRelease+0x16>
 8002ca2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002cb0 <osMutexRelease+0x1c>
 8002ca6:	df00      	svc	0
 8002ca8:	bd10      	pop	{r4, pc}
 8002caa:	2082      	movs	r0, #130	; 0x82
 8002cac:	bd10      	pop	{r4, pc}
 8002cae:	0000      	.short	0x0000
 8002cb0:	08002bcb 	.word	0x08002bcb

08002cb4 <osThreadContextCreate>:
 8002cb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002cb8:	4680      	mov	r8, r0
 8002cba:	460f      	mov	r7, r1
 8002cbc:	4616      	mov	r6, r2
 8002cbe:	f3ef 8410 	mrs	r4, PRIMASK
 8002cc2:	bb04      	cbnz	r4, 8002d06 <osThreadContextCreate+0x52>
 8002cc4:	f3ef 8305 	mrs	r3, IPSR
 8002cc8:	b9d3      	cbnz	r3, 8002d00 <osThreadContextCreate+0x4c>
 8002cca:	f3ef 8314 	mrs	r3, CONTROL
 8002cce:	07db      	lsls	r3, r3, #31
 8002cd0:	d406      	bmi.n	8002ce0 <osThreadContextCreate+0x2c>
 8002cd2:	4b0e      	ldr	r3, [pc, #56]	; (8002d0c <osThreadContextCreate+0x58>)
 8002cd4:	781b      	ldrb	r3, [r3, #0]
 8002cd6:	b91b      	cbnz	r3, 8002ce0 <osThreadContextCreate+0x2c>
 8002cd8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002cdc:	f7ff be30 	b.w	8002940 <svcThreadCreate>
 8002ce0:	4d0b      	ldr	r5, [pc, #44]	; (8002d10 <osThreadContextCreate+0x5c>)
 8002ce2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002ce6:	6828      	ldr	r0, [r5, #0]
 8002ce8:	f7ff ffac 	bl	8002c44 <osMutexWait>
 8002cec:	4640      	mov	r0, r8
 8002cee:	4639      	mov	r1, r7
 8002cf0:	4632      	mov	r2, r6
 8002cf2:	f8df c020 	ldr.w	r12, [pc, #32]	; 8002d14 <osThreadContextCreate+0x60>
 8002cf6:	df00      	svc	0
 8002cf8:	4604      	mov	r4, r0
 8002cfa:	6828      	ldr	r0, [r5, #0]
 8002cfc:	f7ff ffca 	bl	8002c94 <osMutexRelease>
 8002d00:	4620      	mov	r0, r4
 8002d02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002d06:	2400      	movs	r4, #0
 8002d08:	e7fa      	b.n	8002d00 <osThreadContextCreate+0x4c>
 8002d0a:	bf00      	nop
 8002d0c:	2000300d 	.word	0x2000300d
 8002d10:	20003008 	.word	0x20003008
 8002d14:	08002941 	.word	0x08002941

08002d18 <osThreadCreate>:
 8002d18:	2200      	movs	r2, #0
 8002d1a:	f7ff bfcb 	b.w	8002cb4 <osThreadContextCreate>
	...

08002d20 <osThreadTerminate>:
 8002d20:	b538      	push	{r3, r4, r5, lr}
 8002d22:	4604      	mov	r4, r0
 8002d24:	f3ef 8310 	mrs	r3, PRIMASK
 8002d28:	b9ab      	cbnz	r3, 8002d56 <osThreadTerminate+0x36>
 8002d2a:	f3ef 8305 	mrs	r3, IPSR
 8002d2e:	b993      	cbnz	r3, 8002d56 <osThreadTerminate+0x36>
 8002d30:	4d0a      	ldr	r5, [pc, #40]	; (8002d5c <osThreadTerminate+0x3c>)
 8002d32:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002d36:	6828      	ldr	r0, [r5, #0]
 8002d38:	f7ff ff84 	bl	8002c44 <osMutexWait>
 8002d3c:	4620      	mov	r0, r4
 8002d3e:	f7ff f801 	bl	8001d44 <sysThreadTerminate>
 8002d42:	4620      	mov	r0, r4
 8002d44:	f8df c018 	ldr.w	r12, [pc, #24]	; 8002d60 <osThreadTerminate+0x40>
 8002d48:	df00      	svc	0
 8002d4a:	4604      	mov	r4, r0
 8002d4c:	6828      	ldr	r0, [r5, #0]
 8002d4e:	f7ff ffa1 	bl	8002c94 <osMutexRelease>
 8002d52:	4620      	mov	r0, r4
 8002d54:	bd38      	pop	{r3, r4, r5, pc}
 8002d56:	2482      	movs	r4, #130	; 0x82
 8002d58:	e7fb      	b.n	8002d52 <osThreadTerminate+0x32>
 8002d5a:	bf00      	nop
 8002d5c:	20003008 	.word	0x20003008
 8002d60:	080029c5 	.word	0x080029c5

08002d64 <osMutexDelete>:
 8002d64:	b510      	push	{r4, lr}
 8002d66:	f3ef 8410 	mrs	r4, PRIMASK
 8002d6a:	b934      	cbnz	r4, 8002d7a <osMutexDelete+0x16>
 8002d6c:	f3ef 8405 	mrs	r4, IPSR
 8002d70:	b91c      	cbnz	r4, 8002d7a <osMutexDelete+0x16>
 8002d72:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002d80 <osMutexDelete+0x1c>
 8002d76:	df00      	svc	0
 8002d78:	bd10      	pop	{r4, pc}
 8002d7a:	2082      	movs	r0, #130	; 0x82
 8002d7c:	bd10      	pop	{r4, pc}
 8002d7e:	0000      	.short	0x0000
 8002d80:	08002beb 	.word	0x08002beb

08002d84 <svcSemaphoreCreate>:
 8002d84:	b510      	push	{r4, lr}
 8002d86:	b168      	cbz	r0, 8002da4 <svcSemaphoreCreate+0x20>
 8002d88:	6804      	ldr	r4, [r0, #0]
 8002d8a:	b154      	cbz	r4, 8002da2 <svcSemaphoreCreate+0x1e>
 8002d8c:	7820      	ldrb	r0, [r4, #0]
 8002d8e:	b940      	cbnz	r0, 8002da2 <svcSemaphoreCreate+0x1e>
 8002d90:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8002d94:	da06      	bge.n	8002da4 <svcSemaphoreCreate+0x20>
 8002d96:	4620      	mov	r0, r4
 8002d98:	b289      	uxth	r1, r1
 8002d9a:	f000 fc04 	bl	80035a6 <rt_sem_init>
 8002d9e:	4620      	mov	r0, r4
 8002da0:	bd10      	pop	{r4, pc}
 8002da2:	2000      	movs	r0, #0
 8002da4:	bd10      	pop	{r4, pc}

08002da6 <svcSemaphoreRelease>:
 8002da6:	b510      	push	{r4, lr}
 8002da8:	f010 0403 	ands.w	r4, r0, #3
 8002dac:	d10c      	bne.n	8002dc8 <svcSemaphoreRelease+0x22>
 8002dae:	b158      	cbz	r0, 8002dc8 <svcSemaphoreRelease+0x22>
 8002db0:	7802      	ldrb	r2, [r0, #0]
 8002db2:	2a02      	cmp	r2, #2
 8002db4:	d108      	bne.n	8002dc8 <svcSemaphoreRelease+0x22>
 8002db6:	8842      	ldrh	r2, [r0, #2]
 8002db8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002dbc:	429a      	cmp	r2, r3
 8002dbe:	d005      	beq.n	8002dcc <svcSemaphoreRelease+0x26>
 8002dc0:	f000 fc26 	bl	8003610 <rt_sem_send>
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	bd10      	pop	{r4, pc}
 8002dc8:	2080      	movs	r0, #128	; 0x80
 8002dca:	bd10      	pop	{r4, pc}
 8002dcc:	2081      	movs	r0, #129	; 0x81
 8002dce:	bd10      	pop	{r4, pc}

08002dd0 <svcSemaphoreDelete>:
 8002dd0:	b510      	push	{r4, lr}
 8002dd2:	f010 0403 	ands.w	r4, r0, #3
 8002dd6:	d107      	bne.n	8002de8 <svcSemaphoreDelete+0x18>
 8002dd8:	b130      	cbz	r0, 8002de8 <svcSemaphoreDelete+0x18>
 8002dda:	7803      	ldrb	r3, [r0, #0]
 8002ddc:	2b02      	cmp	r3, #2
 8002dde:	d103      	bne.n	8002de8 <svcSemaphoreDelete+0x18>
 8002de0:	f000 fbe8 	bl	80035b4 <rt_sem_delete>
 8002de4:	4620      	mov	r0, r4
 8002de6:	bd10      	pop	{r4, pc}
 8002de8:	2080      	movs	r0, #128	; 0x80
 8002dea:	bd10      	pop	{r4, pc}

08002dec <isrSemaphoreRelease>:
 8002dec:	b510      	push	{r4, lr}
 8002dee:	f010 0403 	ands.w	r4, r0, #3
 8002df2:	d10c      	bne.n	8002e0e <isrSemaphoreRelease+0x22>
 8002df4:	b158      	cbz	r0, 8002e0e <isrSemaphoreRelease+0x22>
 8002df6:	7802      	ldrb	r2, [r0, #0]
 8002df8:	2a02      	cmp	r2, #2
 8002dfa:	d108      	bne.n	8002e0e <isrSemaphoreRelease+0x22>
 8002dfc:	8842      	ldrh	r2, [r0, #2]
 8002dfe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e02:	429a      	cmp	r2, r3
 8002e04:	d005      	beq.n	8002e12 <isrSemaphoreRelease+0x26>
 8002e06:	f000 fc18 	bl	800363a <isr_sem_send>
 8002e0a:	4620      	mov	r0, r4
 8002e0c:	bd10      	pop	{r4, pc}
 8002e0e:	2080      	movs	r0, #128	; 0x80
 8002e10:	bd10      	pop	{r4, pc}
 8002e12:	2081      	movs	r0, #129	; 0x81
 8002e14:	bd10      	pop	{r4, pc}
	...

08002e18 <osSemaphoreCreate>:
 8002e18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002e1a:	4606      	mov	r6, r0
 8002e1c:	460d      	mov	r5, r1
 8002e1e:	f3ef 8410 	mrs	r4, PRIMASK
 8002e22:	b99c      	cbnz	r4, 8002e4c <osSemaphoreCreate+0x34>
 8002e24:	f3ef 8705 	mrs	r7, IPSR
 8002e28:	b987      	cbnz	r7, 8002e4c <osSemaphoreCreate+0x34>
 8002e2a:	f3ef 8414 	mrs	r4, CONTROL
 8002e2e:	07e4      	lsls	r4, r4, #31
 8002e30:	d406      	bmi.n	8002e40 <osSemaphoreCreate+0x28>
 8002e32:	4c07      	ldr	r4, [pc, #28]	; (8002e50 <osSemaphoreCreate+0x38>)
 8002e34:	7824      	ldrb	r4, [r4, #0]
 8002e36:	b91c      	cbnz	r4, 8002e40 <osSemaphoreCreate+0x28>
 8002e38:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8002e3c:	f7ff bfa2 	b.w	8002d84 <svcSemaphoreCreate>
 8002e40:	4630      	mov	r0, r6
 8002e42:	4629      	mov	r1, r5
 8002e44:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002e54 <osSemaphoreCreate+0x3c>
 8002e48:	df00      	svc	0
 8002e4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e4c:	2000      	movs	r0, #0
 8002e4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e50:	2000300d 	.word	0x2000300d
 8002e54:	08002d85 	.word	0x08002d85

08002e58 <osSemaphoreRelease>:
 8002e58:	b530      	push	{r4, r5, lr}
 8002e5a:	4604      	mov	r4, r0
 8002e5c:	f3ef 8510 	mrs	r5, PRIMASK
 8002e60:	b915      	cbnz	r5, 8002e68 <osSemaphoreRelease+0x10>
 8002e62:	f3ef 8505 	mrs	r5, IPSR
 8002e66:	b125      	cbz	r5, 8002e72 <osSemaphoreRelease+0x1a>
 8002e68:	4620      	mov	r0, r4
 8002e6a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8002e6e:	f7ff bfbd 	b.w	8002dec <isrSemaphoreRelease>
 8002e72:	f8df c008 	ldr.w	r12, [pc, #8]	; 8002e7c <osSemaphoreRelease+0x24>
 8002e76:	df00      	svc	0
 8002e78:	bd30      	pop	{r4, r5, pc}
 8002e7a:	0000      	.short	0x0000
 8002e7c:	08002da7 	.word	0x08002da7

08002e80 <osSemaphoreDelete>:
 8002e80:	b510      	push	{r4, lr}
 8002e82:	f3ef 8410 	mrs	r4, PRIMASK
 8002e86:	b934      	cbnz	r4, 8002e96 <osSemaphoreDelete+0x16>
 8002e88:	f3ef 8405 	mrs	r4, IPSR
 8002e8c:	b91c      	cbnz	r4, 8002e96 <osSemaphoreDelete+0x16>
 8002e8e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002e9c <osSemaphoreDelete+0x1c>
 8002e92:	df00      	svc	0
 8002e94:	bd10      	pop	{r4, pc}
 8002e96:	2082      	movs	r0, #130	; 0x82
 8002e98:	bd10      	pop	{r4, pc}
 8002e9a:	0000      	.short	0x0000
 8002e9c:	08002dd1 	.word	0x08002dd1

08002ea0 <svcMessageCreate>:
 8002ea0:	b510      	push	{r4, lr}
 8002ea2:	4604      	mov	r4, r0
 8002ea4:	b160      	cbz	r0, 8002ec0 <svcMessageCreate+0x20>
 8002ea6:	6801      	ldr	r1, [r0, #0]
 8002ea8:	b151      	cbz	r1, 8002ec0 <svcMessageCreate+0x20>
 8002eaa:	6840      	ldr	r0, [r0, #4]
 8002eac:	b148      	cbz	r0, 8002ec2 <svcMessageCreate+0x22>
 8002eae:	7803      	ldrb	r3, [r0, #0]
 8002eb0:	b933      	cbnz	r3, 8002ec0 <svcMessageCreate+0x20>
 8002eb2:	3104      	adds	r1, #4
 8002eb4:	0089      	lsls	r1, r1, #2
 8002eb6:	b289      	uxth	r1, r1
 8002eb8:	f7ff f9ba 	bl	8002230 <rt_mbx_init>
 8002ebc:	6860      	ldr	r0, [r4, #4]
 8002ebe:	bd10      	pop	{r4, pc}
 8002ec0:	2000      	movs	r0, #0
 8002ec2:	bd10      	pop	{r4, pc}

08002ec4 <svcKernelInitialize>:
 8002ec4:	b538      	push	{r3, r4, r5, lr}
 8002ec6:	4c11      	ldr	r4, [pc, #68]	; (8002f0c <svcKernelInitialize+0x48>)
 8002ec8:	7823      	ldrb	r3, [r4, #0]
 8002eca:	b90b      	cbnz	r3, 8002ed0 <svcKernelInitialize+0xc>
 8002ecc:	f000 faa8 	bl	8003420 <rt_sys_init>
 8002ed0:	4b0f      	ldr	r3, [pc, #60]	; (8002f10 <svcKernelInitialize+0x4c>)
 8002ed2:	7825      	ldrb	r5, [r4, #0]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	22ff      	movs	r2, #255	; 0xff
 8002ed8:	709a      	strb	r2, [r3, #2]
 8002eda:	b98d      	cbnz	r5, 8002f00 <svcKernelInitialize+0x3c>
 8002edc:	4629      	mov	r1, r5
 8002ede:	480d      	ldr	r0, [pc, #52]	; (8002f14 <svcKernelInitialize+0x50>)
 8002ee0:	f7ff ffde 	bl	8002ea0 <svcMessageCreate>
 8002ee4:	4b0c      	ldr	r3, [pc, #48]	; (8002f18 <svcKernelInitialize+0x54>)
 8002ee6:	462a      	mov	r2, r5
 8002ee8:	6018      	str	r0, [r3, #0]
 8002eea:	4629      	mov	r1, r5
 8002eec:	480b      	ldr	r0, [pc, #44]	; (8002f1c <svcKernelInitialize+0x58>)
 8002eee:	f7ff fd27 	bl	8002940 <svcThreadCreate>
 8002ef2:	4b0b      	ldr	r3, [pc, #44]	; (8002f20 <svcKernelInitialize+0x5c>)
 8002ef4:	6018      	str	r0, [r3, #0]
 8002ef6:	480b      	ldr	r0, [pc, #44]	; (8002f24 <svcKernelInitialize+0x60>)
 8002ef8:	f7ff fe86 	bl	8002c08 <osMutexCreate>
 8002efc:	4b0a      	ldr	r3, [pc, #40]	; (8002f28 <svcKernelInitialize+0x64>)
 8002efe:	6018      	str	r0, [r3, #0]
 8002f00:	2301      	movs	r3, #1
 8002f02:	7023      	strb	r3, [r4, #0]
 8002f04:	4b09      	ldr	r3, [pc, #36]	; (8002f2c <svcKernelInitialize+0x68>)
 8002f06:	2000      	movs	r0, #0
 8002f08:	7018      	strb	r0, [r3, #0]
 8002f0a:	bd38      	pop	{r3, r4, r5, pc}
 8002f0c:	2000300c 	.word	0x2000300c
 8002f10:	20003014 	.word	0x20003014
 8002f14:	08008480 	.word	0x08008480
 8002f18:	2000268c 	.word	0x2000268c
 8002f1c:	0800849c 	.word	0x0800849c
 8002f20:	20002684 	.word	0x20002684
 8002f24:	080084b4 	.word	0x080084b4
 8002f28:	20003008 	.word	0x20003008
 8002f2c:	2000300d 	.word	0x2000300d

08002f30 <osKernelInitialize>:
 8002f30:	b510      	push	{r4, lr}
 8002f32:	f3ef 8410 	mrs	r4, PRIMASK
 8002f36:	b974      	cbnz	r4, 8002f56 <osKernelInitialize+0x26>
 8002f38:	f3ef 8405 	mrs	r4, IPSR
 8002f3c:	b95c      	cbnz	r4, 8002f56 <osKernelInitialize+0x26>
 8002f3e:	f3ef 8414 	mrs	r4, CONTROL
 8002f42:	07e4      	lsls	r4, r4, #31
 8002f44:	d403      	bmi.n	8002f4e <osKernelInitialize+0x1e>
 8002f46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002f4a:	f7ff bfbb 	b.w	8002ec4 <svcKernelInitialize>
 8002f4e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002f5c <osKernelInitialize+0x2c>
 8002f52:	df00      	svc	0
 8002f54:	bd10      	pop	{r4, pc}
 8002f56:	2082      	movs	r0, #130	; 0x82
 8002f58:	bd10      	pop	{r4, pc}
 8002f5a:	0000      	.short	0x0000
 8002f5c:	08002ec5 	.word	0x08002ec5

08002f60 <svcMessageGet>:
 8002f60:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002f64:	460c      	mov	r4, r1
 8002f66:	4680      	mov	r8, r0
 8002f68:	b318      	cbz	r0, 8002fb2 <svcMessageGet+0x52>
 8002f6a:	7803      	ldrb	r3, [r0, #0]
 8002f6c:	2b01      	cmp	r3, #1
 8002f6e:	d125      	bne.n	8002fbc <svcMessageGet+0x5c>
 8002f70:	4608      	mov	r0, r1
 8002f72:	f7ff fc35 	bl	80027e0 <rt_ms2tick>
 8002f76:	a902      	add	r1, sp, #8
 8002f78:	4602      	mov	r2, r0
 8002f7a:	4640      	mov	r0, r8
 8002f7c:	f7ff f966 	bl	800224c <rt_mbx_wait>
 8002f80:	2801      	cmp	r0, #1
 8002f82:	d111      	bne.n	8002fa8 <svcMessageGet+0x48>
 8002f84:	2000      	movs	r0, #0
 8002f86:	2c00      	cmp	r4, #0
 8002f88:	4602      	mov	r2, r0
 8002f8a:	4603      	mov	r3, r0
 8002f8c:	bf18      	it	ne
 8002f8e:	2040      	movne	r0, #64	; 0x40
 8002f90:	9902      	ldr	r1, [sp, #8]
 8002f92:	4604      	mov	r4, r0
 8002f94:	460d      	mov	r5, r1
 8002f96:	4616      	mov	r6, r2
 8002f98:	461f      	mov	r7, r3
 8002f9a:	4620      	mov	r0, r4
 8002f9c:	4629      	mov	r1, r5
 8002f9e:	4632      	mov	r2, r6
 8002fa0:	463b      	mov	r3, r7
 8002fa2:	b004      	add	sp, #16
 8002fa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002fa8:	2000      	movs	r0, #0
 8002faa:	4602      	mov	r2, r0
 8002fac:	4603      	mov	r3, r0
 8002fae:	2010      	movs	r0, #16
 8002fb0:	e7ee      	b.n	8002f90 <svcMessageGet+0x30>
 8002fb2:	2480      	movs	r4, #128	; 0x80
 8002fb4:	4605      	mov	r5, r0
 8002fb6:	4606      	mov	r6, r0
 8002fb8:	4607      	mov	r7, r0
 8002fba:	e7ee      	b.n	8002f9a <svcMessageGet+0x3a>
 8002fbc:	2500      	movs	r5, #0
 8002fbe:	2480      	movs	r4, #128	; 0x80
 8002fc0:	462e      	mov	r6, r5
 8002fc2:	462f      	mov	r7, r5
 8002fc4:	e7e9      	b.n	8002f9a <svcMessageGet+0x3a>

08002fc6 <isrMessagePut>:
 8002fc6:	b570      	push	{r4, r5, r6, lr}
 8002fc8:	460e      	mov	r6, r1
 8002fca:	4614      	mov	r4, r2
 8002fcc:	4605      	mov	r5, r0
 8002fce:	b160      	cbz	r0, 8002fea <isrMessagePut+0x24>
 8002fd0:	b95a      	cbnz	r2, 8002fea <isrMessagePut+0x24>
 8002fd2:	7803      	ldrb	r3, [r0, #0]
 8002fd4:	2b01      	cmp	r3, #1
 8002fd6:	d108      	bne.n	8002fea <isrMessagePut+0x24>
 8002fd8:	f7ff f98e 	bl	80022f8 <rt_mbx_check>
 8002fdc:	b138      	cbz	r0, 8002fee <isrMessagePut+0x28>
 8002fde:	4628      	mov	r0, r5
 8002fe0:	4631      	mov	r1, r6
 8002fe2:	f7ff f98d 	bl	8002300 <isr_mbx_send>
 8002fe6:	4620      	mov	r0, r4
 8002fe8:	bd70      	pop	{r4, r5, r6, pc}
 8002fea:	2080      	movs	r0, #128	; 0x80
 8002fec:	bd70      	pop	{r4, r5, r6, pc}
 8002fee:	2081      	movs	r0, #129	; 0x81
 8002ff0:	bd70      	pop	{r4, r5, r6, pc}
	...

08002ff4 <sysTimerTick>:
 8002ff4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ff6:	4e11      	ldr	r6, [pc, #68]	; (800303c <sysTimerTick+0x48>)
 8002ff8:	6834      	ldr	r4, [r6, #0]
 8002ffa:	b12c      	cbz	r4, 8003008 <sysTimerTick+0x14>
 8002ffc:	68a3      	ldr	r3, [r4, #8]
 8002ffe:	4f10      	ldr	r7, [pc, #64]	; (8003040 <sysTimerTick+0x4c>)
 8003000:	3b01      	subs	r3, #1
 8003002:	60a3      	str	r3, [r4, #8]
 8003004:	68a2      	ldr	r2, [r4, #8]
 8003006:	b102      	cbz	r2, 800300a <sysTimerTick+0x16>
 8003008:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800300a:	6825      	ldr	r5, [r4, #0]
 800300c:	6838      	ldr	r0, [r7, #0]
 800300e:	6035      	str	r5, [r6, #0]
 8003010:	4621      	mov	r1, r4
 8003012:	f7ff ffd8 	bl	8002fc6 <isrMessagePut>
 8003016:	b110      	cbz	r0, 800301e <sysTimerTick+0x2a>
 8003018:	2004      	movs	r0, #4
 800301a:	f7fe fe85 	bl	8001d28 <os_error>
 800301e:	7963      	ldrb	r3, [r4, #5]
 8003020:	2b01      	cmp	r3, #1
 8003022:	d107      	bne.n	8003034 <sysTimerTick+0x40>
 8003024:	68e1      	ldr	r1, [r4, #12]
 8003026:	4620      	mov	r0, r4
 8003028:	f7ff fbc0 	bl	80027ac <rt_timer_insert>
 800302c:	2d00      	cmp	r5, #0
 800302e:	d0eb      	beq.n	8003008 <sysTimerTick+0x14>
 8003030:	462c      	mov	r4, r5
 8003032:	e7e7      	b.n	8003004 <sysTimerTick+0x10>
 8003034:	2301      	movs	r3, #1
 8003036:	7123      	strb	r3, [r4, #4]
 8003038:	e7f8      	b.n	800302c <sysTimerTick+0x38>
 800303a:	bf00      	nop
 800303c:	20003010 	.word	0x20003010
 8003040:	2000268c 	.word	0x2000268c

08003044 <isrMessageGet>:
 8003044:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003046:	4604      	mov	r4, r0
 8003048:	4616      	mov	r6, r2
 800304a:	4608      	mov	r0, r1
 800304c:	b101      	cbz	r1, 8003050 <isrMessageGet+0xc>
 800304e:	b122      	cbz	r2, 800305a <isrMessageGet+0x16>
 8003050:	2380      	movs	r3, #128	; 0x80
 8003052:	6023      	str	r3, [r4, #0]
 8003054:	4620      	mov	r0, r4
 8003056:	b004      	add	sp, #16
 8003058:	bd70      	pop	{r4, r5, r6, pc}
 800305a:	780b      	ldrb	r3, [r1, #0]
 800305c:	2b01      	cmp	r3, #1
 800305e:	d1f7      	bne.n	8003050 <isrMessageGet+0xc>
 8003060:	a902      	add	r1, sp, #8
 8003062:	f7ff f954 	bl	800230e <isr_mbx_receive>
 8003066:	2804      	cmp	r0, #4
 8003068:	bf08      	it	eq
 800306a:	2310      	moveq	r3, #16
 800306c:	ad01      	add	r5, sp, #4
 800306e:	bf14      	ite	ne
 8003070:	9601      	strne	r6, [sp, #4]
 8003072:	9301      	streq	r3, [sp, #4]
 8003074:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003078:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800307c:	e7ea      	b.n	8003054 <isrMessageGet+0x10>
	...

08003080 <osMessageGet>:
 8003080:	b538      	push	{r3, r4, r5, lr}
 8003082:	4604      	mov	r4, r0
 8003084:	4615      	mov	r5, r2
 8003086:	f3ef 8010 	mrs	r0, PRIMASK
 800308a:	b910      	cbnz	r0, 8003092 <osMessageGet+0x12>
 800308c:	f3ef 8005 	mrs	r0, IPSR
 8003090:	b128      	cbz	r0, 800309e <osMessageGet+0x1e>
 8003092:	462a      	mov	r2, r5
 8003094:	4620      	mov	r0, r4
 8003096:	f7ff ffd5 	bl	8003044 <isrMessageGet>
 800309a:	4620      	mov	r0, r4
 800309c:	bd38      	pop	{r3, r4, r5, pc}
 800309e:	4608      	mov	r0, r1
 80030a0:	4611      	mov	r1, r2
 80030a2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80030b0 <osMessageGet+0x30>
 80030a6:	df00      	svc	0
 80030a8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80030ac:	e7f5      	b.n	800309a <osMessageGet+0x1a>
 80030ae:	0000      	.short	0x0000
 80030b0:	08002f61 	.word	0x08002f61

080030b4 <osTimerThread>:
 80030b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80030b6:	4c0a      	ldr	r4, [pc, #40]	; (80030e0 <osTimerThread+0x2c>)
 80030b8:	6821      	ldr	r1, [r4, #0]
 80030ba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80030be:	a803      	add	r0, sp, #12
 80030c0:	f7ff ffde 	bl	8003080 <osMessageGet>
 80030c4:	9b03      	ldr	r3, [sp, #12]
 80030c6:	2b10      	cmp	r3, #16
 80030c8:	d1f6      	bne.n	80030b8 <osTimerThread+0x4>
 80030ca:	9904      	ldr	r1, [sp, #16]
 80030cc:	a801      	add	r0, sp, #4
 80030ce:	f7ff fcb9 	bl	8002a44 <osTimerCall>
 80030d2:	9b01      	ldr	r3, [sp, #4]
 80030d4:	2b00      	cmp	r3, #0
 80030d6:	d0ef      	beq.n	80030b8 <osTimerThread+0x4>
 80030d8:	9802      	ldr	r0, [sp, #8]
 80030da:	4798      	blx	r3
 80030dc:	e7ec      	b.n	80030b8 <osTimerThread+0x4>
 80030de:	bf00      	nop
 80030e0:	2000268c 	.word	0x2000268c

080030e4 <rt_switch_req>:
 80030e4:	4b05      	ldr	r3, [pc, #20]	; (80030fc <rt_switch_req+0x18>)
 80030e6:	6058      	str	r0, [r3, #4]
 80030e8:	2302      	movs	r3, #2
 80030ea:	7043      	strb	r3, [r0, #1]
 80030ec:	4b04      	ldr	r3, [pc, #16]	; (8003100 <rt_switch_req+0x1c>)
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	b11b      	cbz	r3, 80030fa <rt_switch_req+0x16>
 80030f2:	691b      	ldr	r3, [r3, #16]
 80030f4:	b10b      	cbz	r3, 80030fa <rt_switch_req+0x16>
 80030f6:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80030f8:	4718      	bx	r3
 80030fa:	4770      	bx	lr
 80030fc:	20003014 	.word	0x20003014
 8003100:	20002ffc 	.word	0x20002ffc

08003104 <rt_dispatch.part.0>:
 8003104:	b508      	push	{r3, lr}
 8003106:	4803      	ldr	r0, [pc, #12]	; (8003114 <rt_dispatch.part.0+0x10>)
 8003108:	f7fe fe74 	bl	8001df4 <rt_get_first>
 800310c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003110:	f7ff bfe8 	b.w	80030e4 <rt_switch_req>
 8003114:	20002fc8 	.word	0x20002fc8

08003118 <rt_dispatch>:
 8003118:	b570      	push	{r4, r5, r6, lr}
 800311a:	4604      	mov	r4, r0
 800311c:	b918      	cbnz	r0, 8003126 <rt_dispatch+0xe>
 800311e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003122:	f7ff bfef 	b.w	8003104 <rt_dispatch.part.0>
 8003126:	4e0c      	ldr	r6, [pc, #48]	; (8003158 <rt_dispatch+0x40>)
 8003128:	78a2      	ldrb	r2, [r4, #2]
 800312a:	6830      	ldr	r0, [r6, #0]
 800312c:	7883      	ldrb	r3, [r0, #2]
 800312e:	429a      	cmp	r2, r3
 8003130:	f04f 0501 	mov.w	r5, #1
 8003134:	d908      	bls.n	8003148 <rt_dispatch+0x30>
 8003136:	f7fe fe6f 	bl	8001e18 <rt_put_rdy_first>
 800313a:	6833      	ldr	r3, [r6, #0]
 800313c:	705d      	strb	r5, [r3, #1]
 800313e:	4620      	mov	r0, r4
 8003140:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003144:	f7ff bfce 	b.w	80030e4 <rt_switch_req>
 8003148:	7065      	strb	r5, [r4, #1]
 800314a:	4621      	mov	r1, r4
 800314c:	4803      	ldr	r0, [pc, #12]	; (800315c <rt_dispatch+0x44>)
 800314e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003152:	f7fe be37 	b.w	8001dc4 <rt_put_prio>
 8003156:	bf00      	nop
 8003158:	20003014 	.word	0x20003014
 800315c:	20002fc8 	.word	0x20002fc8

08003160 <rt_block>:
 8003160:	b538      	push	{r3, r4, r5, lr}
 8003162:	460d      	mov	r5, r1
 8003164:	4601      	mov	r1, r0
 8003166:	b180      	cbz	r0, 800318a <rt_block+0x2a>
 8003168:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800316c:	4298      	cmp	r0, r3
 800316e:	4c07      	ldr	r4, [pc, #28]	; (800318c <rt_block+0x2c>)
 8003170:	d002      	beq.n	8003178 <rt_block+0x18>
 8003172:	6820      	ldr	r0, [r4, #0]
 8003174:	f7fe fe5a 	bl	8001e2c <rt_put_dly>
 8003178:	6823      	ldr	r3, [r4, #0]
 800317a:	4805      	ldr	r0, [pc, #20]	; (8003190 <rt_block+0x30>)
 800317c:	705d      	strb	r5, [r3, #1]
 800317e:	f7fe fe39 	bl	8001df4 <rt_get_first>
 8003182:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003186:	f7ff bfad 	b.w	80030e4 <rt_switch_req>
 800318a:	bd38      	pop	{r3, r4, r5, pc}
 800318c:	20003014 	.word	0x20003014
 8003190:	20002fc8 	.word	0x20002fc8

08003194 <rt_tsk_self>:
 8003194:	4b02      	ldr	r3, [pc, #8]	; (80031a0 <rt_tsk_self+0xc>)
 8003196:	6818      	ldr	r0, [r3, #0]
 8003198:	b100      	cbz	r0, 800319c <rt_tsk_self+0x8>
 800319a:	78c0      	ldrb	r0, [r0, #3]
 800319c:	4770      	bx	lr
 800319e:	bf00      	nop
 80031a0:	20003014 	.word	0x20003014

080031a4 <rt_tsk_prio>:
 80031a4:	b510      	push	{r4, lr}
 80031a6:	b9a8      	cbnz	r0, 80031d4 <rt_tsk_prio+0x30>
 80031a8:	4b19      	ldr	r3, [pc, #100]	; (8003210 <rt_tsk_prio+0x6c>)
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	7099      	strb	r1, [r3, #2]
 80031ae:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80031b2:	4818      	ldr	r0, [pc, #96]	; (8003214 <rt_tsk_prio+0x70>)
 80031b4:	6843      	ldr	r3, [r0, #4]
 80031b6:	789b      	ldrb	r3, [r3, #2]
 80031b8:	428b      	cmp	r3, r1
 80031ba:	d801      	bhi.n	80031c0 <rt_tsk_prio+0x1c>
 80031bc:	2000      	movs	r0, #0
 80031be:	bd10      	pop	{r4, pc}
 80031c0:	4c13      	ldr	r4, [pc, #76]	; (8003210 <rt_tsk_prio+0x6c>)
 80031c2:	6821      	ldr	r1, [r4, #0]
 80031c4:	f7fe fdfe 	bl	8001dc4 <rt_put_prio>
 80031c8:	6823      	ldr	r3, [r4, #0]
 80031ca:	2201      	movs	r2, #1
 80031cc:	705a      	strb	r2, [r3, #1]
 80031ce:	f7ff ff99 	bl	8003104 <rt_dispatch.part.0>
 80031d2:	e7f3      	b.n	80031bc <rt_tsk_prio+0x18>
 80031d4:	4b10      	ldr	r3, [pc, #64]	; (8003218 <rt_tsk_prio+0x74>)
 80031d6:	881b      	ldrh	r3, [r3, #0]
 80031d8:	4298      	cmp	r0, r3
 80031da:	d817      	bhi.n	800320c <rt_tsk_prio+0x68>
 80031dc:	3801      	subs	r0, #1
 80031de:	4b0f      	ldr	r3, [pc, #60]	; (800321c <rt_tsk_prio+0x78>)
 80031e0:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80031e4:	b194      	cbz	r4, 800320c <rt_tsk_prio+0x68>
 80031e6:	4b0a      	ldr	r3, [pc, #40]	; (8003210 <rt_tsk_prio+0x6c>)
 80031e8:	70a1      	strb	r1, [r4, #2]
 80031ea:	681b      	ldr	r3, [r3, #0]
 80031ec:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80031f0:	429c      	cmp	r4, r3
 80031f2:	d0de      	beq.n	80031b2 <rt_tsk_prio+0xe>
 80031f4:	4620      	mov	r0, r4
 80031f6:	f7fe fe8b 	bl	8001f10 <rt_resort_prio>
 80031fa:	7863      	ldrb	r3, [r4, #1]
 80031fc:	2b01      	cmp	r3, #1
 80031fe:	d1dd      	bne.n	80031bc <rt_tsk_prio+0x18>
 8003200:	4804      	ldr	r0, [pc, #16]	; (8003214 <rt_tsk_prio+0x70>)
 8003202:	f7fe fdf7 	bl	8001df4 <rt_get_first>
 8003206:	f7ff ff87 	bl	8003118 <rt_dispatch>
 800320a:	e7d7      	b.n	80031bc <rt_tsk_prio+0x18>
 800320c:	20ff      	movs	r0, #255	; 0xff
 800320e:	bd10      	pop	{r4, pc}
 8003210:	20003014 	.word	0x20003014
 8003214:	20002fc8 	.word	0x20002fc8
 8003218:	0800847c 	.word	0x0800847c
 800321c:	200029b0 	.word	0x200029b0

08003220 <rt_tsk_create>:
 8003220:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8003224:	f011 0fff 	tst.w	r1, #255	; 0xff
 8003228:	460d      	mov	r5, r1
 800322a:	4680      	mov	r8, r0
 800322c:	4823      	ldr	r0, [pc, #140]	; (80032bc <rt_tsk_create+0x9c>)
 800322e:	4616      	mov	r6, r2
 8003230:	469a      	mov	r10, r3
 8003232:	bf08      	it	eq
 8003234:	3501      	addeq	r5, #1
 8003236:	f7fe ffda 	bl	80021ee <rt_alloc_box>
 800323a:	4604      	mov	r4, r0
 800323c:	b920      	cbnz	r0, 8003248 <rt_tsk_create+0x28>
 800323e:	f04f 0900 	mov.w	r9, #0
 8003242:	4648      	mov	r0, r9
 8003244:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003248:	4b1d      	ldr	r3, [pc, #116]	; (80032c0 <rt_tsk_create+0xa0>)
 800324a:	6306      	str	r6, [r0, #48]	; 0x30
 800324c:	881b      	ldrh	r3, [r3, #0]
 800324e:	4e1d      	ldr	r6, [pc, #116]	; (80032c4 <rt_tsk_create+0xa4>)
 8003250:	0a28      	lsrs	r0, r5, #8
 8003252:	62a0      	str	r0, [r4, #40]	; 0x28
 8003254:	2100      	movs	r1, #0
 8003256:	428b      	cmp	r3, r1
 8003258:	f101 0901 	add.w	r9, r1, #1
 800325c:	d0ef      	beq.n	800323e <rt_tsk_create+0x1e>
 800325e:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 8003262:	460f      	mov	r7, r1
 8003264:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8003268:	4649      	mov	r1, r9
 800326a:	2a00      	cmp	r2, #0
 800326c:	d1f3      	bne.n	8003256 <rt_tsk_create+0x36>
 800326e:	b2ed      	uxtb	r5, r5
 8003270:	2301      	movs	r3, #1
 8003272:	f884 9003 	strb.w	r9, [r4, #3]
 8003276:	f8c4 a01c 	str.w	r10, [r4, #28]
 800327a:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 800327e:	7022      	strb	r2, [r4, #0]
 8003280:	7063      	strb	r3, [r4, #1]
 8003282:	70a5      	strb	r5, [r4, #2]
 8003284:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8003288:	6062      	str	r2, [r4, #4]
 800328a:	60a2      	str	r2, [r4, #8]
 800328c:	60e2      	str	r2, [r4, #12]
 800328e:	6122      	str	r2, [r4, #16]
 8003290:	6222      	str	r2, [r4, #32]
 8003292:	82a2      	strh	r2, [r4, #20]
 8003294:	82e2      	strh	r2, [r4, #22]
 8003296:	8322      	strh	r2, [r4, #24]
 8003298:	8362      	strh	r2, [r4, #26]
 800329a:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800329e:	b918      	cbnz	r0, 80032a8 <rt_tsk_create+0x88>
 80032a0:	4809      	ldr	r0, [pc, #36]	; (80032c8 <rt_tsk_create+0xa8>)
 80032a2:	f7fe ffa4 	bl	80021ee <rt_alloc_box>
 80032a6:	6320      	str	r0, [r4, #48]	; 0x30
 80032a8:	4620      	mov	r0, r4
 80032aa:	4641      	mov	r1, r8
 80032ac:	f7fe ff1a 	bl	80020e4 <rt_init_stack>
 80032b0:	4620      	mov	r0, r4
 80032b2:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 80032b6:	f7ff ff2f 	bl	8003118 <rt_dispatch>
 80032ba:	e7c2      	b.n	8003242 <rt_tsk_create+0x22>
 80032bc:	200029ec 	.word	0x200029ec
 80032c0:	0800847c 	.word	0x0800847c
 80032c4:	200029b0 	.word	0x200029b0
 80032c8:	20002db8 	.word	0x20002db8

080032cc <rt_tsk_delete>:
 80032cc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80032d0:	4d4d      	ldr	r5, [pc, #308]	; (8003408 <rt_tsk_delete+0x13c>)
 80032d2:	b118      	cbz	r0, 80032dc <rt_tsk_delete+0x10>
 80032d4:	682b      	ldr	r3, [r5, #0]
 80032d6:	78db      	ldrb	r3, [r3, #3]
 80032d8:	4298      	cmp	r0, r3
 80032da:	d141      	bne.n	8003360 <rt_tsk_delete+0x94>
 80032dc:	682c      	ldr	r4, [r5, #0]
 80032de:	f8df 813c 	ldr.w	r8, [pc, #316]	; 800341c <rt_tsk_delete+0x150>
 80032e2:	2300      	movs	r3, #0
 80032e4:	7063      	strb	r3, [r4, #1]
 80032e6:	f003 f8ce 	bl	8006486 <rt_get_PSP>
 80032ea:	62e0      	str	r0, [r4, #44]	; 0x2c
 80032ec:	f7fe fee8 	bl	80020c0 <rt_stk_check>
 80032f0:	682b      	ldr	r3, [r5, #0]
 80032f2:	6a1c      	ldr	r4, [r3, #32]
 80032f4:	2701      	movs	r7, #1
 80032f6:	b9a4      	cbnz	r4, 8003322 <rt_tsk_delete+0x56>
 80032f8:	682a      	ldr	r2, [r5, #0]
 80032fa:	4944      	ldr	r1, [pc, #272]	; (800340c <rt_tsk_delete+0x140>)
 80032fc:	78d3      	ldrb	r3, [r2, #3]
 80032fe:	4844      	ldr	r0, [pc, #272]	; (8003410 <rt_tsk_delete+0x144>)
 8003300:	3b01      	subs	r3, #1
 8003302:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8003306:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8003308:	f7fe ff7e 	bl	8002208 <rt_free_box>
 800330c:	6829      	ldr	r1, [r5, #0]
 800330e:	4841      	ldr	r0, [pc, #260]	; (8003414 <rt_tsk_delete+0x148>)
 8003310:	630c      	str	r4, [r1, #48]	; 0x30
 8003312:	f7fe ff79 	bl	8002208 <rt_free_box>
 8003316:	602c      	str	r4, [r5, #0]
 8003318:	f7ff fef4 	bl	8003104 <rt_dispatch.part.0>
 800331c:	4620      	mov	r0, r4
 800331e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8003322:	6863      	ldr	r3, [r4, #4]
 8003324:	b1b3      	cbz	r3, 8003354 <rt_tsk_delete+0x88>
 8003326:	4620      	mov	r0, r4
 8003328:	f7fe fd64 	bl	8001df4 <rt_get_first>
 800332c:	2100      	movs	r1, #0
 800332e:	4606      	mov	r6, r0
 8003330:	f7fe ff24 	bl	800217c <rt_ret_val>
 8003334:	4630      	mov	r0, r6
 8003336:	f7fe fe03 	bl	8001f40 <rt_rmv_dly>
 800333a:	7077      	strb	r7, [r6, #1]
 800333c:	4631      	mov	r1, r6
 800333e:	4640      	mov	r0, r8
 8003340:	f7fe fd40 	bl	8001dc4 <rt_put_prio>
 8003344:	68e3      	ldr	r3, [r4, #12]
 8003346:	6a32      	ldr	r2, [r6, #32]
 8003348:	8067      	strh	r7, [r4, #2]
 800334a:	60a6      	str	r6, [r4, #8]
 800334c:	60e2      	str	r2, [r4, #12]
 800334e:	6234      	str	r4, [r6, #32]
 8003350:	461c      	mov	r4, r3
 8003352:	e7d0      	b.n	80032f6 <rt_tsk_delete+0x2a>
 8003354:	68e2      	ldr	r2, [r4, #12]
 8003356:	8063      	strh	r3, [r4, #2]
 8003358:	60a3      	str	r3, [r4, #8]
 800335a:	60e3      	str	r3, [r4, #12]
 800335c:	4614      	mov	r4, r2
 800335e:	e7ca      	b.n	80032f6 <rt_tsk_delete+0x2a>
 8003360:	4b2d      	ldr	r3, [pc, #180]	; (8003418 <rt_tsk_delete+0x14c>)
 8003362:	881b      	ldrh	r3, [r3, #0]
 8003364:	4298      	cmp	r0, r3
 8003366:	d84d      	bhi.n	8003404 <rt_tsk_delete+0x138>
 8003368:	4b28      	ldr	r3, [pc, #160]	; (800340c <rt_tsk_delete+0x140>)
 800336a:	1e47      	subs	r7, r0, #1
 800336c:	4699      	mov	r9, r3
 800336e:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 8003372:	2e00      	cmp	r6, #0
 8003374:	d046      	beq.n	8003404 <rt_tsk_delete+0x138>
 8003376:	4630      	mov	r0, r6
 8003378:	f7fe fdb4 	bl	8001ee4 <rt_rmv_list>
 800337c:	4630      	mov	r0, r6
 800337e:	f7fe fddf 	bl	8001f40 <rt_rmv_dly>
 8003382:	f8df b098 	ldr.w	r11, [pc, #152]	; 800341c <rt_tsk_delete+0x150>
 8003386:	6a34      	ldr	r4, [r6, #32]
 8003388:	f04f 0a01 	mov.w	r10, #1
 800338c:	b9b4      	cbnz	r4, 80033bc <rt_tsk_delete+0xf0>
 800338e:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8003390:	481f      	ldr	r0, [pc, #124]	; (8003410 <rt_tsk_delete+0x144>)
 8003392:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8003396:	f7fe ff37 	bl	8002208 <rt_free_box>
 800339a:	4631      	mov	r1, r6
 800339c:	6334      	str	r4, [r6, #48]	; 0x30
 800339e:	481d      	ldr	r0, [pc, #116]	; (8003414 <rt_tsk_delete+0x148>)
 80033a0:	f7fe ff32 	bl	8002208 <rt_free_box>
 80033a4:	481d      	ldr	r0, [pc, #116]	; (800341c <rt_tsk_delete+0x150>)
 80033a6:	6829      	ldr	r1, [r5, #0]
 80033a8:	6843      	ldr	r3, [r0, #4]
 80033aa:	789a      	ldrb	r2, [r3, #2]
 80033ac:	788b      	ldrb	r3, [r1, #2]
 80033ae:	429a      	cmp	r2, r3
 80033b0:	d9b4      	bls.n	800331c <rt_tsk_delete+0x50>
 80033b2:	2301      	movs	r3, #1
 80033b4:	704b      	strb	r3, [r1, #1]
 80033b6:	f7fe fd05 	bl	8001dc4 <rt_put_prio>
 80033ba:	e7ad      	b.n	8003318 <rt_tsk_delete+0x4c>
 80033bc:	6863      	ldr	r3, [r4, #4]
 80033be:	b1db      	cbz	r3, 80033f8 <rt_tsk_delete+0x12c>
 80033c0:	4620      	mov	r0, r4
 80033c2:	f7fe fd17 	bl	8001df4 <rt_get_first>
 80033c6:	2100      	movs	r1, #0
 80033c8:	4680      	mov	r8, r0
 80033ca:	f7fe fed7 	bl	800217c <rt_ret_val>
 80033ce:	4640      	mov	r0, r8
 80033d0:	f7fe fdb6 	bl	8001f40 <rt_rmv_dly>
 80033d4:	f888 a001 	strb.w	r10, [r8, #1]
 80033d8:	4641      	mov	r1, r8
 80033da:	4658      	mov	r0, r11
 80033dc:	f7fe fcf2 	bl	8001dc4 <rt_put_prio>
 80033e0:	68e3      	ldr	r3, [r4, #12]
 80033e2:	f8d8 2020 	ldr.w	r2, [r8, #32]
 80033e6:	f8a4 a002 	strh.w	r10, [r4, #2]
 80033ea:	f8c4 8008 	str.w	r8, [r4, #8]
 80033ee:	60e2      	str	r2, [r4, #12]
 80033f0:	f8c8 4020 	str.w	r4, [r8, #32]
 80033f4:	461c      	mov	r4, r3
 80033f6:	e7c9      	b.n	800338c <rt_tsk_delete+0xc0>
 80033f8:	68e2      	ldr	r2, [r4, #12]
 80033fa:	8063      	strh	r3, [r4, #2]
 80033fc:	60a3      	str	r3, [r4, #8]
 80033fe:	60e3      	str	r3, [r4, #12]
 8003400:	4614      	mov	r4, r2
 8003402:	e7c3      	b.n	800338c <rt_tsk_delete+0xc0>
 8003404:	24ff      	movs	r4, #255	; 0xff
 8003406:	e789      	b.n	800331c <rt_tsk_delete+0x50>
 8003408:	20003014 	.word	0x20003014
 800340c:	200029b0 	.word	0x200029b0
 8003410:	20002db8 	.word	0x20002db8
 8003414:	200029ec 	.word	0x200029ec
 8003418:	0800847c 	.word	0x0800847c
 800341c:	20002fc8 	.word	0x20002fc8

08003420 <rt_sys_init>:
 8003420:	b538      	push	{r3, r4, r5, lr}
 8003422:	4b2c      	ldr	r3, [pc, #176]	; (80034d4 <rt_sys_init+0xb4>)
 8003424:	492c      	ldr	r1, [pc, #176]	; (80034d8 <rt_sys_init+0xb8>)
 8003426:	881a      	ldrh	r2, [r3, #0]
 8003428:	2300      	movs	r3, #0
 800342a:	4618      	mov	r0, r3
 800342c:	4293      	cmp	r3, r2
 800342e:	d34d      	bcc.n	80034cc <rt_sys_init+0xac>
 8003430:	4b2a      	ldr	r3, [pc, #168]	; (80034dc <rt_sys_init+0xbc>)
 8003432:	482b      	ldr	r0, [pc, #172]	; (80034e0 <rt_sys_init+0xc0>)
 8003434:	8819      	ldrh	r1, [r3, #0]
 8003436:	4c2b      	ldr	r4, [pc, #172]	; (80034e4 <rt_sys_init+0xc4>)
 8003438:	2240      	movs	r2, #64	; 0x40
 800343a:	f7fe feb3 	bl	80021a4 <_init_box>
 800343e:	4b2a      	ldr	r3, [pc, #168]	; (80034e8 <rt_sys_init+0xc8>)
 8003440:	482a      	ldr	r0, [pc, #168]	; (80034ec <rt_sys_init+0xcc>)
 8003442:	881a      	ldrh	r2, [r3, #0]
 8003444:	4b2a      	ldr	r3, [pc, #168]	; (80034f0 <rt_sys_init+0xd0>)
 8003446:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 800344a:	6819      	ldr	r1, [r3, #0]
 800344c:	f7fe feaa 	bl	80021a4 <_init_box>
 8003450:	4b28      	ldr	r3, [pc, #160]	; (80034f4 <rt_sys_init+0xd4>)
 8003452:	8819      	ldrh	r1, [r3, #0]
 8003454:	4b28      	ldr	r3, [pc, #160]	; (80034f8 <rt_sys_init+0xd8>)
 8003456:	2208      	movs	r2, #8
 8003458:	6818      	ldr	r0, [r3, #0]
 800345a:	f7fe fea3 	bl	80021a4 <_init_box>
 800345e:	23ff      	movs	r3, #255	; 0xff
 8003460:	2500      	movs	r5, #0
 8003462:	70e3      	strb	r3, [r4, #3]
 8003464:	4821      	ldr	r0, [pc, #132]	; (80034ec <rt_sys_init+0xcc>)
 8003466:	62a5      	str	r5, [r4, #40]	; 0x28
 8003468:	2301      	movs	r3, #1
 800346a:	7063      	strb	r3, [r4, #1]
 800346c:	7025      	strb	r5, [r4, #0]
 800346e:	70a5      	strb	r5, [r4, #2]
 8003470:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8003474:	6065      	str	r5, [r4, #4]
 8003476:	60a5      	str	r5, [r4, #8]
 8003478:	60e5      	str	r5, [r4, #12]
 800347a:	6125      	str	r5, [r4, #16]
 800347c:	6225      	str	r5, [r4, #32]
 800347e:	82a5      	strh	r5, [r4, #20]
 8003480:	82e5      	strh	r5, [r4, #22]
 8003482:	8325      	strh	r5, [r4, #24]
 8003484:	8365      	strh	r5, [r4, #26]
 8003486:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800348a:	f7fe feb0 	bl	80021ee <rt_alloc_box>
 800348e:	491b      	ldr	r1, [pc, #108]	; (80034fc <rt_sys_init+0xdc>)
 8003490:	6320      	str	r0, [r4, #48]	; 0x30
 8003492:	4620      	mov	r0, r4
 8003494:	f7fe fe26 	bl	80020e4 <rt_init_stack>
 8003498:	4b19      	ldr	r3, [pc, #100]	; (8003500 <rt_sys_init+0xe0>)
 800349a:	2204      	movs	r2, #4
 800349c:	701a      	strb	r2, [r3, #0]
 800349e:	605d      	str	r5, [r3, #4]
 80034a0:	4b18      	ldr	r3, [pc, #96]	; (8003504 <rt_sys_init+0xe4>)
 80034a2:	701a      	strb	r2, [r3, #0]
 80034a4:	60dd      	str	r5, [r3, #12]
 80034a6:	611d      	str	r5, [r3, #16]
 80034a8:	829d      	strh	r5, [r3, #20]
 80034aa:	4b17      	ldr	r3, [pc, #92]	; (8003508 <rt_sys_init+0xe8>)
 80034ac:	4620      	mov	r0, r4
 80034ae:	601c      	str	r4, [r3, #0]
 80034b0:	2302      	movs	r3, #2
 80034b2:	7063      	strb	r3, [r4, #1]
 80034b4:	f7ff fe16 	bl	80030e4 <rt_switch_req>
 80034b8:	4a14      	ldr	r2, [pc, #80]	; (800350c <rt_sys_init+0xec>)
 80034ba:	4b15      	ldr	r3, [pc, #84]	; (8003510 <rt_sys_init+0xf0>)
 80034bc:	7812      	ldrb	r2, [r2, #0]
 80034be:	701d      	strb	r5, [r3, #0]
 80034c0:	705d      	strb	r5, [r3, #1]
 80034c2:	70da      	strb	r2, [r3, #3]
 80034c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80034c8:	f7ff b940 	b.w	800274c <rt_init_robin>
 80034cc:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80034d0:	3301      	adds	r3, #1
 80034d2:	e7ab      	b.n	800342c <rt_sys_init+0xc>
 80034d4:	0800847c 	.word	0x0800847c
 80034d8:	200029b0 	.word	0x200029b0
 80034dc:	08008448 	.word	0x08008448
 80034e0:	200029ec 	.word	0x200029ec
 80034e4:	2000301c 	.word	0x2000301c
 80034e8:	08008498 	.word	0x08008498
 80034ec:	20002db8 	.word	0x20002db8
 80034f0:	08008444 	.word	0x08008444
 80034f4:	0800844a 	.word	0x0800844a
 80034f8:	20000eac 	.word	0x20000eac
 80034fc:	08001d25 	.word	0x08001d25
 8003500:	20002fc8 	.word	0x20002fc8
 8003504:	20002fe0 	.word	0x20002fe0
 8003508:	20003014 	.word	0x20003014
 800350c:	08008479 	.word	0x08008479
 8003510:	20002600 	.word	0x20002600

08003514 <rt_sys_start>:
 8003514:	b508      	push	{r3, lr}
 8003516:	4b1e      	ldr	r3, [pc, #120]	; (8003590 <rt_sys_start+0x7c>)
 8003518:	681a      	ldr	r2, [r3, #0]
 800351a:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 800351e:	601a      	str	r2, [r3, #0]
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	021b      	lsls	r3, r3, #8
 8003524:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003528:	43db      	mvns	r3, r3
 800352a:	fab3 f383 	clz	r3, r3
 800352e:	4a19      	ldr	r2, [pc, #100]	; (8003594 <rt_sys_start+0x80>)
 8003530:	4819      	ldr	r0, [pc, #100]	; (8003598 <rt_sys_start+0x84>)
 8003532:	6812      	ldr	r2, [r2, #0]
 8003534:	6801      	ldr	r1, [r0, #0]
 8003536:	b2db      	uxtb	r3, r3
 8003538:	f1c3 0308 	rsb	r3, r3, #8
 800353c:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8003540:	4293      	cmp	r3, r2
 8003542:	bf98      	it	ls
 8003544:	1c53      	addls	r3, r2, #1
 8003546:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 800354a:	fa02 f303 	lsl.w	r3, r2, r3
 800354e:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003552:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8003556:	4313      	orrs	r3, r2
 8003558:	6003      	str	r3, [r0, #0]
 800355a:	f7fe fd79 	bl	8002050 <os_tick_init>
 800355e:	4b0f      	ldr	r3, [pc, #60]	; (800359c <rt_sys_start+0x88>)
 8003560:	2800      	cmp	r0, #0
 8003562:	6018      	str	r0, [r3, #0]
 8003564:	db12      	blt.n	800358c <rt_sys_start+0x78>
 8003566:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800356a:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 800356e:	22ff      	movs	r2, #255	; 0xff
 8003570:	7002      	strb	r2, [r0, #0]
 8003572:	681a      	ldr	r2, [r3, #0]
 8003574:	0953      	lsrs	r3, r2, #5
 8003576:	009b      	lsls	r3, r3, #2
 8003578:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800357c:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8003580:	f002 021f 	and.w	r2, r2, #31
 8003584:	2101      	movs	r1, #1
 8003586:	fa01 f202 	lsl.w	r2, r1, r2
 800358a:	601a      	str	r2, [r3, #0]
 800358c:	bd08      	pop	{r3, pc}
 800358e:	bf00      	nop
 8003590:	e000ed20 	.word	0xe000ed20
 8003594:	e000ed0c 	.word	0xe000ed0c
 8003598:	e000ed1c 	.word	0xe000ed1c
 800359c:	20002ff8 	.word	0x20002ff8

080035a0 <rt_dly_wait>:
 80035a0:	2103      	movs	r1, #3
 80035a2:	f7ff bddd 	b.w	8003160 <rt_block>

080035a6 <rt_sem_init>:
 80035a6:	2302      	movs	r3, #2
 80035a8:	7003      	strb	r3, [r0, #0]
 80035aa:	2300      	movs	r3, #0
 80035ac:	6043      	str	r3, [r0, #4]
 80035ae:	8041      	strh	r1, [r0, #2]
 80035b0:	4770      	bx	lr
	...

080035b4 <rt_sem_delete>:
 80035b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80035b6:	4f14      	ldr	r7, [pc, #80]	; (8003608 <rt_sem_delete+0x54>)
 80035b8:	4604      	mov	r4, r0
 80035ba:	2601      	movs	r6, #1
 80035bc:	6865      	ldr	r5, [r4, #4]
 80035be:	b99d      	cbnz	r5, 80035e8 <rt_sem_delete+0x34>
 80035c0:	4811      	ldr	r0, [pc, #68]	; (8003608 <rt_sem_delete+0x54>)
 80035c2:	6843      	ldr	r3, [r0, #4]
 80035c4:	b16b      	cbz	r3, 80035e2 <rt_sem_delete+0x2e>
 80035c6:	4e11      	ldr	r6, [pc, #68]	; (800360c <rt_sem_delete+0x58>)
 80035c8:	789a      	ldrb	r2, [r3, #2]
 80035ca:	6831      	ldr	r1, [r6, #0]
 80035cc:	788b      	ldrb	r3, [r1, #2]
 80035ce:	429a      	cmp	r2, r3
 80035d0:	d907      	bls.n	80035e2 <rt_sem_delete+0x2e>
 80035d2:	f7fe fbf7 	bl	8001dc4 <rt_put_prio>
 80035d6:	6833      	ldr	r3, [r6, #0]
 80035d8:	2201      	movs	r2, #1
 80035da:	705a      	strb	r2, [r3, #1]
 80035dc:	4628      	mov	r0, r5
 80035de:	f7ff fd9b 	bl	8003118 <rt_dispatch>
 80035e2:	2000      	movs	r0, #0
 80035e4:	7020      	strb	r0, [r4, #0]
 80035e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80035e8:	4620      	mov	r0, r4
 80035ea:	f7fe fc03 	bl	8001df4 <rt_get_first>
 80035ee:	2100      	movs	r1, #0
 80035f0:	4605      	mov	r5, r0
 80035f2:	f7fe fdc3 	bl	800217c <rt_ret_val>
 80035f6:	4628      	mov	r0, r5
 80035f8:	f7fe fca2 	bl	8001f40 <rt_rmv_dly>
 80035fc:	706e      	strb	r6, [r5, #1]
 80035fe:	4629      	mov	r1, r5
 8003600:	4638      	mov	r0, r7
 8003602:	f7fe fbdf 	bl	8001dc4 <rt_put_prio>
 8003606:	e7d9      	b.n	80035bc <rt_sem_delete+0x8>
 8003608:	20002fc8 	.word	0x20002fc8
 800360c:	20003014 	.word	0x20003014

08003610 <rt_sem_send>:
 8003610:	6842      	ldr	r2, [r0, #4]
 8003612:	b510      	push	{r4, lr}
 8003614:	b16a      	cbz	r2, 8003632 <rt_sem_send+0x22>
 8003616:	f7fe fbed 	bl	8001df4 <rt_get_first>
 800361a:	2101      	movs	r1, #1
 800361c:	4604      	mov	r4, r0
 800361e:	f7fe fdad 	bl	800217c <rt_ret_val>
 8003622:	4620      	mov	r0, r4
 8003624:	f7fe fc8c 	bl	8001f40 <rt_rmv_dly>
 8003628:	4620      	mov	r0, r4
 800362a:	f7ff fd75 	bl	8003118 <rt_dispatch>
 800362e:	2000      	movs	r0, #0
 8003630:	bd10      	pop	{r4, pc}
 8003632:	8842      	ldrh	r2, [r0, #2]
 8003634:	3201      	adds	r2, #1
 8003636:	8042      	strh	r2, [r0, #2]
 8003638:	e7f9      	b.n	800362e <rt_sem_send+0x1e>

0800363a <isr_sem_send>:
 800363a:	b508      	push	{r3, lr}
 800363c:	2100      	movs	r1, #0
 800363e:	f7fe fc93 	bl	8001f68 <rt_psq_enq>
 8003642:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003646:	f7fe bcb5 	b.w	8001fb4 <rt_psh_req>
	...

0800364c <rt_sem_psh>:
 800364c:	6842      	ldr	r2, [r0, #4]
 800364e:	b510      	push	{r4, lr}
 8003650:	b17a      	cbz	r2, 8003672 <rt_sem_psh+0x26>
 8003652:	f7fe fbcf 	bl	8001df4 <rt_get_first>
 8003656:	4604      	mov	r4, r0
 8003658:	f7fe fc72 	bl	8001f40 <rt_rmv_dly>
 800365c:	2101      	movs	r1, #1
 800365e:	7061      	strb	r1, [r4, #1]
 8003660:	4620      	mov	r0, r4
 8003662:	f7fe fd8b 	bl	800217c <rt_ret_val>
 8003666:	4621      	mov	r1, r4
 8003668:	4804      	ldr	r0, [pc, #16]	; (800367c <rt_sem_psh+0x30>)
 800366a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800366e:	f7fe bba9 	b.w	8001dc4 <rt_put_prio>
 8003672:	8842      	ldrh	r2, [r0, #2]
 8003674:	3201      	adds	r2, #1
 8003676:	8042      	strh	r2, [r0, #2]
 8003678:	bd10      	pop	{r4, pc}
 800367a:	bf00      	nop
 800367c:	20002fc8 	.word	0x20002fc8

08003680 <timer_irq_handler>:
 8003680:	b570      	push	{r4, r5, r6, lr}
 8003682:	4c13      	ldr	r4, [pc, #76]	; (80036d0 <timer_irq_handler+0x50>)
 8003684:	6823      	ldr	r3, [r4, #0]
 8003686:	691a      	ldr	r2, [r3, #16]
 8003688:	0795      	lsls	r5, r2, #30
 800368a:	d507      	bpl.n	800369c <timer_irq_handler+0x1c>
 800368c:	68da      	ldr	r2, [r3, #12]
 800368e:	0790      	lsls	r0, r2, #30
 8003690:	d504      	bpl.n	800369c <timer_irq_handler+0x1c>
 8003692:	f06f 0202 	mvn.w	r2, #2
 8003696:	611a      	str	r2, [r3, #16]
 8003698:	f7fe f9f8 	bl	8001a8c <us_ticker_irq_handler>
 800369c:	6823      	ldr	r3, [r4, #0]
 800369e:	691a      	ldr	r2, [r3, #16]
 80036a0:	0751      	lsls	r1, r2, #29
 80036a2:	d513      	bpl.n	80036cc <timer_irq_handler+0x4c>
 80036a4:	68da      	ldr	r2, [r3, #12]
 80036a6:	0752      	lsls	r2, r2, #29
 80036a8:	d510      	bpl.n	80036cc <timer_irq_handler+0x4c>
 80036aa:	f06f 0204 	mvn.w	r2, #4
 80036ae:	4e09      	ldr	r6, [pc, #36]	; (80036d4 <timer_irq_handler+0x54>)
 80036b0:	611a      	str	r2, [r3, #16]
 80036b2:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80036b4:	6833      	ldr	r3, [r6, #0]
 80036b6:	1aeb      	subs	r3, r5, r3
 80036b8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80036bc:	d306      	bcc.n	80036cc <timer_irq_handler+0x4c>
 80036be:	f002 f9f1 	bl	8005aa4 <HAL_IncTick>
 80036c2:	6823      	ldr	r3, [r4, #0]
 80036c4:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 80036c8:	639a      	str	r2, [r3, #56]	; 0x38
 80036ca:	6035      	str	r5, [r6, #0]
 80036cc:	bd70      	pop	{r4, r5, r6, pc}
 80036ce:	bf00      	nop
 80036d0:	20003060 	.word	0x20003060
 80036d4:	20001f20 	.word	0x20001f20

080036d8 <HAL_InitTick>:
 80036d8:	b530      	push	{r4, r5, lr}
 80036da:	b089      	sub	sp, #36	; 0x24
 80036dc:	a901      	add	r1, sp, #4
 80036de:	a803      	add	r0, sp, #12
 80036e0:	f002 f986 	bl	80059f0 <HAL_RCC_GetClockConfig>
 80036e4:	f002 f954 	bl	8005990 <HAL_RCC_GetPCLK1Freq>
 80036e8:	4b24      	ldr	r3, [pc, #144]	; (800377c <HAL_InitTick+0xa4>)
 80036ea:	9001      	str	r0, [sp, #4]
 80036ec:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80036ee:	4c24      	ldr	r4, [pc, #144]	; (8003780 <HAL_InitTick+0xa8>)
 80036f0:	f042 0201 	orr.w	r2, r2, #1
 80036f4:	659a      	str	r2, [r3, #88]	; 0x58
 80036f6:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80036f8:	f002 0201 	and.w	r2, r2, #1
 80036fc:	9202      	str	r2, [sp, #8]
 80036fe:	9a02      	ldr	r2, [sp, #8]
 8003700:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003702:	f042 0201 	orr.w	r2, r2, #1
 8003706:	639a      	str	r2, [r3, #56]	; 0x38
 8003708:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800370a:	f022 0201 	bic.w	r2, r2, #1
 800370e:	639a      	str	r2, [r3, #56]	; 0x38
 8003710:	9a06      	ldr	r2, [sp, #24]
 8003712:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003716:	6023      	str	r3, [r4, #0]
 8003718:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800371c:	60e3      	str	r3, [r4, #12]
 800371e:	4b19      	ldr	r3, [pc, #100]	; (8003784 <HAL_InitTick+0xac>)
 8003720:	bb4a      	cbnz	r2, 8003776 <HAL_InitTick+0x9e>
 8003722:	fbb0 f0f3 	udiv	r0, r0, r3
 8003726:	3801      	subs	r0, #1
 8003728:	2500      	movs	r5, #0
 800372a:	6060      	str	r0, [r4, #4]
 800372c:	4814      	ldr	r0, [pc, #80]	; (8003780 <HAL_InitTick+0xa8>)
 800372e:	6125      	str	r5, [r4, #16]
 8003730:	60a5      	str	r5, [r4, #8]
 8003732:	6165      	str	r5, [r4, #20]
 8003734:	f001 f9b8 	bl	8004aa8 <HAL_TIM_OC_Init>
 8003738:	4913      	ldr	r1, [pc, #76]	; (8003788 <HAL_InitTick+0xb0>)
 800373a:	201c      	movs	r0, #28
 800373c:	f001 f864 	bl	8004808 <__NVIC_SetVector>
 8003740:	4b12      	ldr	r3, [pc, #72]	; (800378c <HAL_InitTick+0xb4>)
 8003742:	480f      	ldr	r0, [pc, #60]	; (8003780 <HAL_InitTick+0xa8>)
 8003744:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003748:	601a      	str	r2, [r3, #0]
 800374a:	4629      	mov	r1, r5
 800374c:	f001 fac8 	bl	8004ce0 <HAL_TIM_OC_Start>
 8003750:	2104      	movs	r1, #4
 8003752:	480b      	ldr	r0, [pc, #44]	; (8003780 <HAL_InitTick+0xa8>)
 8003754:	f001 fac4 	bl	8004ce0 <HAL_TIM_OC_Start>
 8003758:	6823      	ldr	r3, [r4, #0]
 800375a:	4a0d      	ldr	r2, [pc, #52]	; (8003790 <HAL_InitTick+0xb8>)
 800375c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800375e:	6011      	str	r1, [r2, #0]
 8003760:	6812      	ldr	r2, [r2, #0]
 8003762:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 8003766:	639a      	str	r2, [r3, #56]	; 0x38
 8003768:	68da      	ldr	r2, [r3, #12]
 800376a:	4628      	mov	r0, r5
 800376c:	f042 0204 	orr.w	r2, r2, #4
 8003770:	60da      	str	r2, [r3, #12]
 8003772:	b009      	add	sp, #36	; 0x24
 8003774:	bd30      	pop	{r4, r5, pc}
 8003776:	0040      	lsls	r0, r0, #1
 8003778:	e7d3      	b.n	8003722 <HAL_InitTick+0x4a>
 800377a:	bf00      	nop
 800377c:	40021000 	.word	0x40021000
 8003780:	20003060 	.word	0x20003060
 8003784:	000f4240 	.word	0x000f4240
 8003788:	08003681 	.word	0x08003681
 800378c:	e000e100 	.word	0xe000e100
 8003790:	20001f20 	.word	0x20001f20

08003794 <HAL_SuspendTick>:
 8003794:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003798:	4a03      	ldr	r2, [pc, #12]	; (80037a8 <HAL_SuspendTick+0x14>)
 800379a:	6013      	str	r3, [r2, #0]
 800379c:	68da      	ldr	r2, [r3, #12]
 800379e:	f022 0204 	bic.w	r2, r2, #4
 80037a2:	60da      	str	r2, [r3, #12]
 80037a4:	4770      	bx	lr
 80037a6:	bf00      	nop
 80037a8:	20003060 	.word	0x20003060

080037ac <HAL_ResumeTick>:
 80037ac:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80037b0:	4a03      	ldr	r2, [pc, #12]	; (80037c0 <HAL_ResumeTick+0x14>)
 80037b2:	6013      	str	r3, [r2, #0]
 80037b4:	68da      	ldr	r2, [r3, #12]
 80037b6:	f042 0204 	orr.w	r2, r2, #4
 80037ba:	60da      	str	r2, [r3, #12]
 80037bc:	4770      	bx	lr
 80037be:	bf00      	nop
 80037c0:	20003060 	.word	0x20003060

080037c4 <handle_interrupt_in>:
 80037c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037c6:	264c      	movs	r6, #76	; 0x4c
 80037c8:	4b13      	ldr	r3, [pc, #76]	; (8003818 <handle_interrupt_in+0x54>)
 80037ca:	4346      	muls	r6, r0
 80037cc:	1d34      	adds	r4, r6, #4
 80037ce:	460f      	mov	r7, r1
 80037d0:	441c      	add	r4, r3
 80037d2:	2500      	movs	r5, #0
 80037d4:	441e      	add	r6, r3
 80037d6:	42bd      	cmp	r5, r7
 80037d8:	d100      	bne.n	80037dc <handle_interrupt_in+0x18>
 80037da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80037dc:	2101      	movs	r1, #1
 80037de:	6833      	ldr	r3, [r6, #0]
 80037e0:	fa01 f205 	lsl.w	r2, r1, r5
 80037e4:	421a      	tst	r2, r3
 80037e6:	d013      	beq.n	8003810 <handle_interrupt_in+0x4c>
 80037e8:	4a0c      	ldr	r2, [pc, #48]	; (800381c <handle_interrupt_in+0x58>)
 80037ea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80037ec:	6950      	ldr	r0, [r2, #20]
 80037ee:	fa01 f303 	lsl.w	r3, r1, r3
 80037f2:	4203      	tst	r3, r0
 80037f4:	d00c      	beq.n	8003810 <handle_interrupt_in+0x4c>
 80037f6:	f8d4 e018 	ldr.w	lr, [r4, #24]
 80037fa:	6153      	str	r3, [r2, #20]
 80037fc:	6820      	ldr	r0, [r4, #0]
 80037fe:	b138      	cbz	r0, 8003810 <handle_interrupt_in+0x4c>
 8003800:	f8de 2010 	ldr.w	r2, [lr, #16]
 8003804:	4213      	tst	r3, r2
 8003806:	4b06      	ldr	r3, [pc, #24]	; (8003820 <handle_interrupt_in+0x5c>)
 8003808:	bf08      	it	eq
 800380a:	2102      	moveq	r1, #2
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	4798      	blx	r3
 8003810:	3501      	adds	r5, #1
 8003812:	3404      	adds	r4, #4
 8003814:	e7df      	b.n	80037d6 <handle_interrupt_in+0x12>
 8003816:	bf00      	nop
 8003818:	20001f24 	.word	0x20001f24
 800381c:	40010400 	.word	0x40010400
 8003820:	20002138 	.word	0x20002138

08003824 <gpio_irq0>:
 8003824:	2101      	movs	r1, #1
 8003826:	2000      	movs	r0, #0
 8003828:	f7ff bfcc 	b.w	80037c4 <handle_interrupt_in>

0800382c <gpio_irq1>:
 800382c:	2101      	movs	r1, #1
 800382e:	4608      	mov	r0, r1
 8003830:	f7ff bfc8 	b.w	80037c4 <handle_interrupt_in>

08003834 <gpio_irq2>:
 8003834:	2101      	movs	r1, #1
 8003836:	2002      	movs	r0, #2
 8003838:	f7ff bfc4 	b.w	80037c4 <handle_interrupt_in>

0800383c <gpio_irq3>:
 800383c:	2101      	movs	r1, #1
 800383e:	2003      	movs	r0, #3
 8003840:	f7ff bfc0 	b.w	80037c4 <handle_interrupt_in>

08003844 <gpio_irq4>:
 8003844:	2101      	movs	r1, #1
 8003846:	2004      	movs	r0, #4
 8003848:	f7ff bfbc 	b.w	80037c4 <handle_interrupt_in>

0800384c <gpio_irq5>:
 800384c:	2105      	movs	r1, #5
 800384e:	4608      	mov	r0, r1
 8003850:	f7ff bfb8 	b.w	80037c4 <handle_interrupt_in>

08003854 <gpio_irq6>:
 8003854:	2106      	movs	r1, #6
 8003856:	4608      	mov	r0, r1
 8003858:	f7ff bfb4 	b.w	80037c4 <handle_interrupt_in>

0800385c <gpio_irq_set>:
 800385c:	2901      	cmp	r1, #1
 800385e:	b510      	push	{r4, lr}
 8003860:	d110      	bne.n	8003884 <gpio_irq_set+0x28>
 8003862:	4c14      	ldr	r4, [pc, #80]	; (80038b4 <gpio_irq_set+0x58>)
 8003864:	8983      	ldrh	r3, [r0, #12]
 8003866:	b132      	cbz	r2, 8003876 <gpio_irq_set+0x1a>
 8003868:	68a2      	ldr	r2, [r4, #8]
 800386a:	f003 030f 	and.w	r3, r3, #15
 800386e:	4099      	lsls	r1, r3
 8003870:	4311      	orrs	r1, r2
 8003872:	60a1      	str	r1, [r4, #8]
 8003874:	bd10      	pop	{r4, pc}
 8003876:	68a2      	ldr	r2, [r4, #8]
 8003878:	f003 030f 	and.w	r3, r3, #15
 800387c:	4099      	lsls	r1, r3
 800387e:	ea22 0101 	bic.w	r1, r2, r1
 8003882:	e7f6      	b.n	8003872 <gpio_irq_set+0x16>
 8003884:	2902      	cmp	r1, #2
 8003886:	d10a      	bne.n	800389e <gpio_irq_set+0x42>
 8003888:	490a      	ldr	r1, [pc, #40]	; (80038b4 <gpio_irq_set+0x58>)
 800388a:	8983      	ldrh	r3, [r0, #12]
 800388c:	b142      	cbz	r2, 80038a0 <gpio_irq_set+0x44>
 800388e:	68c8      	ldr	r0, [r1, #12]
 8003890:	f003 030f 	and.w	r3, r3, #15
 8003894:	2201      	movs	r2, #1
 8003896:	fa02 f303 	lsl.w	r3, r2, r3
 800389a:	4303      	orrs	r3, r0
 800389c:	60cb      	str	r3, [r1, #12]
 800389e:	bd10      	pop	{r4, pc}
 80038a0:	68ca      	ldr	r2, [r1, #12]
 80038a2:	f003 030f 	and.w	r3, r3, #15
 80038a6:	2001      	movs	r0, #1
 80038a8:	fa00 f303 	lsl.w	r3, r0, r3
 80038ac:	ea22 0303 	bic.w	r3, r2, r3
 80038b0:	e7f4      	b.n	800389c <gpio_irq_set+0x40>
 80038b2:	bf00      	nop
 80038b4:	40010400 	.word	0x40010400

080038b8 <gpio_irq_enable>:
 80038b8:	f9b0 300c 	ldrsh.w	r3, [r0, #12]
 80038bc:	b29a      	uxth	r2, r3
 80038be:	f002 010f 	and.w	r1, r2, #15
 80038c2:	b570      	push	{r4, r5, r6, lr}
 80038c4:	f001 040c 	and.w	r4, r1, #12
 80038c8:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80038cc:	f504 3480 	add.w	r4, r4, #65536	; 0x10000
 80038d0:	f002 0203 	and.w	r2, r2, #3
 80038d4:	68a5      	ldr	r5, [r4, #8]
 80038d6:	0092      	lsls	r2, r2, #2
 80038d8:	260f      	movs	r6, #15
 80038da:	4096      	lsls	r6, r2
 80038dc:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80038e0:	4093      	lsls	r3, r2
 80038e2:	ea25 0506 	bic.w	r5, r5, r6
 80038e6:	4a09      	ldr	r2, [pc, #36]	; (800390c <gpio_irq_enable+0x54>)
 80038e8:	432b      	orrs	r3, r5
 80038ea:	60a3      	str	r3, [r4, #8]
 80038ec:	6814      	ldr	r4, [r2, #0]
 80038ee:	2301      	movs	r3, #1
 80038f0:	fa03 f101 	lsl.w	r1, r3, r1
 80038f4:	4321      	orrs	r1, r4
 80038f6:	6011      	str	r1, [r2, #0]
 80038f8:	f990 2000 	ldrsb.w	r2, [r0]
 80038fc:	0951      	lsrs	r1, r2, #5
 80038fe:	f002 021f 	and.w	r2, r2, #31
 8003902:	4093      	lsls	r3, r2
 8003904:	4a02      	ldr	r2, [pc, #8]	; (8003910 <gpio_irq_enable+0x58>)
 8003906:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 800390a:	bd70      	pop	{r4, r5, r6, pc}
 800390c:	40010400 	.word	0x40010400
 8003910:	e000e100 	.word	0xe000e100

08003914 <gpio_irq_init>:
 8003914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8003918:	469b      	mov	r11, r3
 800391a:	1c4b      	adds	r3, r1, #1
 800391c:	b085      	sub	sp, #20
 800391e:	4607      	mov	r7, r0
 8003920:	460c      	mov	r4, r1
 8003922:	4692      	mov	r10, r2
 8003924:	d062      	beq.n	80039ec <gpio_irq_init+0xd8>
 8003926:	4b32      	ldr	r3, [pc, #200]	; (80039f0 <gpio_irq_init+0xdc>)
 8003928:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800392a:	f042 0201 	orr.w	r2, r2, #1
 800392e:	661a      	str	r2, [r3, #96]	; 0x60
 8003930:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003932:	4a30      	ldr	r2, [pc, #192]	; (80039f4 <gpio_irq_init+0xe0>)
 8003934:	f003 0301 	and.w	r3, r3, #1
 8003938:	9303      	str	r3, [sp, #12]
 800393a:	9b03      	ldr	r3, [sp, #12]
 800393c:	f001 080f 	and.w	r8, r1, #15
 8003940:	230c      	movs	r3, #12
 8003942:	fb03 2308 	mla	r3, r3, r8, r2
 8003946:	f3c1 1003 	ubfx	r0, r1, #4, #4
 800394a:	685d      	ldr	r5, [r3, #4]
 800394c:	2d06      	cmp	r5, #6
 800394e:	d845      	bhi.n	80039dc <gpio_irq_init+0xc8>
 8003950:	e8df f005 	tbb	[pc, r5]
 8003954:	3c3a3804 	.word	0x3c3a3804
 8003958:	403e      	.short	0x403e
 800395a:	42          	.byte	0x42
 800395b:	00          	.byte	0x00
 800395c:	4e26      	ldr	r6, [pc, #152]	; (80039f8 <gpio_irq_init+0xe4>)
 800395e:	9201      	str	r2, [sp, #4]
 8003960:	f000 f8b4 	bl	8003acc <Set_GPIO_Clock>
 8003964:	210c      	movs	r1, #12
 8003966:	9a01      	ldr	r2, [sp, #4]
 8003968:	81bc      	strh	r4, [r7, #12]
 800396a:	fb01 f108 	mul.w	r1, r1, r8
 800396e:	1853      	adds	r3, r2, r1
 8003970:	f852 e001 	ldr.w	lr, [r2, r1]
 8003974:	4921      	ldr	r1, [pc, #132]	; (80039fc <gpio_irq_init+0xe8>)
 8003976:	f993 c008 	ldrsb.w	r12, [r3, #8]
 800397a:	f887 c000 	strb.w	r12, [r7]
 800397e:	224c      	movs	r2, #76	; 0x4c
 8003980:	436a      	muls	r2, r5
 8003982:	2401      	movs	r4, #1
 8003984:	588b      	ldr	r3, [r1, r2]
 8003986:	607d      	str	r5, [r7, #4]
 8003988:	fa04 f40e 	lsl.w	r4, r4, lr
 800398c:	431c      	orrs	r4, r3
 800398e:	f04f 0900 	mov.w	r9, #0
 8003992:	f8c7 9008 	str.w	r9, [r7, #8]
 8003996:	508c      	str	r4, [r1, r2]
 8003998:	2213      	movs	r2, #19
 800399a:	fb02 e505 	mla	r5, r2, r5, lr
 800399e:	eb01 0285 	add.w	r2, r1, r5, lsl #2
 80039a2:	4631      	mov	r1, r6
 80039a4:	61d0      	str	r0, [r2, #28]
 80039a6:	f8c2 b004 	str.w	r11, [r2, #4]
 80039aa:	f8c2 8034 	str.w	r8, [r2, #52]	; 0x34
 80039ae:	4a14      	ldr	r2, [pc, #80]	; (8003a00 <gpio_irq_init+0xec>)
 80039b0:	4660      	mov	r0, r12
 80039b2:	f8c2 a000 	str.w	r10, [r2]
 80039b6:	f000 ff27 	bl	8004808 <__NVIC_SetVector>
 80039ba:	4638      	mov	r0, r7
 80039bc:	f7ff ff7c 	bl	80038b8 <gpio_irq_enable>
 80039c0:	4648      	mov	r0, r9
 80039c2:	e010      	b.n	80039e6 <gpio_irq_init+0xd2>
 80039c4:	4e0f      	ldr	r6, [pc, #60]	; (8003a04 <gpio_irq_init+0xf0>)
 80039c6:	e7ca      	b.n	800395e <gpio_irq_init+0x4a>
 80039c8:	4e0f      	ldr	r6, [pc, #60]	; (8003a08 <gpio_irq_init+0xf4>)
 80039ca:	e7c8      	b.n	800395e <gpio_irq_init+0x4a>
 80039cc:	4e0f      	ldr	r6, [pc, #60]	; (8003a0c <gpio_irq_init+0xf8>)
 80039ce:	e7c6      	b.n	800395e <gpio_irq_init+0x4a>
 80039d0:	4e0f      	ldr	r6, [pc, #60]	; (8003a10 <gpio_irq_init+0xfc>)
 80039d2:	e7c4      	b.n	800395e <gpio_irq_init+0x4a>
 80039d4:	4e0f      	ldr	r6, [pc, #60]	; (8003a14 <gpio_irq_init+0x100>)
 80039d6:	e7c2      	b.n	800395e <gpio_irq_init+0x4a>
 80039d8:	4e0f      	ldr	r6, [pc, #60]	; (8003a18 <gpio_irq_init+0x104>)
 80039da:	e7c0      	b.n	800395e <gpio_irq_init+0x4a>
 80039dc:	480f      	ldr	r0, [pc, #60]	; (8003a1c <gpio_irq_init+0x108>)
 80039de:	f7fe f963 	bl	8001ca8 <error>
 80039e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80039e6:	b005      	add	sp, #20
 80039e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80039ec:	4608      	mov	r0, r1
 80039ee:	e7fa      	b.n	80039e6 <gpio_irq_init+0xd2>
 80039f0:	40021000 	.word	0x40021000
 80039f4:	080085ac 	.word	0x080085ac
 80039f8:	08003825 	.word	0x08003825
 80039fc:	20001f24 	.word	0x20001f24
 8003a00:	20002138 	.word	0x20002138
 8003a04:	0800382d 	.word	0x0800382d
 8003a08:	08003835 	.word	0x08003835
 8003a0c:	0800383d 	.word	0x0800383d
 8003a10:	08003845 	.word	0x08003845
 8003a14:	0800384d 	.word	0x0800384d
 8003a18:	08003855 	.word	0x08003855
 8003a1c:	080084b8 	.word	0x080084b8

08003a20 <gpio_irq_disable>:
 8003a20:	b510      	push	{r4, lr}
 8003a22:	8983      	ldrh	r3, [r0, #12]
 8003a24:	4c12      	ldr	r4, [pc, #72]	; (8003a70 <gpio_irq_disable+0x50>)
 8003a26:	2201      	movs	r2, #1
 8003a28:	6821      	ldr	r1, [r4, #0]
 8003a2a:	f003 030f 	and.w	r3, r3, #15
 8003a2e:	fa02 f303 	lsl.w	r3, r2, r3
 8003a32:	ea21 0303 	bic.w	r3, r1, r3
 8003a36:	6023      	str	r3, [r4, #0]
 8003a38:	f990 3000 	ldrsb.w	r3, [r0]
 8003a3c:	4c0d      	ldr	r4, [pc, #52]	; (8003a74 <gpio_irq_disable+0x54>)
 8003a3e:	0959      	lsrs	r1, r3, #5
 8003a40:	3120      	adds	r1, #32
 8003a42:	f003 031f 	and.w	r3, r3, #31
 8003a46:	fa02 f303 	lsl.w	r3, r2, r3
 8003a4a:	f844 3021 	str.w	r3, [r4, r1, lsl #2]
 8003a4e:	f3bf 8f4f 	dsb	sy
 8003a52:	f3bf 8f6f 	isb	sy
 8003a56:	f990 3000 	ldrsb.w	r3, [r0]
 8003a5a:	0959      	lsrs	r1, r3, #5
 8003a5c:	f003 031f 	and.w	r3, r3, #31
 8003a60:	409a      	lsls	r2, r3
 8003a62:	f101 0360 	add.w	r3, r1, #96	; 0x60
 8003a66:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8003a6a:	2300      	movs	r3, #0
 8003a6c:	6083      	str	r3, [r0, #8]
 8003a6e:	bd10      	pop	{r4, pc}
 8003a70:	40010400 	.word	0x40010400
 8003a74:	e000e100 	.word	0xe000e100

08003a78 <gpio_irq_free>:
 8003a78:	8983      	ldrh	r3, [r0, #12]
 8003a7a:	f003 020f 	and.w	r2, r3, #15
 8003a7e:	230c      	movs	r3, #12
 8003a80:	4353      	muls	r3, r2
 8003a82:	4a10      	ldr	r2, [pc, #64]	; (8003ac4 <gpio_irq_free+0x4c>)
 8003a84:	b570      	push	{r4, r5, r6, lr}
 8003a86:	6844      	ldr	r4, [r0, #4]
 8003a88:	58d6      	ldr	r6, [r2, r3]
 8003a8a:	f7ff ffc9 	bl	8003a20 <gpio_irq_disable>
 8003a8e:	214c      	movs	r1, #76	; 0x4c
 8003a90:	4a0d      	ldr	r2, [pc, #52]	; (8003ac8 <gpio_irq_free+0x50>)
 8003a92:	4361      	muls	r1, r4
 8003a94:	2001      	movs	r0, #1
 8003a96:	fa00 f506 	lsl.w	r5, r0, r6
 8003a9a:	5850      	ldr	r0, [r2, r1]
 8003a9c:	2313      	movs	r3, #19
 8003a9e:	fb03 6304 	mla	r3, r3, r4, r6
 8003aa2:	ea20 0005 	bic.w	r0, r0, r5
 8003aa6:	5050      	str	r0, [r2, r1]
 8003aa8:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 8003aac:	2100      	movs	r1, #0
 8003aae:	6041      	str	r1, [r0, #4]
 8003ab0:	1d98      	adds	r0, r3, #6
 8003ab2:	330c      	adds	r3, #12
 8003ab4:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 8003ab8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8003abc:	6041      	str	r1, [r0, #4]
 8003abe:	6059      	str	r1, [r3, #4]
 8003ac0:	bd70      	pop	{r4, r5, r6, pc}
 8003ac2:	bf00      	nop
 8003ac4:	080085ac 	.word	0x080085ac
 8003ac8:	20001f24 	.word	0x20001f24

08003acc <Set_GPIO_Clock>:
 8003acc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003ace:	2807      	cmp	r0, #7
 8003ad0:	d838      	bhi.n	8003b44 <Set_GPIO_Clock+0x78>
 8003ad2:	e8df f000 	tbb	[pc, r0]
 8003ad6:	1304      	.short	0x1304
 8003ad8:	3737371f 	.word	0x3737371f
 8003adc:	2b37      	.short	0x2b37
 8003ade:	4b1c      	ldr	r3, [pc, #112]	; (8003b50 <Set_GPIO_Clock+0x84>)
 8003ae0:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003ae2:	f042 0201 	orr.w	r2, r2, #1
 8003ae6:	64da      	str	r2, [r3, #76]	; 0x4c
 8003ae8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003aea:	f003 0301 	and.w	r3, r3, #1
 8003aee:	9300      	str	r3, [sp, #0]
 8003af0:	9b00      	ldr	r3, [sp, #0]
 8003af2:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8003af6:	b005      	add	sp, #20
 8003af8:	f85d fb04 	ldr.w	pc, [sp], #4
 8003afc:	4b14      	ldr	r3, [pc, #80]	; (8003b50 <Set_GPIO_Clock+0x84>)
 8003afe:	4815      	ldr	r0, [pc, #84]	; (8003b54 <Set_GPIO_Clock+0x88>)
 8003b00:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003b02:	f042 0202 	orr.w	r2, r2, #2
 8003b06:	64da      	str	r2, [r3, #76]	; 0x4c
 8003b08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003b0a:	f003 0302 	and.w	r3, r3, #2
 8003b0e:	9301      	str	r3, [sp, #4]
 8003b10:	9b01      	ldr	r3, [sp, #4]
 8003b12:	e7f0      	b.n	8003af6 <Set_GPIO_Clock+0x2a>
 8003b14:	4b0e      	ldr	r3, [pc, #56]	; (8003b50 <Set_GPIO_Clock+0x84>)
 8003b16:	4810      	ldr	r0, [pc, #64]	; (8003b58 <Set_GPIO_Clock+0x8c>)
 8003b18:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003b1a:	f042 0204 	orr.w	r2, r2, #4
 8003b1e:	64da      	str	r2, [r3, #76]	; 0x4c
 8003b20:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003b22:	f003 0304 	and.w	r3, r3, #4
 8003b26:	9302      	str	r3, [sp, #8]
 8003b28:	9b02      	ldr	r3, [sp, #8]
 8003b2a:	e7e4      	b.n	8003af6 <Set_GPIO_Clock+0x2a>
 8003b2c:	4b08      	ldr	r3, [pc, #32]	; (8003b50 <Set_GPIO_Clock+0x84>)
 8003b2e:	480b      	ldr	r0, [pc, #44]	; (8003b5c <Set_GPIO_Clock+0x90>)
 8003b30:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003b32:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003b36:	64da      	str	r2, [r3, #76]	; 0x4c
 8003b38:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003b3a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003b3e:	9303      	str	r3, [sp, #12]
 8003b40:	9b03      	ldr	r3, [sp, #12]
 8003b42:	e7d8      	b.n	8003af6 <Set_GPIO_Clock+0x2a>
 8003b44:	4806      	ldr	r0, [pc, #24]	; (8003b60 <Set_GPIO_Clock+0x94>)
 8003b46:	f7fe f8af 	bl	8001ca8 <error>
 8003b4a:	2000      	movs	r0, #0
 8003b4c:	e7d3      	b.n	8003af6 <Set_GPIO_Clock+0x2a>
 8003b4e:	bf00      	nop
 8003b50:	40021000 	.word	0x40021000
 8003b54:	48000400 	.word	0x48000400
 8003b58:	48000800 	.word	0x48000800
 8003b5c:	48001c00 	.word	0x48001c00
 8003b60:	080084df 	.word	0x080084df

08003b64 <gpio_set>:
 8003b64:	b510      	push	{r4, lr}
 8003b66:	2100      	movs	r1, #0
 8003b68:	4604      	mov	r4, r0
 8003b6a:	f004 040f 	and.w	r4, r4, #15
 8003b6e:	f000 fad1 	bl	8004114 <pin_function>
 8003b72:	2001      	movs	r0, #1
 8003b74:	40a0      	lsls	r0, r4
 8003b76:	bd10      	pop	{r4, pc}

08003b78 <gpio_init>:
 8003b78:	b570      	push	{r4, r5, r6, lr}
 8003b7a:	4604      	mov	r4, r0
 8003b7c:	1c4b      	adds	r3, r1, #1
 8003b7e:	460e      	mov	r6, r1
 8003b80:	8221      	strh	r1, [r4, #16]
 8003b82:	d018      	beq.n	8003bb6 <gpio_init+0x3e>
 8003b84:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8003b88:	f7ff ffa0 	bl	8003acc <Set_GPIO_Clock>
 8003b8c:	4605      	mov	r5, r0
 8003b8e:	4630      	mov	r0, r6
 8003b90:	f7ff ffe8 	bl	8003b64 <gpio_set>
 8003b94:	8a23      	ldrh	r3, [r4, #16]
 8003b96:	4a08      	ldr	r2, [pc, #32]	; (8003bb8 <gpio_init+0x40>)
 8003b98:	6165      	str	r5, [r4, #20]
 8003b9a:	f003 030f 	and.w	r3, r3, #15
 8003b9e:	6020      	str	r0, [r4, #0]
 8003ba0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003ba4:	61a3      	str	r3, [r4, #24]
 8003ba6:	f105 0310 	add.w	r3, r5, #16
 8003baa:	6063      	str	r3, [r4, #4]
 8003bac:	f105 0318 	add.w	r3, r5, #24
 8003bb0:	3528      	adds	r5, #40	; 0x28
 8003bb2:	60a3      	str	r3, [r4, #8]
 8003bb4:	60e5      	str	r5, [r4, #12]
 8003bb6:	bd70      	pop	{r4, r5, r6, pc}
 8003bb8:	0800852c 	.word	0x0800852c

08003bbc <gpio_mode>:
 8003bbc:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8003bc0:	f000 bb2c 	b.w	800421c <pin_mode>

08003bc4 <gpio_dir>:
 8003bc4:	b510      	push	{r4, lr}
 8003bc6:	6983      	ldr	r3, [r0, #24]
 8003bc8:	6944      	ldr	r4, [r0, #20]
 8003bca:	b971      	cbnz	r1, 8003bea <gpio_dir+0x26>
 8003bcc:	6821      	ldr	r1, [r4, #0]
 8003bce:	fa93 f2a3 	rbit	r2, r3
 8003bd2:	fab2 f282 	clz	r2, r2
 8003bd6:	2003      	movs	r0, #3
 8003bd8:	0052      	lsls	r2, r2, #1
 8003bda:	fa00 f202 	lsl.w	r2, r0, r2
 8003bde:	ea21 0202 	bic.w	r2, r1, r2
 8003be2:	fa93 f3a3 	rbit	r3, r3
 8003be6:	6022      	str	r2, [r4, #0]
 8003be8:	bd10      	pop	{r4, pc}
 8003bea:	6822      	ldr	r2, [r4, #0]
 8003bec:	fa93 f1a3 	rbit	r1, r3
 8003bf0:	fab1 f181 	clz	r1, r1
 8003bf4:	fa93 f3a3 	rbit	r3, r3
 8003bf8:	2003      	movs	r0, #3
 8003bfa:	0049      	lsls	r1, r1, #1
 8003bfc:	fa00 f101 	lsl.w	r1, r0, r1
 8003c00:	fab3 f383 	clz	r3, r3
 8003c04:	ea22 0201 	bic.w	r2, r2, r1
 8003c08:	005b      	lsls	r3, r3, #1
 8003c0a:	2101      	movs	r1, #1
 8003c0c:	fa01 f303 	lsl.w	r3, r1, r3
 8003c10:	4313      	orrs	r3, r2
 8003c12:	6023      	str	r3, [r4, #0]
 8003c14:	bd10      	pop	{r4, pc}

08003c16 <hal_sleep>:
 8003c16:	b508      	push	{r3, lr}
 8003c18:	f7ff fdbc 	bl	8003794 <HAL_SuspendTick>
 8003c1c:	2101      	movs	r1, #1
 8003c1e:	2000      	movs	r0, #0
 8003c20:	f001 fa9a 	bl	8005158 <HAL_PWR_EnterSLEEPMode>
 8003c24:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003c28:	f7ff bdc0 	b.w	80037ac <HAL_ResumeTick>

08003c2c <CAN1_SCE_IRQHandler>:
 8003c2c:	4b38      	ldr	r3, [pc, #224]	; (8003d10 <CAN1_SCE_IRQHandler+0xe4>)
 8003c2e:	695a      	ldr	r2, [r3, #20]
 8003c30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c34:	4c37      	ldr	r4, [pc, #220]	; (8003d14 <CAN1_SCE_IRQHandler+0xe8>)
 8003c36:	07d2      	lsls	r2, r2, #31
 8003c38:	6023      	str	r3, [r4, #0]
 8003c3a:	d52a      	bpl.n	8003c92 <CAN1_SCE_IRQHandler+0x66>
 8003c3c:	6898      	ldr	r0, [r3, #8]
 8003c3e:	4f36      	ldr	r7, [pc, #216]	; (8003d18 <CAN1_SCE_IRQHandler+0xec>)
 8003c40:	6899      	ldr	r1, [r3, #8]
 8003c42:	4e36      	ldr	r6, [pc, #216]	; (8003d1c <CAN1_SCE_IRQHandler+0xf0>)
 8003c44:	689a      	ldr	r2, [r3, #8]
 8003c46:	4d36      	ldr	r5, [pc, #216]	; (8003d20 <CAN1_SCE_IRQHandler+0xf4>)
 8003c48:	4038      	ands	r0, r7
 8003c4a:	42b8      	cmp	r0, r7
 8003c4c:	ea01 0106 	and.w	r1, r1, r6
 8003c50:	bf04      	itt	eq
 8003c52:	2701      	moveq	r7, #1
 8003c54:	609f      	streq	r7, [r3, #8]
 8003c56:	42b1      	cmp	r1, r6
 8003c58:	bf08      	it	eq
 8003c5a:	4b2d      	ldreq	r3, [pc, #180]	; (8003d10 <CAN1_SCE_IRQHandler+0xe4>)
 8003c5c:	ea02 0205 	and.w	r2, r2, r5
 8003c60:	bf04      	itt	eq
 8003c62:	f44f 7680 	moveq.w	r6, #256	; 0x100
 8003c66:	609e      	streq	r6, [r3, #8]
 8003c68:	42aa      	cmp	r2, r5
 8003c6a:	bf02      	ittt	eq
 8003c6c:	4b28      	ldreq	r3, [pc, #160]	; (8003d10 <CAN1_SCE_IRQHandler+0xe4>)
 8003c6e:	f44f 3580 	moveq.w	r5, #65536	; 0x10000
 8003c72:	609d      	streq	r5, [r3, #8]
 8003c74:	4b28      	ldr	r3, [pc, #160]	; (8003d18 <CAN1_SCE_IRQHandler+0xec>)
 8003c76:	4298      	cmp	r0, r3
 8003c78:	d005      	beq.n	8003c86 <CAN1_SCE_IRQHandler+0x5a>
 8003c7a:	4b28      	ldr	r3, [pc, #160]	; (8003d1c <CAN1_SCE_IRQHandler+0xf0>)
 8003c7c:	4299      	cmp	r1, r3
 8003c7e:	d002      	beq.n	8003c86 <CAN1_SCE_IRQHandler+0x5a>
 8003c80:	4b27      	ldr	r3, [pc, #156]	; (8003d20 <CAN1_SCE_IRQHandler+0xf4>)
 8003c82:	429a      	cmp	r2, r3
 8003c84:	d105      	bne.n	8003c92 <CAN1_SCE_IRQHandler+0x66>
 8003c86:	4b27      	ldr	r3, [pc, #156]	; (8003d24 <CAN1_SCE_IRQHandler+0xf8>)
 8003c88:	4a27      	ldr	r2, [pc, #156]	; (8003d28 <CAN1_SCE_IRQHandler+0xfc>)
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	6810      	ldr	r0, [r2, #0]
 8003c8e:	2101      	movs	r1, #1
 8003c90:	4798      	blx	r3
 8003c92:	6823      	ldr	r3, [r4, #0]
 8003c94:	68da      	ldr	r2, [r3, #12]
 8003c96:	695b      	ldr	r3, [r3, #20]
 8003c98:	0797      	lsls	r7, r2, #30
 8003c9a:	d007      	beq.n	8003cac <CAN1_SCE_IRQHandler+0x80>
 8003c9c:	079e      	lsls	r6, r3, #30
 8003c9e:	d505      	bpl.n	8003cac <CAN1_SCE_IRQHandler+0x80>
 8003ca0:	4b20      	ldr	r3, [pc, #128]	; (8003d24 <CAN1_SCE_IRQHandler+0xf8>)
 8003ca2:	4a21      	ldr	r2, [pc, #132]	; (8003d28 <CAN1_SCE_IRQHandler+0xfc>)
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	6810      	ldr	r0, [r2, #0]
 8003ca8:	2100      	movs	r1, #0
 8003caa:	4798      	blx	r3
 8003cac:	6823      	ldr	r3, [r4, #0]
 8003cae:	6999      	ldr	r1, [r3, #24]
 8003cb0:	695a      	ldr	r2, [r3, #20]
 8003cb2:	695b      	ldr	r3, [r3, #20]
 8003cb4:	078d      	lsls	r5, r1, #30
 8003cb6:	d509      	bpl.n	8003ccc <CAN1_SCE_IRQHandler+0xa0>
 8003cb8:	0590      	lsls	r0, r2, #22
 8003cba:	d507      	bpl.n	8003ccc <CAN1_SCE_IRQHandler+0xa0>
 8003cbc:	0419      	lsls	r1, r3, #16
 8003cbe:	d505      	bpl.n	8003ccc <CAN1_SCE_IRQHandler+0xa0>
 8003cc0:	4b18      	ldr	r3, [pc, #96]	; (8003d24 <CAN1_SCE_IRQHandler+0xf8>)
 8003cc2:	4a19      	ldr	r2, [pc, #100]	; (8003d28 <CAN1_SCE_IRQHandler+0xfc>)
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	6810      	ldr	r0, [r2, #0]
 8003cc8:	2105      	movs	r1, #5
 8003cca:	4798      	blx	r3
 8003ccc:	6822      	ldr	r2, [r4, #0]
 8003cce:	6996      	ldr	r6, [r2, #24]
 8003cd0:	6955      	ldr	r5, [r2, #20]
 8003cd2:	6952      	ldr	r2, [r2, #20]
 8003cd4:	f016 0604 	ands.w	r6, r6, #4
 8003cd8:	f405 6580 	and.w	r5, r5, #1024	; 0x400
 8003cdc:	d008      	beq.n	8003cf0 <CAN1_SCE_IRQHandler+0xc4>
 8003cde:	b13d      	cbz	r5, 8003cf0 <CAN1_SCE_IRQHandler+0xc4>
 8003ce0:	0412      	lsls	r2, r2, #16
 8003ce2:	d505      	bpl.n	8003cf0 <CAN1_SCE_IRQHandler+0xc4>
 8003ce4:	4b0f      	ldr	r3, [pc, #60]	; (8003d24 <CAN1_SCE_IRQHandler+0xf8>)
 8003ce6:	4a10      	ldr	r2, [pc, #64]	; (8003d28 <CAN1_SCE_IRQHandler+0xfc>)
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	6810      	ldr	r0, [r2, #0]
 8003cec:	2107      	movs	r1, #7
 8003cee:	4798      	blx	r3
 8003cf0:	6823      	ldr	r3, [r4, #0]
 8003cf2:	695b      	ldr	r3, [r3, #20]
 8003cf4:	b156      	cbz	r6, 8003d0c <CAN1_SCE_IRQHandler+0xe0>
 8003cf6:	b14d      	cbz	r5, 8003d0c <CAN1_SCE_IRQHandler+0xe0>
 8003cf8:	041b      	lsls	r3, r3, #16
 8003cfa:	d507      	bpl.n	8003d0c <CAN1_SCE_IRQHandler+0xe0>
 8003cfc:	4b09      	ldr	r3, [pc, #36]	; (8003d24 <CAN1_SCE_IRQHandler+0xf8>)
 8003cfe:	4a0a      	ldr	r2, [pc, #40]	; (8003d28 <CAN1_SCE_IRQHandler+0xfc>)
 8003d00:	681b      	ldr	r3, [r3, #0]
 8003d02:	6810      	ldr	r0, [r2, #0]
 8003d04:	2102      	movs	r1, #2
 8003d06:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003d0a:	4718      	bx	r3
 8003d0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003d10:	40006400 	.word	0x40006400
 8003d14:	2000213c 	.word	0x2000213c
 8003d18:	04000003 	.word	0x04000003
 8003d1c:	08000300 	.word	0x08000300
 8003d20:	10030000 	.word	0x10030000
 8003d24:	20002180 	.word	0x20002180
 8003d28:	2000217c 	.word	0x2000217c

08003d2c <CAN1_TX_IRQHandler>:
 8003d2c:	f7ff bf7e 	b.w	8003c2c <CAN1_SCE_IRQHandler>

08003d30 <CAN1_RX0_IRQHandler>:
 8003d30:	f7ff bf7c 	b.w	8003c2c <CAN1_SCE_IRQHandler>

08003d34 <us_ticker_init>:
 8003d34:	4b05      	ldr	r3, [pc, #20]	; (8003d4c <us_ticker_init+0x18>)
 8003d36:	6818      	ldr	r0, [r3, #0]
 8003d38:	b938      	cbnz	r0, 8003d4a <us_ticker_init+0x16>
 8003d3a:	2201      	movs	r2, #1
 8003d3c:	601a      	str	r2, [r3, #0]
 8003d3e:	4b04      	ldr	r3, [pc, #16]	; (8003d50 <us_ticker_init+0x1c>)
 8003d40:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003d44:	601a      	str	r2, [r3, #0]
 8003d46:	f7ff bcc7 	b.w	80036d8 <HAL_InitTick>
 8003d4a:	4770      	bx	lr
 8003d4c:	20002184 	.word	0x20002184
 8003d50:	20003060 	.word	0x20003060

08003d54 <us_ticker_read>:
 8003d54:	b508      	push	{r3, lr}
 8003d56:	4b04      	ldr	r3, [pc, #16]	; (8003d68 <us_ticker_read+0x14>)
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	b90b      	cbnz	r3, 8003d60 <us_ticker_read+0xc>
 8003d5c:	f7ff ffea 	bl	8003d34 <us_ticker_init>
 8003d60:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003d64:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8003d66:	bd08      	pop	{r3, pc}
 8003d68:	20002184 	.word	0x20002184

08003d6c <us_ticker_set_interrupt>:
 8003d6c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003d70:	4a03      	ldr	r2, [pc, #12]	; (8003d80 <us_ticker_set_interrupt+0x14>)
 8003d72:	6013      	str	r3, [r2, #0]
 8003d74:	6358      	str	r0, [r3, #52]	; 0x34
 8003d76:	68da      	ldr	r2, [r3, #12]
 8003d78:	f042 0202 	orr.w	r2, r2, #2
 8003d7c:	60da      	str	r2, [r3, #12]
 8003d7e:	4770      	bx	lr
 8003d80:	20003060 	.word	0x20003060

08003d84 <us_ticker_disable_interrupt>:
 8003d84:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003d88:	4a03      	ldr	r2, [pc, #12]	; (8003d98 <us_ticker_disable_interrupt+0x14>)
 8003d8a:	6013      	str	r3, [r2, #0]
 8003d8c:	68da      	ldr	r2, [r3, #12]
 8003d8e:	f022 0202 	bic.w	r2, r2, #2
 8003d92:	60da      	str	r2, [r3, #12]
 8003d94:	4770      	bx	lr
 8003d96:	bf00      	nop
 8003d98:	20003060 	.word	0x20003060

08003d9c <us_ticker_clear_interrupt>:
 8003d9c:	4a03      	ldr	r2, [pc, #12]	; (8003dac <us_ticker_clear_interrupt+0x10>)
 8003d9e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003da2:	6013      	str	r3, [r2, #0]
 8003da4:	f06f 0202 	mvn.w	r2, #2
 8003da8:	611a      	str	r2, [r3, #16]
 8003daa:	4770      	bx	lr
 8003dac:	20003060 	.word	0x20003060

08003db0 <pwmout_write>:
 8003db0:	b530      	push	{r4, r5, lr}
 8003db2:	ee07 1a10 	vmov	s14, r1
 8003db6:	4b28      	ldr	r3, [pc, #160]	; (8003e58 <pwmout_write+0xa8>)
 8003db8:	6802      	ldr	r2, [r0, #0]
 8003dba:	601a      	str	r2, [r3, #0]
 8003dbc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8003dc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003dc4:	b089      	sub	sp, #36	; 0x24
 8003dc6:	4605      	mov	r5, r0
 8003dc8:	d428      	bmi.n	8003e1c <pwmout_write+0x6c>
 8003dca:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8003dce:	eeb4 7a67 	vcmp.f32	s14, s15
 8003dd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003dd6:	bfc8      	it	gt
 8003dd8:	eeb0 7a67 	vmovgt.f32	s14, s15
 8003ddc:	edd5 7a03 	vldr	s15, [r5, #12]
 8003de0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003de4:	2260      	movs	r2, #96	; 0x60
 8003de6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003dea:	9201      	str	r2, [sp, #4]
 8003dec:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003df0:	68aa      	ldr	r2, [r5, #8]
 8003df2:	edc5 7a04 	vstr	s15, [r5, #16]
 8003df6:	ee17 3a90 	vmov	r3, s15
 8003dfa:	fbb3 f3f2 	udiv	r3, r3, r2
 8003dfe:	9302      	str	r3, [sp, #8]
 8003e00:	2300      	movs	r3, #0
 8003e02:	9303      	str	r3, [sp, #12]
 8003e04:	9305      	str	r3, [sp, #20]
 8003e06:	9306      	str	r3, [sp, #24]
 8003e08:	9304      	str	r3, [sp, #16]
 8003e0a:	9307      	str	r3, [sp, #28]
 8003e0c:	7d2b      	ldrb	r3, [r5, #20]
 8003e0e:	3b01      	subs	r3, #1
 8003e10:	2b03      	cmp	r3, #3
 8003e12:	d816      	bhi.n	8003e42 <pwmout_write+0x92>
 8003e14:	e8df f003 	tbb	[pc, r3]
 8003e18:	1917051b 	.word	0x1917051b
 8003e1c:	ed9f 7a0f 	vldr	s14, [pc, #60]	; 8003e5c <pwmout_write+0xac>
 8003e20:	e7dc      	b.n	8003ddc <pwmout_write+0x2c>
 8003e22:	2404      	movs	r4, #4
 8003e24:	4622      	mov	r2, r4
 8003e26:	a901      	add	r1, sp, #4
 8003e28:	480b      	ldr	r0, [pc, #44]	; (8003e58 <pwmout_write+0xa8>)
 8003e2a:	f000 fea9 	bl	8004b80 <HAL_TIM_PWM_ConfigChannel>
 8003e2e:	b110      	cbz	r0, 8003e36 <pwmout_write+0x86>
 8003e30:	480b      	ldr	r0, [pc, #44]	; (8003e60 <pwmout_write+0xb0>)
 8003e32:	f7fd ff39 	bl	8001ca8 <error>
 8003e36:	7d6b      	ldrb	r3, [r5, #21]
 8003e38:	4807      	ldr	r0, [pc, #28]	; (8003e58 <pwmout_write+0xa8>)
 8003e3a:	4621      	mov	r1, r4
 8003e3c:	b14b      	cbz	r3, 8003e52 <pwmout_write+0xa2>
 8003e3e:	f000 ff5e 	bl	8004cfe <HAL_TIMEx_PWMN_Start>
 8003e42:	b009      	add	sp, #36	; 0x24
 8003e44:	bd30      	pop	{r4, r5, pc}
 8003e46:	2408      	movs	r4, #8
 8003e48:	e7ec      	b.n	8003e24 <pwmout_write+0x74>
 8003e4a:	240c      	movs	r4, #12
 8003e4c:	e7ea      	b.n	8003e24 <pwmout_write+0x74>
 8003e4e:	2400      	movs	r4, #0
 8003e50:	e7e8      	b.n	8003e24 <pwmout_write+0x74>
 8003e52:	f000 ff27 	bl	8004ca4 <HAL_TIM_PWM_Start>
 8003e56:	e7f4      	b.n	8003e42 <pwmout_write+0x92>
 8003e58:	20002188 	.word	0x20002188
 8003e5c:	00000000 	.word	0x00000000
 8003e60:	08008515 	.word	0x08008515

08003e64 <pwmout_read>:
 8003e64:	68c3      	ldr	r3, [r0, #12]
 8003e66:	b1ab      	cbz	r3, 8003e94 <pwmout_read+0x30>
 8003e68:	ee07 3a90 	vmov	s15, r3
 8003e6c:	edd0 6a04 	vldr	s13, [r0, #16]
 8003e70:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8003e74:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8003e78:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003e7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8003e80:	eef4 7a47 	vcmp.f32	s15, s14
 8003e84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003e88:	bfc8      	it	gt
 8003e8a:	eef0 7a47 	vmovgt.f32	s15, s14
 8003e8e:	ee17 0a90 	vmov	r0, s15
 8003e92:	4770      	bx	lr
 8003e94:	eddf 7a01 	vldr	s15, [pc, #4]	; 8003e9c <pwmout_read+0x38>
 8003e98:	e7f9      	b.n	8003e8e <pwmout_read+0x2a>
 8003e9a:	bf00      	nop
 8003e9c:	00000000 	.word	0x00000000

08003ea0 <pwmout_period_us>:
 8003ea0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8003ea4:	4c4a      	ldr	r4, [pc, #296]	; (8003fd0 <pwmout_period_us+0x130>)
 8003ea6:	6802      	ldr	r2, [r0, #0]
 8003ea8:	6022      	str	r2, [r4, #0]
 8003eaa:	b086      	sub	sp, #24
 8003eac:	2300      	movs	r3, #0
 8003eae:	460e      	mov	r6, r1
 8003eb0:	9300      	str	r3, [sp, #0]
 8003eb2:	4605      	mov	r5, r0
 8003eb4:	f7ff ffd6 	bl	8003e64 <pwmout_read>
 8003eb8:	6a11      	ldr	r1, [r2, #32]
 8003eba:	f241 1311 	movw	r3, #4369	; 0x1111
 8003ebe:	4219      	tst	r1, r3
 8003ec0:	4607      	mov	r7, r0
 8003ec2:	d108      	bne.n	8003ed6 <pwmout_period_us+0x36>
 8003ec4:	6a11      	ldr	r1, [r2, #32]
 8003ec6:	f240 4344 	movw	r3, #1092	; 0x444
 8003eca:	4219      	tst	r1, r3
 8003ecc:	bf02      	ittt	eq
 8003ece:	6813      	ldreq	r3, [r2, #0]
 8003ed0:	f023 0301 	biceq.w	r3, r3, #1
 8003ed4:	6013      	streq	r3, [r2, #0]
 8003ed6:	4669      	mov	r1, sp
 8003ed8:	a801      	add	r0, sp, #4
 8003eda:	f001 fd89 	bl	80059f0 <HAL_RCC_GetClockConfig>
 8003ede:	483d      	ldr	r0, [pc, #244]	; (8003fd4 <pwmout_period_us+0x134>)
 8003ee0:	6829      	ldr	r1, [r5, #0]
 8003ee2:	2300      	movs	r3, #0
 8003ee4:	4680      	mov	r8, r0
 8003ee6:	fa5f f983 	uxtb.w	r9, r3
 8003eea:	3301      	adds	r3, #1
 8003eec:	f850 2039 	ldr.w	r2, [r0, r9, lsl #3]
 8003ef0:	428a      	cmp	r2, r1
 8003ef2:	d1f8      	bne.n	8003ee6 <pwmout_period_us+0x46>
 8003ef4:	b911      	cbnz	r1, 8003efc <pwmout_period_us+0x5c>
 8003ef6:	4838      	ldr	r0, [pc, #224]	; (8003fd8 <pwmout_period_us+0x138>)
 8003ef8:	f7fd fed6 	bl	8001ca8 <error>
 8003efc:	eb08 08c9 	add.w	r8, r8, r9, lsl #3
 8003f00:	f898 3004 	ldrb.w	r3, [r8, #4]
 8003f04:	bb53      	cbnz	r3, 8003f5c <pwmout_period_us+0xbc>
 8003f06:	f001 fd43 	bl	8005990 <HAL_RCC_GetPCLK1Freq>
 8003f0a:	9000      	str	r0, [sp, #0]
 8003f0c:	9804      	ldr	r0, [sp, #16]
 8003f0e:	9900      	ldr	r1, [sp, #0]
 8003f10:	2301      	movs	r3, #1
 8003f12:	60ab      	str	r3, [r5, #8]
 8003f14:	4b31      	ldr	r3, [pc, #196]	; (8003fdc <pwmout_period_us+0x13c>)
 8003f16:	bb30      	cbnz	r0, 8003f66 <pwmout_period_us+0xc6>
 8003f18:	fbb1 f3f3 	udiv	r3, r1, r3
 8003f1c:	3b01      	subs	r3, #1
 8003f1e:	6063      	str	r3, [r4, #4]
 8003f20:	f106 3cff 	add.w	r12, r6, #4294967295	; 0xffffffff
 8003f24:	4b2d      	ldr	r3, [pc, #180]	; (8003fdc <pwmout_period_us+0x13c>)
 8003f26:	6862      	ldr	r2, [r4, #4]
 8003f28:	fbb1 fef3 	udiv	lr, r1, r3
 8003f2c:	ea4f 0841 	mov.w	r8, r1, lsl #1
 8003f30:	2100      	movs	r1, #0
 8003f32:	fbb8 f8f3 	udiv	r8, r8, r3
 8003f36:	f8c4 c00c 	str.w	r12, [r4, #12]
 8003f3a:	4663      	mov	r3, r12
 8003f3c:	468a      	mov	r10, r1
 8003f3e:	f64f 79fe 	movw	r9, #65534	; 0xfffe
 8003f42:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003f46:	d212      	bcs.n	8003f6e <pwmout_period_us+0xce>
 8003f48:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003f4c:	d20f      	bcs.n	8003f6e <pwmout_period_us+0xce>
 8003f4e:	f1ba 0f00 	cmp.w	r10, #0
 8003f52:	d000      	beq.n	8003f56 <pwmout_period_us+0xb6>
 8003f54:	6062      	str	r2, [r4, #4]
 8003f56:	b1f1      	cbz	r1, 8003f96 <pwmout_period_us+0xf6>
 8003f58:	60e3      	str	r3, [r4, #12]
 8003f5a:	e01c      	b.n	8003f96 <pwmout_period_us+0xf6>
 8003f5c:	f001 fd30 	bl	80059c0 <HAL_RCC_GetPCLK2Freq>
 8003f60:	9000      	str	r0, [sp, #0]
 8003f62:	9805      	ldr	r0, [sp, #20]
 8003f64:	e7d3      	b.n	8003f0e <pwmout_period_us+0x6e>
 8003f66:	004a      	lsls	r2, r1, #1
 8003f68:	fbb2 f3f3 	udiv	r3, r2, r3
 8003f6c:	e7d6      	b.n	8003f1c <pwmout_period_us+0x7c>
 8003f6e:	68ab      	ldr	r3, [r5, #8]
 8003f70:	005b      	lsls	r3, r3, #1
 8003f72:	60ab      	str	r3, [r5, #8]
 8003f74:	bb30      	cbnz	r0, 8003fc4 <pwmout_period_us+0x124>
 8003f76:	fb0e f203 	mul.w	r2, lr, r3
 8003f7a:	fbbc f3f3 	udiv	r3, r12, r3
 8003f7e:	454b      	cmp	r3, r9
 8003f80:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8003f84:	d821      	bhi.n	8003fca <pwmout_period_us+0x12a>
 8003f86:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003f8a:	d31e      	bcc.n	8003fca <pwmout_period_us+0x12a>
 8003f8c:	4814      	ldr	r0, [pc, #80]	; (8003fe0 <pwmout_period_us+0x140>)
 8003f8e:	6062      	str	r2, [r4, #4]
 8003f90:	60e3      	str	r3, [r4, #12]
 8003f92:	f7fd fe89 	bl	8001ca8 <error>
 8003f96:	2300      	movs	r3, #0
 8003f98:	480d      	ldr	r0, [pc, #52]	; (8003fd0 <pwmout_period_us+0x130>)
 8003f9a:	6123      	str	r3, [r4, #16]
 8003f9c:	60a3      	str	r3, [r4, #8]
 8003f9e:	f000 fd9d 	bl	8004adc <HAL_TIM_PWM_Init>
 8003fa2:	b110      	cbz	r0, 8003faa <pwmout_period_us+0x10a>
 8003fa4:	480e      	ldr	r0, [pc, #56]	; (8003fe0 <pwmout_period_us+0x140>)
 8003fa6:	f7fd fe7f 	bl	8001ca8 <error>
 8003faa:	60ee      	str	r6, [r5, #12]
 8003fac:	4639      	mov	r1, r7
 8003fae:	4628      	mov	r0, r5
 8003fb0:	f7ff fefe 	bl	8003db0 <pwmout_write>
 8003fb4:	6822      	ldr	r2, [r4, #0]
 8003fb6:	6813      	ldr	r3, [r2, #0]
 8003fb8:	f043 0301 	orr.w	r3, r3, #1
 8003fbc:	6013      	str	r3, [r2, #0]
 8003fbe:	b006      	add	sp, #24
 8003fc0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003fc4:	fb08 f203 	mul.w	r2, r8, r3
 8003fc8:	e7d7      	b.n	8003f7a <pwmout_period_us+0xda>
 8003fca:	2101      	movs	r1, #1
 8003fcc:	468a      	mov	r10, r1
 8003fce:	e7b8      	b.n	8003f42 <pwmout_period_us+0xa2>
 8003fd0:	20002188 	.word	0x20002188
 8003fd4:	0800856c 	.word	0x0800856c
 8003fd8:	08008500 	.word	0x08008500
 8003fdc:	000f4240 	.word	0x000f4240
 8003fe0:	08008515 	.word	0x08008515

08003fe4 <pwmout_init>:
 8003fe4:	b530      	push	{r4, r5, lr}
 8003fe6:	460d      	mov	r5, r1
 8003fe8:	4604      	mov	r4, r0
 8003fea:	b085      	sub	sp, #20
 8003fec:	492c      	ldr	r1, [pc, #176]	; (80040a0 <pwmout_init+0xbc>)
 8003fee:	4628      	mov	r0, r5
 8003ff0:	f7fd fdfe 	bl	8001bf0 <pinmap_peripheral>
 8003ff4:	492a      	ldr	r1, [pc, #168]	; (80040a0 <pwmout_init+0xbc>)
 8003ff6:	6020      	str	r0, [r4, #0]
 8003ff8:	4628      	mov	r0, r5
 8003ffa:	f7fd fe15 	bl	8001c28 <pinmap_function>
 8003ffe:	f3c0 3304 	ubfx	r3, r0, #12, #5
 8004002:	7523      	strb	r3, [r4, #20]
 8004004:	4a27      	ldr	r2, [pc, #156]	; (80040a4 <pwmout_init+0xc0>)
 8004006:	6823      	ldr	r3, [r4, #0]
 8004008:	f3c0 4040 	ubfx	r0, r0, #17, #1
 800400c:	4293      	cmp	r3, r2
 800400e:	7560      	strb	r0, [r4, #21]
 8004010:	d11a      	bne.n	8004048 <pwmout_init+0x64>
 8004012:	4b25      	ldr	r3, [pc, #148]	; (80040a8 <pwmout_init+0xc4>)
 8004014:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8004016:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800401a:	661a      	str	r2, [r3, #96]	; 0x60
 800401c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800401e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004022:	9300      	str	r3, [sp, #0]
 8004024:	9b00      	ldr	r3, [sp, #0]
 8004026:	491e      	ldr	r1, [pc, #120]	; (80040a0 <pwmout_init+0xbc>)
 8004028:	4628      	mov	r0, r5
 800402a:	f7fd fda5 	bl	8001b78 <pinmap_pinout>
 800402e:	2300      	movs	r3, #0
 8004030:	60e3      	str	r3, [r4, #12]
 8004032:	6123      	str	r3, [r4, #16]
 8004034:	2301      	movs	r3, #1
 8004036:	80a5      	strh	r5, [r4, #4]
 8004038:	60a3      	str	r3, [r4, #8]
 800403a:	f644 6120 	movw	r1, #20000	; 0x4e20
 800403e:	4620      	mov	r0, r4
 8004040:	f7ff ff2e 	bl	8003ea0 <pwmout_period_us>
 8004044:	b005      	add	sp, #20
 8004046:	bd30      	pop	{r4, r5, pc}
 8004048:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800404c:	d10b      	bne.n	8004066 <pwmout_init+0x82>
 800404e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8004052:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8004054:	f042 0201 	orr.w	r2, r2, #1
 8004058:	659a      	str	r2, [r3, #88]	; 0x58
 800405a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800405c:	f003 0301 	and.w	r3, r3, #1
 8004060:	9301      	str	r3, [sp, #4]
 8004062:	9b01      	ldr	r3, [sp, #4]
 8004064:	e7df      	b.n	8004026 <pwmout_init+0x42>
 8004066:	4a11      	ldr	r2, [pc, #68]	; (80040ac <pwmout_init+0xc8>)
 8004068:	4293      	cmp	r3, r2
 800406a:	d10a      	bne.n	8004082 <pwmout_init+0x9e>
 800406c:	4b0e      	ldr	r3, [pc, #56]	; (80040a8 <pwmout_init+0xc4>)
 800406e:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8004070:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8004074:	661a      	str	r2, [r3, #96]	; 0x60
 8004076:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004078:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800407c:	9302      	str	r3, [sp, #8]
 800407e:	9b02      	ldr	r3, [sp, #8]
 8004080:	e7d1      	b.n	8004026 <pwmout_init+0x42>
 8004082:	4a0b      	ldr	r2, [pc, #44]	; (80040b0 <pwmout_init+0xcc>)
 8004084:	4293      	cmp	r3, r2
 8004086:	d1ce      	bne.n	8004026 <pwmout_init+0x42>
 8004088:	4b07      	ldr	r3, [pc, #28]	; (80040a8 <pwmout_init+0xc4>)
 800408a:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800408c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8004090:	661a      	str	r2, [r3, #96]	; 0x60
 8004092:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004094:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004098:	9303      	str	r3, [sp, #12]
 800409a:	9b03      	ldr	r3, [sp, #12]
 800409c:	e7c3      	b.n	8004026 <pwmout_init+0x42>
 800409e:	bf00      	nop
 80040a0:	080086b4 	.word	0x080086b4
 80040a4:	40012c00 	.word	0x40012c00
 80040a8:	40021000 	.word	0x40021000
 80040ac:	40014000 	.word	0x40014000
 80040b0:	40014400 	.word	0x40014400

080040b4 <pwmout_pulsewidth_us>:
 80040b4:	ee07 1a90 	vmov	s15, r1
 80040b8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80040bc:	edd0 7a03 	vldr	s15, [r0, #12]
 80040c0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80040c4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80040c8:	ee16 1a90 	vmov	r1, s13
 80040cc:	f7ff be70 	b.w	8003db0 <pwmout_write>

080040d0 <pwmout_pulsewidth_ms>:
 80040d0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80040d4:	4359      	muls	r1, r3
 80040d6:	f7ff bfed 	b.w	80040b4 <pwmout_pulsewidth_us>

080040da <LL_GPIO_SetPinPull>:
 80040da:	b530      	push	{r4, r5, lr}
 80040dc:	68c3      	ldr	r3, [r0, #12]
 80040de:	fa91 f4a1 	rbit	r4, r1
 80040e2:	fab4 f484 	clz	r4, r4
 80040e6:	fa91 f1a1 	rbit	r1, r1
 80040ea:	2503      	movs	r5, #3
 80040ec:	fab1 f181 	clz	r1, r1
 80040f0:	0064      	lsls	r4, r4, #1
 80040f2:	fa05 f404 	lsl.w	r4, r5, r4
 80040f6:	0049      	lsls	r1, r1, #1
 80040f8:	ea23 0304 	bic.w	r3, r3, r4
 80040fc:	fa02 f101 	lsl.w	r1, r2, r1
 8004100:	4319      	orrs	r1, r3
 8004102:	60c1      	str	r1, [r0, #12]
 8004104:	bd30      	pop	{r4, r5, pc}

08004106 <stm_pin_PullConfig>:
 8004106:	2a01      	cmp	r2, #1
 8004108:	d002      	beq.n	8004110 <stm_pin_PullConfig+0xa>
 800410a:	2a02      	cmp	r2, #2
 800410c:	bf18      	it	ne
 800410e:	2200      	movne	r2, #0
 8004110:	f7ff bfe3 	b.w	80040da <LL_GPIO_SetPinPull>

08004114 <pin_function>:
 8004114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004118:	4b3f      	ldr	r3, [pc, #252]	; (8004218 <pin_function+0x104>)
 800411a:	f000 080f 	and.w	r8, r0, #15
 800411e:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8004122:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8004126:	460e      	mov	r6, r1
 8004128:	f001 0507 	and.w	r5, r1, #7
 800412c:	f7ff fcce 	bl	8003acc <Set_GPIO_Clock>
 8004130:	6883      	ldr	r3, [r0, #8]
 8004132:	fa94 f1a4 	rbit	r1, r4
 8004136:	fab1 f181 	clz	r1, r1
 800413a:	fa94 f2a4 	rbit	r2, r4
 800413e:	2703      	movs	r7, #3
 8004140:	0049      	lsls	r1, r1, #1
 8004142:	fa07 f101 	lsl.w	r1, r7, r1
 8004146:	fab2 f282 	clz	r2, r2
 800414a:	ea23 0301 	bic.w	r3, r3, r1
 800414e:	0052      	lsls	r2, r2, #1
 8004150:	2102      	movs	r1, #2
 8004152:	fa01 f202 	lsl.w	r2, r1, r2
 8004156:	4313      	orrs	r3, r2
 8004158:	428d      	cmp	r5, r1
 800415a:	6083      	str	r3, [r0, #8]
 800415c:	d028      	beq.n	80041b0 <pin_function+0x9c>
 800415e:	42bd      	cmp	r5, r7
 8004160:	d041      	beq.n	80041e6 <pin_function+0xd2>
 8004162:	2d01      	cmp	r5, #1
 8004164:	d03f      	beq.n	80041e6 <pin_function+0xd2>
 8004166:	2300      	movs	r3, #0
 8004168:	6802      	ldr	r2, [r0, #0]
 800416a:	fa94 f7a4 	rbit	r7, r4
 800416e:	fab7 f787 	clz	r7, r7
 8004172:	fa94 f1a4 	rbit	r1, r4
 8004176:	f04f 0e03 	mov.w	lr, #3
 800417a:	fab1 f181 	clz	r1, r1
 800417e:	007f      	lsls	r7, r7, #1
 8004180:	fa0e f707 	lsl.w	r7, lr, r7
 8004184:	0049      	lsls	r1, r1, #1
 8004186:	ea22 0207 	bic.w	r2, r2, r7
 800418a:	408b      	lsls	r3, r1
 800418c:	3d01      	subs	r5, #1
 800418e:	4313      	orrs	r3, r2
 8004190:	2d01      	cmp	r5, #1
 8004192:	6003      	str	r3, [r0, #0]
 8004194:	d805      	bhi.n	80041a2 <pin_function+0x8e>
 8004196:	6843      	ldr	r3, [r0, #4]
 8004198:	0732      	lsls	r2, r6, #28
 800419a:	bf4c      	ite	mi
 800419c:	4323      	orrmi	r3, r4
 800419e:	43a3      	bicpl	r3, r4
 80041a0:	6043      	str	r3, [r0, #4]
 80041a2:	f3c6 1201 	ubfx	r2, r6, #4, #2
 80041a6:	4621      	mov	r1, r4
 80041a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80041ac:	f7ff bfab 	b.w	8004106 <stm_pin_PullConfig>
 80041b0:	f1b8 0f07 	cmp.w	r8, #7
 80041b4:	f3c6 2703 	ubfx	r7, r6, #8, #4
 80041b8:	d917      	bls.n	80041ea <pin_function+0xd6>
 80041ba:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80041bc:	0a23      	lsrs	r3, r4, #8
 80041be:	fa93 f1a3 	rbit	r1, r3
 80041c2:	fab1 f181 	clz	r1, r1
 80041c6:	fa93 f3a3 	rbit	r3, r3
 80041ca:	f04f 0e0f 	mov.w	lr, #15
 80041ce:	fab3 f383 	clz	r3, r3
 80041d2:	0089      	lsls	r1, r1, #2
 80041d4:	fa0e f101 	lsl.w	r1, lr, r1
 80041d8:	009b      	lsls	r3, r3, #2
 80041da:	ea22 0201 	bic.w	r2, r2, r1
 80041de:	fa07 f303 	lsl.w	r3, r7, r3
 80041e2:	4313      	orrs	r3, r2
 80041e4:	6243      	str	r3, [r0, #36]	; 0x24
 80041e6:	462b      	mov	r3, r5
 80041e8:	e7be      	b.n	8004168 <pin_function+0x54>
 80041ea:	6a02      	ldr	r2, [r0, #32]
 80041ec:	fa94 f3a4 	rbit	r3, r4
 80041f0:	fab3 f383 	clz	r3, r3
 80041f4:	fa94 f1a4 	rbit	r1, r4
 80041f8:	f04f 0e0f 	mov.w	lr, #15
 80041fc:	fab1 f181 	clz	r1, r1
 8004200:	009b      	lsls	r3, r3, #2
 8004202:	fa0e f303 	lsl.w	r3, lr, r3
 8004206:	0089      	lsls	r1, r1, #2
 8004208:	ea22 0203 	bic.w	r2, r2, r3
 800420c:	fa07 f301 	lsl.w	r3, r7, r1
 8004210:	4313      	orrs	r3, r2
 8004212:	6203      	str	r3, [r0, #32]
 8004214:	e7e7      	b.n	80041e6 <pin_function+0xd2>
 8004216:	bf00      	nop
 8004218:	0800852c 	.word	0x0800852c

0800421c <pin_mode>:
 800421c:	f000 020f 	and.w	r2, r0, #15
 8004220:	4b1c      	ldr	r3, [pc, #112]	; (8004294 <pin_mode+0x78>)
 8004222:	b570      	push	{r4, r5, r6, lr}
 8004224:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8004228:	460d      	mov	r5, r1
 800422a:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 800422e:	f7ff fc4d 	bl	8003acc <Set_GPIO_Clock>
 8004232:	6806      	ldr	r6, [r0, #0]
 8004234:	fa94 f1a4 	rbit	r1, r4
 8004238:	fab1 f381 	clz	r3, r1
 800423c:	fa94 f2a4 	rbit	r2, r4
 8004240:	0059      	lsls	r1, r3, #1
 8004242:	2303      	movs	r3, #3
 8004244:	fab2 f282 	clz	r2, r2
 8004248:	408b      	lsls	r3, r1
 800424a:	4033      	ands	r3, r6
 800424c:	0052      	lsls	r2, r2, #1
 800424e:	40d3      	lsrs	r3, r2
 8004250:	3b01      	subs	r3, #1
 8004252:	2b01      	cmp	r3, #1
 8004254:	d805      	bhi.n	8004262 <pin_mode+0x46>
 8004256:	1eeb      	subs	r3, r5, #3
 8004258:	2b02      	cmp	r3, #2
 800425a:	6843      	ldr	r3, [r0, #4]
 800425c:	d809      	bhi.n	8004272 <pin_mode+0x56>
 800425e:	4323      	orrs	r3, r4
 8004260:	6043      	str	r3, [r0, #4]
 8004262:	2d03      	cmp	r5, #3
 8004264:	d108      	bne.n	8004278 <pin_mode+0x5c>
 8004266:	2201      	movs	r2, #1
 8004268:	4621      	mov	r1, r4
 800426a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800426e:	f7ff bf4a 	b.w	8004106 <stm_pin_PullConfig>
 8004272:	ea23 0304 	bic.w	r3, r3, r4
 8004276:	6043      	str	r3, [r0, #4]
 8004278:	2d01      	cmp	r5, #1
 800427a:	d0f4      	beq.n	8004266 <pin_mode+0x4a>
 800427c:	2d05      	cmp	r5, #5
 800427e:	d001      	beq.n	8004284 <pin_mode+0x68>
 8004280:	2d02      	cmp	r5, #2
 8004282:	d101      	bne.n	8004288 <pin_mode+0x6c>
 8004284:	2202      	movs	r2, #2
 8004286:	e7ef      	b.n	8004268 <pin_mode+0x4c>
 8004288:	4621      	mov	r1, r4
 800428a:	2200      	movs	r2, #0
 800428c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004290:	f7ff bf23 	b.w	80040da <LL_GPIO_SetPinPull>
 8004294:	0800852c 	.word	0x0800852c

08004298 <init_uart>:
 8004298:	6843      	ldr	r3, [r0, #4]
 800429a:	4918      	ldr	r1, [pc, #96]	; (80042fc <init_uart+0x64>)
 800429c:	2270      	movs	r2, #112	; 0x70
 800429e:	435a      	muls	r2, r3
 80042a0:	b510      	push	{r4, lr}
 80042a2:	188b      	adds	r3, r1, r2
 80042a4:	6804      	ldr	r4, [r0, #0]
 80042a6:	508c      	str	r4, [r1, r2]
 80042a8:	6882      	ldr	r2, [r0, #8]
 80042aa:	605a      	str	r2, [r3, #4]
 80042ac:	68c2      	ldr	r2, [r0, #12]
 80042ae:	609a      	str	r2, [r3, #8]
 80042b0:	6902      	ldr	r2, [r0, #16]
 80042b2:	60da      	str	r2, [r3, #12]
 80042b4:	6942      	ldr	r2, [r0, #20]
 80042b6:	611a      	str	r2, [r3, #16]
 80042b8:	69c2      	ldr	r2, [r0, #28]
 80042ba:	619a      	str	r2, [r3, #24]
 80042bc:	2200      	movs	r2, #0
 80042be:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 80042c2:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 80042c6:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 80042ca:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 80042ce:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 80042d2:	3201      	adds	r2, #1
 80042d4:	d10a      	bne.n	80042ec <init_uart+0x54>
 80042d6:	2208      	movs	r2, #8
 80042d8:	615a      	str	r2, [r3, #20]
 80042da:	4618      	mov	r0, r3
 80042dc:	f000 fef7 	bl	80050ce <HAL_UART_Init>
 80042e0:	b158      	cbz	r0, 80042fa <init_uart+0x62>
 80042e2:	4807      	ldr	r0, [pc, #28]	; (8004300 <init_uart+0x68>)
 80042e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80042e8:	f7fd bcde 	b.w	8001ca8 <error>
 80042ec:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 80042f0:	3201      	adds	r2, #1
 80042f2:	bf0c      	ite	eq
 80042f4:	2204      	moveq	r2, #4
 80042f6:	220c      	movne	r2, #12
 80042f8:	e7ee      	b.n	80042d8 <init_uart+0x40>
 80042fa:	bd10      	pop	{r4, pc}
 80042fc:	200021e4 	.word	0x200021e4
 8004300:	08008594 	.word	0x08008594

08004304 <uart_irq>:
 8004304:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004306:	4f1b      	ldr	r7, [pc, #108]	; (8004374 <uart_irq+0x70>)
 8004308:	4606      	mov	r6, r0
 800430a:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 800430e:	2800      	cmp	r0, #0
 8004310:	d02e      	beq.n	8004370 <uart_irq+0x6c>
 8004312:	2570      	movs	r5, #112	; 0x70
 8004314:	4c18      	ldr	r4, [pc, #96]	; (8004378 <uart_irq+0x74>)
 8004316:	4375      	muls	r5, r6
 8004318:	5963      	ldr	r3, [r4, r5]
 800431a:	69da      	ldr	r2, [r3, #28]
 800431c:	0652      	lsls	r2, r2, #25
 800431e:	d509      	bpl.n	8004334 <uart_irq+0x30>
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	0659      	lsls	r1, r3, #25
 8004324:	d506      	bpl.n	8004334 <uart_irq+0x30>
 8004326:	4b15      	ldr	r3, [pc, #84]	; (800437c <uart_irq+0x78>)
 8004328:	2101      	movs	r1, #1
 800432a:	681b      	ldr	r3, [r3, #0]
 800432c:	4798      	blx	r3
 800432e:	5963      	ldr	r3, [r4, r5]
 8004330:	2240      	movs	r2, #64	; 0x40
 8004332:	621a      	str	r2, [r3, #32]
 8004334:	2570      	movs	r5, #112	; 0x70
 8004336:	4375      	muls	r5, r6
 8004338:	5963      	ldr	r3, [r4, r5]
 800433a:	69da      	ldr	r2, [r3, #28]
 800433c:	0692      	lsls	r2, r2, #26
 800433e:	d50b      	bpl.n	8004358 <uart_irq+0x54>
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	0698      	lsls	r0, r3, #26
 8004344:	d508      	bpl.n	8004358 <uart_irq+0x54>
 8004346:	4b0d      	ldr	r3, [pc, #52]	; (800437c <uart_irq+0x78>)
 8004348:	f857 0026 	ldr.w	r0, [r7, r6, lsl #2]
 800434c:	681b      	ldr	r3, [r3, #0]
 800434e:	2100      	movs	r1, #0
 8004350:	4798      	blx	r3
 8004352:	5963      	ldr	r3, [r4, r5]
 8004354:	2220      	movs	r2, #32
 8004356:	621a      	str	r2, [r3, #32]
 8004358:	2070      	movs	r0, #112	; 0x70
 800435a:	4370      	muls	r0, r6
 800435c:	5823      	ldr	r3, [r4, r0]
 800435e:	69da      	ldr	r2, [r3, #28]
 8004360:	0711      	lsls	r1, r2, #28
 8004362:	d505      	bpl.n	8004370 <uart_irq+0x6c>
 8004364:	689a      	ldr	r2, [r3, #8]
 8004366:	07d2      	lsls	r2, r2, #31
 8004368:	bf42      	ittt	mi
 800436a:	8c9b      	ldrhmi	r3, [r3, #36]	; 0x24
 800436c:	b29b      	uxthmi	r3, r3
 800436e:	9301      	strmi	r3, [sp, #4]
 8004370:	b003      	add	sp, #12
 8004372:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004374:	200021c8 	.word	0x200021c8
 8004378:	200021e4 	.word	0x200021e4
 800437c:	200021c4 	.word	0x200021c4

08004380 <uart1_irq>:
 8004380:	2000      	movs	r0, #0
 8004382:	f7ff bfbf 	b.w	8004304 <uart_irq>

08004386 <uart2_irq>:
 8004386:	2001      	movs	r0, #1
 8004388:	f7ff bfbc 	b.w	8004304 <uart_irq>

0800438c <lpuart1_irq>:
 800438c:	2005      	movs	r0, #5
 800438e:	f7ff bfb9 	b.w	8004304 <uart_irq>
	...

08004394 <serial_init>:
 8004394:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004396:	460e      	mov	r6, r1
 8004398:	b085      	sub	sp, #20
 800439a:	4604      	mov	r4, r0
 800439c:	4946      	ldr	r1, [pc, #280]	; (80044b8 <serial_init+0x124>)
 800439e:	4630      	mov	r0, r6
 80043a0:	4615      	mov	r5, r2
 80043a2:	f7fd fc25 	bl	8001bf0 <pinmap_peripheral>
 80043a6:	4945      	ldr	r1, [pc, #276]	; (80044bc <serial_init+0x128>)
 80043a8:	4607      	mov	r7, r0
 80043aa:	4628      	mov	r0, r5
 80043ac:	f7fd fc20 	bl	8001bf0 <pinmap_peripheral>
 80043b0:	4601      	mov	r1, r0
 80043b2:	4638      	mov	r0, r7
 80043b4:	f7fd fbfe 	bl	8001bb4 <pinmap_merge>
 80043b8:	4b41      	ldr	r3, [pc, #260]	; (80044c0 <serial_init+0x12c>)
 80043ba:	6020      	str	r0, [r4, #0]
 80043bc:	4298      	cmp	r0, r3
 80043be:	d14b      	bne.n	8004458 <serial_init+0xc4>
 80043c0:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 80043c4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80043c6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80043ca:	641a      	str	r2, [r3, #64]	; 0x40
 80043cc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80043ce:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80043d2:	641a      	str	r2, [r3, #64]	; 0x40
 80043d4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80043d6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80043da:	661a      	str	r2, [r3, #96]	; 0x60
 80043dc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80043de:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80043e2:	9301      	str	r3, [sp, #4]
 80043e4:	9b01      	ldr	r3, [sp, #4]
 80043e6:	2300      	movs	r3, #0
 80043e8:	6063      	str	r3, [r4, #4]
 80043ea:	4933      	ldr	r1, [pc, #204]	; (80044b8 <serial_init+0x124>)
 80043ec:	4630      	mov	r0, r6
 80043ee:	f7fd fbc3 	bl	8001b78 <pinmap_pinout>
 80043f2:	4932      	ldr	r1, [pc, #200]	; (80044bc <serial_init+0x128>)
 80043f4:	4628      	mov	r0, r5
 80043f6:	f7fd fbbf 	bl	8001b78 <pinmap_pinout>
 80043fa:	1c72      	adds	r2, r6, #1
 80043fc:	d003      	beq.n	8004406 <serial_init+0x72>
 80043fe:	2101      	movs	r1, #1
 8004400:	4630      	mov	r0, r6
 8004402:	f7ff ff0b 	bl	800421c <pin_mode>
 8004406:	1c6b      	adds	r3, r5, #1
 8004408:	d003      	beq.n	8004412 <serial_init+0x7e>
 800440a:	2101      	movs	r1, #1
 800440c:	4628      	mov	r0, r5
 800440e:	f7ff ff05 	bl	800421c <pin_mode>
 8004412:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8004416:	60a3      	str	r3, [r4, #8]
 8004418:	2300      	movs	r3, #0
 800441a:	60e3      	str	r3, [r4, #12]
 800441c:	6123      	str	r3, [r4, #16]
 800441e:	6163      	str	r3, [r4, #20]
 8004420:	61e3      	str	r3, [r4, #28]
 8004422:	8326      	strh	r6, [r4, #24]
 8004424:	8365      	strh	r5, [r4, #26]
 8004426:	4620      	mov	r0, r4
 8004428:	f7ff ff36 	bl	8004298 <init_uart>
 800442c:	6822      	ldr	r2, [r4, #0]
 800442e:	4b25      	ldr	r3, [pc, #148]	; (80044c4 <serial_init+0x130>)
 8004430:	429a      	cmp	r2, r3
 8004432:	d10f      	bne.n	8004454 <serial_init+0xc0>
 8004434:	4b24      	ldr	r3, [pc, #144]	; (80044c8 <serial_init+0x134>)
 8004436:	2201      	movs	r2, #1
 8004438:	601a      	str	r2, [r3, #0]
 800443a:	4b24      	ldr	r3, [pc, #144]	; (80044cc <serial_init+0x138>)
 800443c:	f104 0520 	add.w	r5, r4, #32
 8004440:	6820      	ldr	r0, [r4, #0]
 8004442:	6861      	ldr	r1, [r4, #4]
 8004444:	461a      	mov	r2, r3
 8004446:	c203      	stmia	r2!, {r0, r1}
 8004448:	3408      	adds	r4, #8
 800444a:	42ac      	cmp	r4, r5
 800444c:	4613      	mov	r3, r2
 800444e:	d1f7      	bne.n	8004440 <serial_init+0xac>
 8004450:	6820      	ldr	r0, [r4, #0]
 8004452:	6010      	str	r0, [r2, #0]
 8004454:	b005      	add	sp, #20
 8004456:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004458:	4b1a      	ldr	r3, [pc, #104]	; (80044c4 <serial_init+0x130>)
 800445a:	4298      	cmp	r0, r3
 800445c:	d114      	bne.n	8004488 <serial_init+0xf4>
 800445e:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8004462:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004464:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8004468:	639a      	str	r2, [r3, #56]	; 0x38
 800446a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800446c:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8004470:	639a      	str	r2, [r3, #56]	; 0x38
 8004472:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8004474:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8004478:	659a      	str	r2, [r3, #88]	; 0x58
 800447a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800447c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004480:	9302      	str	r3, [sp, #8]
 8004482:	9b02      	ldr	r3, [sp, #8]
 8004484:	2301      	movs	r3, #1
 8004486:	e7af      	b.n	80043e8 <serial_init+0x54>
 8004488:	4b11      	ldr	r3, [pc, #68]	; (80044d0 <serial_init+0x13c>)
 800448a:	4298      	cmp	r0, r3
 800448c:	d1ad      	bne.n	80043ea <serial_init+0x56>
 800448e:	f503 33c8 	add.w	r3, r3, #102400	; 0x19000
 8004492:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004494:	f042 0201 	orr.w	r2, r2, #1
 8004498:	63da      	str	r2, [r3, #60]	; 0x3c
 800449a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800449c:	f022 0201 	bic.w	r2, r2, #1
 80044a0:	63da      	str	r2, [r3, #60]	; 0x3c
 80044a2:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80044a4:	f042 0201 	orr.w	r2, r2, #1
 80044a8:	65da      	str	r2, [r3, #92]	; 0x5c
 80044aa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80044ac:	f003 0301 	and.w	r3, r3, #1
 80044b0:	9303      	str	r3, [sp, #12]
 80044b2:	9b03      	ldr	r3, [sp, #12]
 80044b4:	2305      	movs	r3, #5
 80044b6:	e797      	b.n	80043e8 <serial_init+0x54>
 80044b8:	08008780 	.word	0x08008780
 80044bc:	08008744 	.word	0x08008744
 80044c0:	40013800 	.word	0x40013800
 80044c4:	40004400 	.word	0x40004400
 80044c8:	200021e0 	.word	0x200021e0
 80044cc:	2000309c 	.word	0x2000309c
 80044d0:	40008000 	.word	0x40008000

080044d4 <serial_baud>:
 80044d4:	6081      	str	r1, [r0, #8]
 80044d6:	f7ff bedf 	b.w	8004298 <init_uart>
	...

080044dc <serial_irq_handler>:
 80044dc:	4b03      	ldr	r3, [pc, #12]	; (80044ec <serial_irq_handler+0x10>)
 80044de:	6019      	str	r1, [r3, #0]
 80044e0:	6841      	ldr	r1, [r0, #4]
 80044e2:	4b03      	ldr	r3, [pc, #12]	; (80044f0 <serial_irq_handler+0x14>)
 80044e4:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80044e8:	4770      	bx	lr
 80044ea:	bf00      	nop
 80044ec:	200021c4 	.word	0x200021c4
 80044f0:	200021c8 	.word	0x200021c8

080044f4 <serial_irq_set>:
 80044f4:	b570      	push	{r4, r5, r6, lr}
 80044f6:	e890 0028 	ldmia.w	r0, {r3, r5}
 80044fa:	460e      	mov	r6, r1
 80044fc:	4925      	ldr	r1, [pc, #148]	; (8004594 <serial_irq_set+0xa0>)
 80044fe:	428b      	cmp	r3, r1
 8004500:	d118      	bne.n	8004534 <serial_irq_set+0x40>
 8004502:	4925      	ldr	r1, [pc, #148]	; (8004598 <serial_irq_set+0xa4>)
 8004504:	2425      	movs	r4, #37	; 0x25
 8004506:	2370      	movs	r3, #112	; 0x70
 8004508:	4824      	ldr	r0, [pc, #144]	; (800459c <serial_irq_set+0xa8>)
 800450a:	436b      	muls	r3, r5
 800450c:	b31a      	cbz	r2, 8004556 <serial_irq_set+0x62>
 800450e:	58c2      	ldr	r2, [r0, r3]
 8004510:	6813      	ldr	r3, [r2, #0]
 8004512:	b9ee      	cbnz	r6, 8004550 <serial_irq_set+0x5c>
 8004514:	f043 0320 	orr.w	r3, r3, #32
 8004518:	6013      	str	r3, [r2, #0]
 800451a:	4620      	mov	r0, r4
 800451c:	f000 f974 	bl	8004808 <__NVIC_SetVector>
 8004520:	0962      	lsrs	r2, r4, #5
 8004522:	2301      	movs	r3, #1
 8004524:	f004 0407 	and.w	r4, r4, #7
 8004528:	fa03 f404 	lsl.w	r4, r3, r4
 800452c:	4b1c      	ldr	r3, [pc, #112]	; (80045a0 <serial_irq_set+0xac>)
 800452e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8004532:	bd70      	pop	{r4, r5, r6, pc}
 8004534:	491b      	ldr	r1, [pc, #108]	; (80045a4 <serial_irq_set+0xb0>)
 8004536:	428b      	cmp	r3, r1
 8004538:	d102      	bne.n	8004540 <serial_irq_set+0x4c>
 800453a:	491b      	ldr	r1, [pc, #108]	; (80045a8 <serial_irq_set+0xb4>)
 800453c:	2426      	movs	r4, #38	; 0x26
 800453e:	e7e2      	b.n	8004506 <serial_irq_set+0x12>
 8004540:	491a      	ldr	r1, [pc, #104]	; (80045ac <serial_irq_set+0xb8>)
 8004542:	428b      	cmp	r3, r1
 8004544:	bf13      	iteet	ne
 8004546:	2100      	movne	r1, #0
 8004548:	4919      	ldreq	r1, [pc, #100]	; (80045b0 <serial_irq_set+0xbc>)
 800454a:	2446      	moveq	r4, #70	; 0x46
 800454c:	460c      	movne	r4, r1
 800454e:	e7da      	b.n	8004506 <serial_irq_set+0x12>
 8004550:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004554:	e7e0      	b.n	8004518 <serial_irq_set+0x24>
 8004556:	58c3      	ldr	r3, [r0, r3]
 8004558:	681a      	ldr	r2, [r3, #0]
 800455a:	b936      	cbnz	r6, 800456a <serial_irq_set+0x76>
 800455c:	f022 0220 	bic.w	r2, r2, #32
 8004560:	601a      	str	r2, [r3, #0]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	061a      	lsls	r2, r3, #24
 8004566:	d506      	bpl.n	8004576 <serial_irq_set+0x82>
 8004568:	bd70      	pop	{r4, r5, r6, pc}
 800456a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800456e:	601a      	str	r2, [r3, #0]
 8004570:	681b      	ldr	r3, [r3, #0]
 8004572:	069b      	lsls	r3, r3, #26
 8004574:	d40d      	bmi.n	8004592 <serial_irq_set+0x9e>
 8004576:	0963      	lsrs	r3, r4, #5
 8004578:	2201      	movs	r2, #1
 800457a:	f004 0407 	and.w	r4, r4, #7
 800457e:	fa02 f404 	lsl.w	r4, r2, r4
 8004582:	3320      	adds	r3, #32
 8004584:	4a06      	ldr	r2, [pc, #24]	; (80045a0 <serial_irq_set+0xac>)
 8004586:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 800458a:	f3bf 8f4f 	dsb	sy
 800458e:	f3bf 8f6f 	isb	sy
 8004592:	bd70      	pop	{r4, r5, r6, pc}
 8004594:	40013800 	.word	0x40013800
 8004598:	08004381 	.word	0x08004381
 800459c:	200021e4 	.word	0x200021e4
 80045a0:	e000e100 	.word	0xe000e100
 80045a4:	40004400 	.word	0x40004400
 80045a8:	08004387 	.word	0x08004387
 80045ac:	40008000 	.word	0x40008000
 80045b0:	0800438d 	.word	0x0800438d

080045b4 <serial_readable>:
 80045b4:	6842      	ldr	r2, [r0, #4]
 80045b6:	2370      	movs	r3, #112	; 0x70
 80045b8:	4353      	muls	r3, r2
 80045ba:	4a03      	ldr	r2, [pc, #12]	; (80045c8 <serial_readable+0x14>)
 80045bc:	58d3      	ldr	r3, [r2, r3]
 80045be:	69d8      	ldr	r0, [r3, #28]
 80045c0:	f3c0 1040 	ubfx	r0, r0, #5, #1
 80045c4:	4770      	bx	lr
 80045c6:	bf00      	nop
 80045c8:	200021e4 	.word	0x200021e4

080045cc <serial_getc>:
 80045cc:	b510      	push	{r4, lr}
 80045ce:	6844      	ldr	r4, [r0, #4]
 80045d0:	4601      	mov	r1, r0
 80045d2:	4608      	mov	r0, r1
 80045d4:	f7ff ffee 	bl	80045b4 <serial_readable>
 80045d8:	2800      	cmp	r0, #0
 80045da:	d0fa      	beq.n	80045d2 <serial_getc+0x6>
 80045dc:	2370      	movs	r3, #112	; 0x70
 80045de:	4a05      	ldr	r2, [pc, #20]	; (80045f4 <serial_getc+0x28>)
 80045e0:	68c9      	ldr	r1, [r1, #12]
 80045e2:	4363      	muls	r3, r4
 80045e4:	58d3      	ldr	r3, [r2, r3]
 80045e6:	8c98      	ldrh	r0, [r3, #36]	; 0x24
 80045e8:	b909      	cbnz	r1, 80045ee <serial_getc+0x22>
 80045ea:	b2c0      	uxtb	r0, r0
 80045ec:	bd10      	pop	{r4, pc}
 80045ee:	f3c0 0008 	ubfx	r0, r0, #0, #9
 80045f2:	bd10      	pop	{r4, pc}
 80045f4:	200021e4 	.word	0x200021e4

080045f8 <serial_writable>:
 80045f8:	6842      	ldr	r2, [r0, #4]
 80045fa:	2370      	movs	r3, #112	; 0x70
 80045fc:	4353      	muls	r3, r2
 80045fe:	4a03      	ldr	r2, [pc, #12]	; (800460c <serial_writable+0x14>)
 8004600:	58d3      	ldr	r3, [r2, r3]
 8004602:	69d8      	ldr	r0, [r3, #28]
 8004604:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8004608:	4770      	bx	lr
 800460a:	bf00      	nop
 800460c:	200021e4 	.word	0x200021e4

08004610 <serial_putc>:
 8004610:	b538      	push	{r3, r4, r5, lr}
 8004612:	6845      	ldr	r5, [r0, #4]
 8004614:	4604      	mov	r4, r0
 8004616:	4620      	mov	r0, r4
 8004618:	f7ff ffee 	bl	80045f8 <serial_writable>
 800461c:	2800      	cmp	r0, #0
 800461e:	d0fa      	beq.n	8004616 <serial_putc+0x6>
 8004620:	2370      	movs	r3, #112	; 0x70
 8004622:	4a05      	ldr	r2, [pc, #20]	; (8004638 <serial_putc+0x28>)
 8004624:	68e0      	ldr	r0, [r4, #12]
 8004626:	436b      	muls	r3, r5
 8004628:	58d3      	ldr	r3, [r2, r3]
 800462a:	b910      	cbnz	r0, 8004632 <serial_putc+0x22>
 800462c:	b2c9      	uxtb	r1, r1
 800462e:	8519      	strh	r1, [r3, #40]	; 0x28
 8004630:	bd38      	pop	{r3, r4, r5, pc}
 8004632:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8004636:	e7fa      	b.n	800462e <serial_putc+0x1e>
 8004638:	200021e4 	.word	0x200021e4

0800463c <mbed_sdk_init>:
 800463c:	b508      	push	{r3, lr}
 800463e:	f000 f805 	bl	800464c <SystemCoreClockUpdate>
 8004642:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004646:	f001 ba21 	b.w	8005a8c <HAL_Init>
	...

0800464c <SystemCoreClockUpdate>:
 800464c:	4a26      	ldr	r2, [pc, #152]	; (80046e8 <SystemCoreClockUpdate+0x9c>)
 800464e:	4927      	ldr	r1, [pc, #156]	; (80046ec <SystemCoreClockUpdate+0xa0>)
 8004650:	6813      	ldr	r3, [r2, #0]
 8004652:	071b      	lsls	r3, r3, #28
 8004654:	bf54      	ite	pl
 8004656:	f8d2 3094 	ldrpl.w	r3, [r2, #148]	; 0x94
 800465a:	6813      	ldrmi	r3, [r2, #0]
 800465c:	6890      	ldr	r0, [r2, #8]
 800465e:	bf54      	ite	pl
 8004660:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
 8004664:	f3c3 1303 	ubfxmi	r3, r3, #4, #4
 8004668:	f000 000c 	and.w	r0, r0, #12
 800466c:	b510      	push	{r4, lr}
 800466e:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
 8004672:	491f      	ldr	r1, [pc, #124]	; (80046f0 <SystemCoreClockUpdate+0xa4>)
 8004674:	280c      	cmp	r0, #12
 8004676:	d835      	bhi.n	80046e4 <SystemCoreClockUpdate+0x98>
 8004678:	e8df f000 	tbb	[pc, r0]
 800467c:	34343434 	.word	0x34343434
 8004680:	34343407 	.word	0x34343407
 8004684:	34343412 	.word	0x34343412
 8004688:	14          	.byte	0x14
 8004689:	00          	.byte	0x00
 800468a:	4b1a      	ldr	r3, [pc, #104]	; (80046f4 <SystemCoreClockUpdate+0xa8>)
 800468c:	600b      	str	r3, [r1, #0]
 800468e:	6893      	ldr	r3, [r2, #8]
 8004690:	4a19      	ldr	r2, [pc, #100]	; (80046f8 <SystemCoreClockUpdate+0xac>)
 8004692:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8004696:	5cd2      	ldrb	r2, [r2, r3]
 8004698:	680b      	ldr	r3, [r1, #0]
 800469a:	40d3      	lsrs	r3, r2
 800469c:	600b      	str	r3, [r1, #0]
 800469e:	bd10      	pop	{r4, pc}
 80046a0:	4b16      	ldr	r3, [pc, #88]	; (80046fc <SystemCoreClockUpdate+0xb0>)
 80046a2:	e7f3      	b.n	800468c <SystemCoreClockUpdate+0x40>
 80046a4:	68d0      	ldr	r0, [r2, #12]
 80046a6:	68d3      	ldr	r3, [r2, #12]
 80046a8:	f000 0003 	and.w	r0, r0, #3
 80046ac:	f3c3 1302 	ubfx	r3, r3, #4, #3
 80046b0:	2802      	cmp	r0, #2
 80046b2:	f103 0301 	add.w	r3, r3, #1
 80046b6:	d004      	beq.n	80046c2 <SystemCoreClockUpdate+0x76>
 80046b8:	2803      	cmp	r0, #3
 80046ba:	d011      	beq.n	80046e0 <SystemCoreClockUpdate+0x94>
 80046bc:	fbb4 f3f3 	udiv	r3, r4, r3
 80046c0:	e002      	b.n	80046c8 <SystemCoreClockUpdate+0x7c>
 80046c2:	480c      	ldr	r0, [pc, #48]	; (80046f4 <SystemCoreClockUpdate+0xa8>)
 80046c4:	fbb0 f3f3 	udiv	r3, r0, r3
 80046c8:	68d4      	ldr	r4, [r2, #12]
 80046ca:	68d0      	ldr	r0, [r2, #12]
 80046cc:	f3c0 6041 	ubfx	r0, r0, #25, #2
 80046d0:	f3c4 2406 	ubfx	r4, r4, #8, #7
 80046d4:	3001      	adds	r0, #1
 80046d6:	4363      	muls	r3, r4
 80046d8:	0040      	lsls	r0, r0, #1
 80046da:	fbb3 f3f0 	udiv	r3, r3, r0
 80046de:	e7d5      	b.n	800468c <SystemCoreClockUpdate+0x40>
 80046e0:	4806      	ldr	r0, [pc, #24]	; (80046fc <SystemCoreClockUpdate+0xb0>)
 80046e2:	e7ef      	b.n	80046c4 <SystemCoreClockUpdate+0x78>
 80046e4:	600c      	str	r4, [r1, #0]
 80046e6:	e7d2      	b.n	800468e <SystemCoreClockUpdate+0x42>
 80046e8:	40021000 	.word	0x40021000
 80046ec:	08008684 	.word	0x08008684
 80046f0:	20000020 	.word	0x20000020
 80046f4:	00f42400 	.word	0x00f42400
 80046f8:	0800866c 	.word	0x0800866c
 80046fc:	007a1200 	.word	0x007a1200

08004700 <SetSysClock_PLL_MSI>:
 8004700:	b530      	push	{r4, r5, lr}
 8004702:	b097      	sub	sp, #92	; 0x5c
 8004704:	2214      	movs	r2, #20
 8004706:	2100      	movs	r1, #0
 8004708:	4668      	mov	r0, sp
 800470a:	f003 f82e 	bl	800776a <memset>
 800470e:	2244      	movs	r2, #68	; 0x44
 8004710:	2100      	movs	r1, #0
 8004712:	a805      	add	r0, sp, #20
 8004714:	f003 f829 	bl	800776a <memset>
 8004718:	2304      	movs	r3, #4
 800471a:	9305      	str	r3, [sp, #20]
 800471c:	a805      	add	r0, sp, #20
 800471e:	2301      	movs	r3, #1
 8004720:	9307      	str	r3, [sp, #28]
 8004722:	f000 fe11 	bl	8005348 <HAL_RCC_OscConfig>
 8004726:	b920      	cbnz	r0, 8004732 <SetSysClock_PLL_MSI+0x32>
 8004728:	4a17      	ldr	r2, [pc, #92]	; (8004788 <SetSysClock_PLL_MSI+0x88>)
 800472a:	6813      	ldr	r3, [r2, #0]
 800472c:	f043 0304 	orr.w	r3, r3, #4
 8004730:	6013      	str	r3, [r2, #0]
 8004732:	2313      	movs	r3, #19
 8004734:	9305      	str	r3, [sp, #20]
 8004736:	2301      	movs	r3, #1
 8004738:	2260      	movs	r2, #96	; 0x60
 800473a:	930b      	str	r3, [sp, #44]	; 0x2c
 800473c:	9310      	str	r3, [sp, #64]	; 0x40
 800473e:	9311      	str	r3, [sp, #68]	; 0x44
 8004740:	2328      	movs	r3, #40	; 0x28
 8004742:	2400      	movs	r4, #0
 8004744:	920d      	str	r2, [sp, #52]	; 0x34
 8004746:	9312      	str	r3, [sp, #72]	; 0x48
 8004748:	2202      	movs	r2, #2
 800474a:	2307      	movs	r3, #7
 800474c:	2504      	movs	r5, #4
 800474e:	a805      	add	r0, sp, #20
 8004750:	9406      	str	r4, [sp, #24]
 8004752:	9408      	str	r4, [sp, #32]
 8004754:	940c      	str	r4, [sp, #48]	; 0x30
 8004756:	920f      	str	r2, [sp, #60]	; 0x3c
 8004758:	9313      	str	r3, [sp, #76]	; 0x4c
 800475a:	9514      	str	r5, [sp, #80]	; 0x50
 800475c:	9215      	str	r2, [sp, #84]	; 0x54
 800475e:	f000 fdf3 	bl	8005348 <HAL_RCC_OscConfig>
 8004762:	b978      	cbnz	r0, 8004784 <SetSysClock_PLL_MSI+0x84>
 8004764:	220f      	movs	r2, #15
 8004766:	2303      	movs	r3, #3
 8004768:	9002      	str	r0, [sp, #8]
 800476a:	9003      	str	r0, [sp, #12]
 800476c:	9004      	str	r0, [sp, #16]
 800476e:	4629      	mov	r1, r5
 8004770:	4668      	mov	r0, sp
 8004772:	e88d 000c 	stmia.w	sp, {r2, r3}
 8004776:	f001 f84f 	bl	8005818 <HAL_RCC_ClockConfig>
 800477a:	fab0 f080 	clz	r0, r0
 800477e:	0940      	lsrs	r0, r0, #5
 8004780:	b017      	add	sp, #92	; 0x5c
 8004782:	bd30      	pop	{r4, r5, pc}
 8004784:	4620      	mov	r0, r4
 8004786:	e7fb      	b.n	8004780 <SetSysClock_PLL_MSI+0x80>
 8004788:	40021000 	.word	0x40021000

0800478c <SetSysClock>:
 800478c:	b508      	push	{r3, lr}
 800478e:	f7ff ffb7 	bl	8004700 <SetSysClock_PLL_MSI>
 8004792:	b900      	cbnz	r0, 8004796 <SetSysClock+0xa>
 8004794:	e7fe      	b.n	8004794 <SetSysClock+0x8>
 8004796:	bd08      	pop	{r3, pc}

08004798 <SystemInit>:
 8004798:	4a17      	ldr	r2, [pc, #92]	; (80047f8 <SystemInit+0x60>)
 800479a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800479e:	b510      	push	{r4, lr}
 80047a0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80047a4:	4c15      	ldr	r4, [pc, #84]	; (80047fc <SystemInit+0x64>)
 80047a6:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80047aa:	6823      	ldr	r3, [r4, #0]
 80047ac:	2100      	movs	r1, #0
 80047ae:	f043 0301 	orr.w	r3, r3, #1
 80047b2:	6023      	str	r3, [r4, #0]
 80047b4:	60a1      	str	r1, [r4, #8]
 80047b6:	6823      	ldr	r3, [r4, #0]
 80047b8:	f023 53a8 	bic.w	r3, r3, #352321536	; 0x15000000
 80047bc:	f423 2310 	bic.w	r3, r3, #589824	; 0x90000
 80047c0:	6023      	str	r3, [r4, #0]
 80047c2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80047c6:	60e3      	str	r3, [r4, #12]
 80047c8:	6823      	ldr	r3, [r4, #0]
 80047ca:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80047ce:	6023      	str	r3, [r4, #0]
 80047d0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80047d4:	61a1      	str	r1, [r4, #24]
 80047d6:	6093      	str	r3, [r2, #8]
 80047d8:	4b09      	ldr	r3, [pc, #36]	; (8004800 <SystemInit+0x68>)
 80047da:	4a0a      	ldr	r2, [pc, #40]	; (8004804 <SystemInit+0x6c>)
 80047dc:	601a      	str	r2, [r3, #0]
 80047de:	f001 f955 	bl	8005a8c <HAL_Init>
 80047e2:	f7ff ffd3 	bl	800478c <SetSysClock>
 80047e6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80047e8:	f043 0301 	orr.w	r3, r3, #1
 80047ec:	63a3      	str	r3, [r4, #56]	; 0x38
 80047ee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80047f0:	f023 0301 	bic.w	r3, r3, #1
 80047f4:	63a3      	str	r3, [r4, #56]	; 0x38
 80047f6:	bd10      	pop	{r4, pc}
 80047f8:	e000ed00 	.word	0xe000ed00
 80047fc:	40021000 	.word	0x40021000
 8004800:	20000020 	.word	0x20000020
 8004804:	003d0900 	.word	0x003d0900

08004808 <__NVIC_SetVector>:
 8004808:	b530      	push	{r4, r5, lr}
 800480a:	4c0c      	ldr	r4, [pc, #48]	; (800483c <__NVIC_SetVector+0x34>)
 800480c:	68a2      	ldr	r2, [r4, #8]
 800480e:	68a4      	ldr	r4, [r4, #8]
 8004810:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8004814:	4613      	mov	r3, r2
 8004816:	d10c      	bne.n	8004832 <__NVIC_SetVector+0x2a>
 8004818:	1f13      	subs	r3, r2, #4
 800481a:	4c09      	ldr	r4, [pc, #36]	; (8004840 <__NVIC_SetVector+0x38>)
 800481c:	4a09      	ldr	r2, [pc, #36]	; (8004844 <__NVIC_SetVector+0x3c>)
 800481e:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8004822:	f842 5f04 	str.w	r5, [r2, #4]!
 8004826:	42a2      	cmp	r2, r4
 8004828:	d1f9      	bne.n	800481e <__NVIC_SetVector+0x16>
 800482a:	4a04      	ldr	r2, [pc, #16]	; (800483c <__NVIC_SetVector+0x34>)
 800482c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8004830:	6093      	str	r3, [r2, #8]
 8004832:	3010      	adds	r0, #16
 8004834:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8004838:	bd30      	pop	{r4, r5, pc}
 800483a:	bf00      	nop
 800483c:	e000ed00 	.word	0xe000ed00
 8004840:	10000184 	.word	0x10000184
 8004844:	0ffffffc 	.word	0x0ffffffc

08004848 <TIM_OC1_SetConfig>:
 8004848:	6a03      	ldr	r3, [r0, #32]
 800484a:	f023 0301 	bic.w	r3, r3, #1
 800484e:	6203      	str	r3, [r0, #32]
 8004850:	6a03      	ldr	r3, [r0, #32]
 8004852:	b570      	push	{r4, r5, r6, lr}
 8004854:	6845      	ldr	r5, [r0, #4]
 8004856:	6982      	ldr	r2, [r0, #24]
 8004858:	680c      	ldr	r4, [r1, #0]
 800485a:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800485e:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8004862:	4322      	orrs	r2, r4
 8004864:	688c      	ldr	r4, [r1, #8]
 8004866:	f023 0302 	bic.w	r3, r3, #2
 800486a:	4323      	orrs	r3, r4
 800486c:	4c12      	ldr	r4, [pc, #72]	; (80048b8 <TIM_OC1_SetConfig+0x70>)
 800486e:	42a0      	cmp	r0, r4
 8004870:	d006      	beq.n	8004880 <TIM_OC1_SetConfig+0x38>
 8004872:	4e12      	ldr	r6, [pc, #72]	; (80048bc <TIM_OC1_SetConfig+0x74>)
 8004874:	42b0      	cmp	r0, r6
 8004876:	d003      	beq.n	8004880 <TIM_OC1_SetConfig+0x38>
 8004878:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800487c:	42b0      	cmp	r0, r6
 800487e:	d114      	bne.n	80048aa <TIM_OC1_SetConfig+0x62>
 8004880:	68ce      	ldr	r6, [r1, #12]
 8004882:	f023 0308 	bic.w	r3, r3, #8
 8004886:	4333      	orrs	r3, r6
 8004888:	42a0      	cmp	r0, r4
 800488a:	f023 0304 	bic.w	r3, r3, #4
 800488e:	d006      	beq.n	800489e <TIM_OC1_SetConfig+0x56>
 8004890:	4c0a      	ldr	r4, [pc, #40]	; (80048bc <TIM_OC1_SetConfig+0x74>)
 8004892:	42a0      	cmp	r0, r4
 8004894:	d003      	beq.n	800489e <TIM_OC1_SetConfig+0x56>
 8004896:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800489a:	42a0      	cmp	r0, r4
 800489c:	d105      	bne.n	80048aa <TIM_OC1_SetConfig+0x62>
 800489e:	694c      	ldr	r4, [r1, #20]
 80048a0:	698e      	ldr	r6, [r1, #24]
 80048a2:	f425 7540 	bic.w	r5, r5, #768	; 0x300
 80048a6:	4334      	orrs	r4, r6
 80048a8:	4325      	orrs	r5, r4
 80048aa:	6045      	str	r5, [r0, #4]
 80048ac:	6182      	str	r2, [r0, #24]
 80048ae:	684a      	ldr	r2, [r1, #4]
 80048b0:	6342      	str	r2, [r0, #52]	; 0x34
 80048b2:	6203      	str	r3, [r0, #32]
 80048b4:	bd70      	pop	{r4, r5, r6, pc}
 80048b6:	bf00      	nop
 80048b8:	40012c00 	.word	0x40012c00
 80048bc:	40014000 	.word	0x40014000

080048c0 <TIM_OC3_SetConfig>:
 80048c0:	6a03      	ldr	r3, [r0, #32]
 80048c2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80048c6:	6203      	str	r3, [r0, #32]
 80048c8:	6a03      	ldr	r3, [r0, #32]
 80048ca:	6842      	ldr	r2, [r0, #4]
 80048cc:	b570      	push	{r4, r5, r6, lr}
 80048ce:	69c4      	ldr	r4, [r0, #28]
 80048d0:	680d      	ldr	r5, [r1, #0]
 80048d2:	f424 3480 	bic.w	r4, r4, #65536	; 0x10000
 80048d6:	f024 0473 	bic.w	r4, r4, #115	; 0x73
 80048da:	432c      	orrs	r4, r5
 80048dc:	688d      	ldr	r5, [r1, #8]
 80048de:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80048e2:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 80048e6:	4d0f      	ldr	r5, [pc, #60]	; (8004924 <TIM_OC3_SetConfig+0x64>)
 80048e8:	42a8      	cmp	r0, r5
 80048ea:	d10e      	bne.n	800490a <TIM_OC3_SetConfig+0x4a>
 80048ec:	68cd      	ldr	r5, [r1, #12]
 80048ee:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80048f2:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 80048f6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80048fa:	694d      	ldr	r5, [r1, #20]
 80048fc:	698e      	ldr	r6, [r1, #24]
 80048fe:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8004902:	4335      	orrs	r5, r6
 8004904:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 8004908:	e005      	b.n	8004916 <TIM_OC3_SetConfig+0x56>
 800490a:	4d07      	ldr	r5, [pc, #28]	; (8004928 <TIM_OC3_SetConfig+0x68>)
 800490c:	42a8      	cmp	r0, r5
 800490e:	d0f4      	beq.n	80048fa <TIM_OC3_SetConfig+0x3a>
 8004910:	4d06      	ldr	r5, [pc, #24]	; (800492c <TIM_OC3_SetConfig+0x6c>)
 8004912:	42a8      	cmp	r0, r5
 8004914:	d0f1      	beq.n	80048fa <TIM_OC3_SetConfig+0x3a>
 8004916:	6042      	str	r2, [r0, #4]
 8004918:	684a      	ldr	r2, [r1, #4]
 800491a:	61c4      	str	r4, [r0, #28]
 800491c:	63c2      	str	r2, [r0, #60]	; 0x3c
 800491e:	6203      	str	r3, [r0, #32]
 8004920:	bd70      	pop	{r4, r5, r6, pc}
 8004922:	bf00      	nop
 8004924:	40012c00 	.word	0x40012c00
 8004928:	40014000 	.word	0x40014000
 800492c:	40014400 	.word	0x40014400

08004930 <TIM_OC4_SetConfig>:
 8004930:	6a03      	ldr	r3, [r0, #32]
 8004932:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004936:	6203      	str	r3, [r0, #32]
 8004938:	6a02      	ldr	r2, [r0, #32]
 800493a:	b530      	push	{r4, r5, lr}
 800493c:	6844      	ldr	r4, [r0, #4]
 800493e:	69c3      	ldr	r3, [r0, #28]
 8004940:	680d      	ldr	r5, [r1, #0]
 8004942:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004946:	f423 43e6 	bic.w	r3, r3, #29440	; 0x7300
 800494a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800494e:	688d      	ldr	r5, [r1, #8]
 8004950:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004954:	ea42 3205 	orr.w	r2, r2, r5, lsl #12
 8004958:	4d0a      	ldr	r5, [pc, #40]	; (8004984 <TIM_OC4_SetConfig+0x54>)
 800495a:	42a8      	cmp	r0, r5
 800495c:	d007      	beq.n	800496e <TIM_OC4_SetConfig+0x3e>
 800495e:	f505 55a0 	add.w	r5, r5, #5120	; 0x1400
 8004962:	42a8      	cmp	r0, r5
 8004964:	d003      	beq.n	800496e <TIM_OC4_SetConfig+0x3e>
 8004966:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800496a:	42a8      	cmp	r0, r5
 800496c:	d104      	bne.n	8004978 <TIM_OC4_SetConfig+0x48>
 800496e:	694d      	ldr	r5, [r1, #20]
 8004970:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
 8004974:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8004978:	6044      	str	r4, [r0, #4]
 800497a:	61c3      	str	r3, [r0, #28]
 800497c:	684b      	ldr	r3, [r1, #4]
 800497e:	6403      	str	r3, [r0, #64]	; 0x40
 8004980:	6202      	str	r2, [r0, #32]
 8004982:	bd30      	pop	{r4, r5, pc}
 8004984:	40012c00 	.word	0x40012c00

08004988 <TIM_OC5_SetConfig>:
 8004988:	6a03      	ldr	r3, [r0, #32]
 800498a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800498e:	6203      	str	r3, [r0, #32]
 8004990:	6a02      	ldr	r2, [r0, #32]
 8004992:	b530      	push	{r4, r5, lr}
 8004994:	6844      	ldr	r4, [r0, #4]
 8004996:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8004998:	680d      	ldr	r5, [r1, #0]
 800499a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800499e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80049a2:	432b      	orrs	r3, r5
 80049a4:	688d      	ldr	r5, [r1, #8]
 80049a6:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80049aa:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 80049ae:	4d0b      	ldr	r5, [pc, #44]	; (80049dc <TIM_OC5_SetConfig+0x54>)
 80049b0:	42a8      	cmp	r0, r5
 80049b2:	d007      	beq.n	80049c4 <TIM_OC5_SetConfig+0x3c>
 80049b4:	f505 55a0 	add.w	r5, r5, #5120	; 0x1400
 80049b8:	42a8      	cmp	r0, r5
 80049ba:	d003      	beq.n	80049c4 <TIM_OC5_SetConfig+0x3c>
 80049bc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80049c0:	42a8      	cmp	r0, r5
 80049c2:	d104      	bne.n	80049ce <TIM_OC5_SetConfig+0x46>
 80049c4:	694d      	ldr	r5, [r1, #20]
 80049c6:	f424 3480 	bic.w	r4, r4, #65536	; 0x10000
 80049ca:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
 80049ce:	6044      	str	r4, [r0, #4]
 80049d0:	6543      	str	r3, [r0, #84]	; 0x54
 80049d2:	684b      	ldr	r3, [r1, #4]
 80049d4:	6583      	str	r3, [r0, #88]	; 0x58
 80049d6:	6202      	str	r2, [r0, #32]
 80049d8:	bd30      	pop	{r4, r5, pc}
 80049da:	bf00      	nop
 80049dc:	40012c00 	.word	0x40012c00

080049e0 <TIM_OC6_SetConfig>:
 80049e0:	6a03      	ldr	r3, [r0, #32]
 80049e2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80049e6:	6203      	str	r3, [r0, #32]
 80049e8:	6a02      	ldr	r2, [r0, #32]
 80049ea:	b530      	push	{r4, r5, lr}
 80049ec:	6844      	ldr	r4, [r0, #4]
 80049ee:	6d43      	ldr	r3, [r0, #84]	; 0x54
 80049f0:	680d      	ldr	r5, [r1, #0]
 80049f2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80049f6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80049fa:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 80049fe:	688d      	ldr	r5, [r1, #8]
 8004a00:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8004a04:	ea42 5205 	orr.w	r2, r2, r5, lsl #20
 8004a08:	4d0a      	ldr	r5, [pc, #40]	; (8004a34 <TIM_OC6_SetConfig+0x54>)
 8004a0a:	42a8      	cmp	r0, r5
 8004a0c:	d007      	beq.n	8004a1e <TIM_OC6_SetConfig+0x3e>
 8004a0e:	f505 55a0 	add.w	r5, r5, #5120	; 0x1400
 8004a12:	42a8      	cmp	r0, r5
 8004a14:	d003      	beq.n	8004a1e <TIM_OC6_SetConfig+0x3e>
 8004a16:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004a1a:	42a8      	cmp	r0, r5
 8004a1c:	d104      	bne.n	8004a28 <TIM_OC6_SetConfig+0x48>
 8004a1e:	694d      	ldr	r5, [r1, #20]
 8004a20:	f424 2480 	bic.w	r4, r4, #262144	; 0x40000
 8004a24:	ea44 2485 	orr.w	r4, r4, r5, lsl #10
 8004a28:	6044      	str	r4, [r0, #4]
 8004a2a:	6543      	str	r3, [r0, #84]	; 0x54
 8004a2c:	684b      	ldr	r3, [r1, #4]
 8004a2e:	65c3      	str	r3, [r0, #92]	; 0x5c
 8004a30:	6202      	str	r2, [r0, #32]
 8004a32:	bd30      	pop	{r4, r5, pc}
 8004a34:	40012c00 	.word	0x40012c00

08004a38 <HAL_TIM_OC_MspInit>:
 8004a38:	4770      	bx	lr

08004a3a <HAL_TIM_PWM_MspInit>:
 8004a3a:	4770      	bx	lr

08004a3c <TIM_Base_SetConfig>:
 8004a3c:	4a18      	ldr	r2, [pc, #96]	; (8004aa0 <TIM_Base_SetConfig+0x64>)
 8004a3e:	6803      	ldr	r3, [r0, #0]
 8004a40:	4290      	cmp	r0, r2
 8004a42:	b510      	push	{r4, lr}
 8004a44:	d002      	beq.n	8004a4c <TIM_Base_SetConfig+0x10>
 8004a46:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004a4a:	d109      	bne.n	8004a60 <TIM_Base_SetConfig+0x24>
 8004a4c:	684c      	ldr	r4, [r1, #4]
 8004a4e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004a52:	4290      	cmp	r0, r2
 8004a54:	ea43 0304 	orr.w	r3, r3, r4
 8004a58:	d009      	beq.n	8004a6e <TIM_Base_SetConfig+0x32>
 8004a5a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004a5e:	d006      	beq.n	8004a6e <TIM_Base_SetConfig+0x32>
 8004a60:	4a10      	ldr	r2, [pc, #64]	; (8004aa4 <TIM_Base_SetConfig+0x68>)
 8004a62:	4290      	cmp	r0, r2
 8004a64:	d003      	beq.n	8004a6e <TIM_Base_SetConfig+0x32>
 8004a66:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004a6a:	4290      	cmp	r0, r2
 8004a6c:	d103      	bne.n	8004a76 <TIM_Base_SetConfig+0x3a>
 8004a6e:	68ca      	ldr	r2, [r1, #12]
 8004a70:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004a74:	4313      	orrs	r3, r2
 8004a76:	6003      	str	r3, [r0, #0]
 8004a78:	688b      	ldr	r3, [r1, #8]
 8004a7a:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004a7c:	680b      	ldr	r3, [r1, #0]
 8004a7e:	6283      	str	r3, [r0, #40]	; 0x28
 8004a80:	4b07      	ldr	r3, [pc, #28]	; (8004aa0 <TIM_Base_SetConfig+0x64>)
 8004a82:	4298      	cmp	r0, r3
 8004a84:	d007      	beq.n	8004a96 <TIM_Base_SetConfig+0x5a>
 8004a86:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 8004a8a:	4298      	cmp	r0, r3
 8004a8c:	d003      	beq.n	8004a96 <TIM_Base_SetConfig+0x5a>
 8004a8e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004a92:	4298      	cmp	r0, r3
 8004a94:	d101      	bne.n	8004a9a <TIM_Base_SetConfig+0x5e>
 8004a96:	690b      	ldr	r3, [r1, #16]
 8004a98:	6303      	str	r3, [r0, #48]	; 0x30
 8004a9a:	2301      	movs	r3, #1
 8004a9c:	6143      	str	r3, [r0, #20]
 8004a9e:	bd10      	pop	{r4, pc}
 8004aa0:	40012c00 	.word	0x40012c00
 8004aa4:	40014000 	.word	0x40014000

08004aa8 <HAL_TIM_OC_Init>:
 8004aa8:	b510      	push	{r4, lr}
 8004aaa:	4604      	mov	r4, r0
 8004aac:	b1a0      	cbz	r0, 8004ad8 <HAL_TIM_OC_Init+0x30>
 8004aae:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004ab2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004ab6:	b91b      	cbnz	r3, 8004ac0 <HAL_TIM_OC_Init+0x18>
 8004ab8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004abc:	f7ff ffbc 	bl	8004a38 <HAL_TIM_OC_MspInit>
 8004ac0:	2302      	movs	r3, #2
 8004ac2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004ac6:	6820      	ldr	r0, [r4, #0]
 8004ac8:	1d21      	adds	r1, r4, #4
 8004aca:	f7ff ffb7 	bl	8004a3c <TIM_Base_SetConfig>
 8004ace:	2301      	movs	r3, #1
 8004ad0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004ad4:	2000      	movs	r0, #0
 8004ad6:	bd10      	pop	{r4, pc}
 8004ad8:	2001      	movs	r0, #1
 8004ada:	bd10      	pop	{r4, pc}

08004adc <HAL_TIM_PWM_Init>:
 8004adc:	b510      	push	{r4, lr}
 8004ade:	4604      	mov	r4, r0
 8004ae0:	b1a0      	cbz	r0, 8004b0c <HAL_TIM_PWM_Init+0x30>
 8004ae2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004ae6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004aea:	b91b      	cbnz	r3, 8004af4 <HAL_TIM_PWM_Init+0x18>
 8004aec:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004af0:	f7ff ffa3 	bl	8004a3a <HAL_TIM_PWM_MspInit>
 8004af4:	2302      	movs	r3, #2
 8004af6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004afa:	6820      	ldr	r0, [r4, #0]
 8004afc:	1d21      	adds	r1, r4, #4
 8004afe:	f7ff ff9d 	bl	8004a3c <TIM_Base_SetConfig>
 8004b02:	2301      	movs	r3, #1
 8004b04:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004b08:	2000      	movs	r0, #0
 8004b0a:	bd10      	pop	{r4, pc}
 8004b0c:	2001      	movs	r0, #1
 8004b0e:	bd10      	pop	{r4, pc}

08004b10 <TIM_OC2_SetConfig>:
 8004b10:	6a03      	ldr	r3, [r0, #32]
 8004b12:	f023 0310 	bic.w	r3, r3, #16
 8004b16:	6203      	str	r3, [r0, #32]
 8004b18:	6a03      	ldr	r3, [r0, #32]
 8004b1a:	6842      	ldr	r2, [r0, #4]
 8004b1c:	b570      	push	{r4, r5, r6, lr}
 8004b1e:	6984      	ldr	r4, [r0, #24]
 8004b20:	680d      	ldr	r5, [r1, #0]
 8004b22:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 8004b26:	f424 44e6 	bic.w	r4, r4, #29440	; 0x7300
 8004b2a:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
 8004b2e:	688d      	ldr	r5, [r1, #8]
 8004b30:	f023 0320 	bic.w	r3, r3, #32
 8004b34:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8004b38:	4d0e      	ldr	r5, [pc, #56]	; (8004b74 <TIM_OC2_SetConfig+0x64>)
 8004b3a:	42a8      	cmp	r0, r5
 8004b3c:	d10e      	bne.n	8004b5c <TIM_OC2_SetConfig+0x4c>
 8004b3e:	68cd      	ldr	r5, [r1, #12]
 8004b40:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004b44:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8004b48:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004b4c:	694d      	ldr	r5, [r1, #20]
 8004b4e:	698e      	ldr	r6, [r1, #24]
 8004b50:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8004b54:	4335      	orrs	r5, r6
 8004b56:	ea42 0285 	orr.w	r2, r2, r5, lsl #2
 8004b5a:	e005      	b.n	8004b68 <TIM_OC2_SetConfig+0x58>
 8004b5c:	4d06      	ldr	r5, [pc, #24]	; (8004b78 <TIM_OC2_SetConfig+0x68>)
 8004b5e:	42a8      	cmp	r0, r5
 8004b60:	d0f4      	beq.n	8004b4c <TIM_OC2_SetConfig+0x3c>
 8004b62:	4d06      	ldr	r5, [pc, #24]	; (8004b7c <TIM_OC2_SetConfig+0x6c>)
 8004b64:	42a8      	cmp	r0, r5
 8004b66:	d0f1      	beq.n	8004b4c <TIM_OC2_SetConfig+0x3c>
 8004b68:	6042      	str	r2, [r0, #4]
 8004b6a:	684a      	ldr	r2, [r1, #4]
 8004b6c:	6184      	str	r4, [r0, #24]
 8004b6e:	6382      	str	r2, [r0, #56]	; 0x38
 8004b70:	6203      	str	r3, [r0, #32]
 8004b72:	bd70      	pop	{r4, r5, r6, pc}
 8004b74:	40012c00 	.word	0x40012c00
 8004b78:	40014000 	.word	0x40014000
 8004b7c:	40014400 	.word	0x40014400

08004b80 <HAL_TIM_PWM_ConfigChannel>:
 8004b80:	b538      	push	{r3, r4, r5, lr}
 8004b82:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004b86:	2b01      	cmp	r3, #1
 8004b88:	4604      	mov	r4, r0
 8004b8a:	f04f 0002 	mov.w	r0, #2
 8004b8e:	d010      	beq.n	8004bb2 <HAL_TIM_PWM_ConfigChannel+0x32>
 8004b90:	2301      	movs	r3, #1
 8004b92:	2a08      	cmp	r2, #8
 8004b94:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8004b98:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004b9c:	d043      	beq.n	8004c26 <HAL_TIM_PWM_ConfigChannel+0xa6>
 8004b9e:	d809      	bhi.n	8004bb4 <HAL_TIM_PWM_ConfigChannel+0x34>
 8004ba0:	b1fa      	cbz	r2, 8004be2 <HAL_TIM_PWM_ConfigChannel+0x62>
 8004ba2:	2a04      	cmp	r2, #4
 8004ba4:	d02e      	beq.n	8004c04 <HAL_TIM_PWM_ConfigChannel+0x84>
 8004ba6:	2301      	movs	r3, #1
 8004ba8:	2000      	movs	r0, #0
 8004baa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004bae:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
 8004bb2:	bd38      	pop	{r3, r4, r5, pc}
 8004bb4:	2a10      	cmp	r2, #16
 8004bb6:	d047      	beq.n	8004c48 <HAL_TIM_PWM_ConfigChannel+0xc8>
 8004bb8:	2a14      	cmp	r2, #20
 8004bba:	d056      	beq.n	8004c6a <HAL_TIM_PWM_ConfigChannel+0xea>
 8004bbc:	2a0c      	cmp	r2, #12
 8004bbe:	d1f2      	bne.n	8004ba6 <HAL_TIM_PWM_ConfigChannel+0x26>
 8004bc0:	6820      	ldr	r0, [r4, #0]
 8004bc2:	f7ff feb5 	bl	8004930 <TIM_OC4_SetConfig>
 8004bc6:	6823      	ldr	r3, [r4, #0]
 8004bc8:	6909      	ldr	r1, [r1, #16]
 8004bca:	69da      	ldr	r2, [r3, #28]
 8004bcc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004bd0:	61da      	str	r2, [r3, #28]
 8004bd2:	69da      	ldr	r2, [r3, #28]
 8004bd4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004bd8:	61da      	str	r2, [r3, #28]
 8004bda:	69da      	ldr	r2, [r3, #28]
 8004bdc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004be0:	e030      	b.n	8004c44 <HAL_TIM_PWM_ConfigChannel+0xc4>
 8004be2:	6820      	ldr	r0, [r4, #0]
 8004be4:	f7ff fe30 	bl	8004848 <TIM_OC1_SetConfig>
 8004be8:	6823      	ldr	r3, [r4, #0]
 8004bea:	6909      	ldr	r1, [r1, #16]
 8004bec:	699a      	ldr	r2, [r3, #24]
 8004bee:	f042 0208 	orr.w	r2, r2, #8
 8004bf2:	619a      	str	r2, [r3, #24]
 8004bf4:	699a      	ldr	r2, [r3, #24]
 8004bf6:	f022 0204 	bic.w	r2, r2, #4
 8004bfa:	619a      	str	r2, [r3, #24]
 8004bfc:	699a      	ldr	r2, [r3, #24]
 8004bfe:	430a      	orrs	r2, r1
 8004c00:	619a      	str	r2, [r3, #24]
 8004c02:	e7d0      	b.n	8004ba6 <HAL_TIM_PWM_ConfigChannel+0x26>
 8004c04:	6820      	ldr	r0, [r4, #0]
 8004c06:	f7ff ff83 	bl	8004b10 <TIM_OC2_SetConfig>
 8004c0a:	6823      	ldr	r3, [r4, #0]
 8004c0c:	6909      	ldr	r1, [r1, #16]
 8004c0e:	699a      	ldr	r2, [r3, #24]
 8004c10:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004c14:	619a      	str	r2, [r3, #24]
 8004c16:	699a      	ldr	r2, [r3, #24]
 8004c18:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c1c:	619a      	str	r2, [r3, #24]
 8004c1e:	699a      	ldr	r2, [r3, #24]
 8004c20:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004c24:	e7ec      	b.n	8004c00 <HAL_TIM_PWM_ConfigChannel+0x80>
 8004c26:	6820      	ldr	r0, [r4, #0]
 8004c28:	f7ff fe4a 	bl	80048c0 <TIM_OC3_SetConfig>
 8004c2c:	6823      	ldr	r3, [r4, #0]
 8004c2e:	6909      	ldr	r1, [r1, #16]
 8004c30:	69da      	ldr	r2, [r3, #28]
 8004c32:	f042 0208 	orr.w	r2, r2, #8
 8004c36:	61da      	str	r2, [r3, #28]
 8004c38:	69da      	ldr	r2, [r3, #28]
 8004c3a:	f022 0204 	bic.w	r2, r2, #4
 8004c3e:	61da      	str	r2, [r3, #28]
 8004c40:	69da      	ldr	r2, [r3, #28]
 8004c42:	430a      	orrs	r2, r1
 8004c44:	61da      	str	r2, [r3, #28]
 8004c46:	e7ae      	b.n	8004ba6 <HAL_TIM_PWM_ConfigChannel+0x26>
 8004c48:	6820      	ldr	r0, [r4, #0]
 8004c4a:	f7ff fe9d 	bl	8004988 <TIM_OC5_SetConfig>
 8004c4e:	6823      	ldr	r3, [r4, #0]
 8004c50:	6909      	ldr	r1, [r1, #16]
 8004c52:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8004c54:	f042 0208 	orr.w	r2, r2, #8
 8004c58:	655a      	str	r2, [r3, #84]	; 0x54
 8004c5a:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8004c5c:	f022 0204 	bic.w	r2, r2, #4
 8004c60:	655a      	str	r2, [r3, #84]	; 0x54
 8004c62:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8004c64:	430a      	orrs	r2, r1
 8004c66:	655a      	str	r2, [r3, #84]	; 0x54
 8004c68:	e79d      	b.n	8004ba6 <HAL_TIM_PWM_ConfigChannel+0x26>
 8004c6a:	6820      	ldr	r0, [r4, #0]
 8004c6c:	f7ff feb8 	bl	80049e0 <TIM_OC6_SetConfig>
 8004c70:	6823      	ldr	r3, [r4, #0]
 8004c72:	6909      	ldr	r1, [r1, #16]
 8004c74:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8004c76:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004c7a:	655a      	str	r2, [r3, #84]	; 0x54
 8004c7c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8004c7e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c82:	655a      	str	r2, [r3, #84]	; 0x54
 8004c84:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8004c86:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004c8a:	e7ec      	b.n	8004c66 <HAL_TIM_PWM_ConfigChannel+0xe6>

08004c8c <TIM_CCxChannelCmd>:
 8004c8c:	6a03      	ldr	r3, [r0, #32]
 8004c8e:	b510      	push	{r4, lr}
 8004c90:	2401      	movs	r4, #1
 8004c92:	408c      	lsls	r4, r1
 8004c94:	ea23 0304 	bic.w	r3, r3, r4
 8004c98:	6203      	str	r3, [r0, #32]
 8004c9a:	6a03      	ldr	r3, [r0, #32]
 8004c9c:	408a      	lsls	r2, r1
 8004c9e:	431a      	orrs	r2, r3
 8004ca0:	6202      	str	r2, [r0, #32]
 8004ca2:	bd10      	pop	{r4, pc}

08004ca4 <HAL_TIM_PWM_Start>:
 8004ca4:	b510      	push	{r4, lr}
 8004ca6:	4604      	mov	r4, r0
 8004ca8:	2201      	movs	r2, #1
 8004caa:	6800      	ldr	r0, [r0, #0]
 8004cac:	f7ff ffee 	bl	8004c8c <TIM_CCxChannelCmd>
 8004cb0:	6823      	ldr	r3, [r4, #0]
 8004cb2:	4a0a      	ldr	r2, [pc, #40]	; (8004cdc <HAL_TIM_PWM_Start+0x38>)
 8004cb4:	4293      	cmp	r3, r2
 8004cb6:	d007      	beq.n	8004cc8 <HAL_TIM_PWM_Start+0x24>
 8004cb8:	f502 52a0 	add.w	r2, r2, #5120	; 0x1400
 8004cbc:	4293      	cmp	r3, r2
 8004cbe:	d003      	beq.n	8004cc8 <HAL_TIM_PWM_Start+0x24>
 8004cc0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004cc4:	4293      	cmp	r3, r2
 8004cc6:	d103      	bne.n	8004cd0 <HAL_TIM_PWM_Start+0x2c>
 8004cc8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004cca:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004cce:	645a      	str	r2, [r3, #68]	; 0x44
 8004cd0:	681a      	ldr	r2, [r3, #0]
 8004cd2:	f042 0201 	orr.w	r2, r2, #1
 8004cd6:	601a      	str	r2, [r3, #0]
 8004cd8:	2000      	movs	r0, #0
 8004cda:	bd10      	pop	{r4, pc}
 8004cdc:	40012c00 	.word	0x40012c00

08004ce0 <HAL_TIM_OC_Start>:
 8004ce0:	f7ff bfe0 	b.w	8004ca4 <HAL_TIM_PWM_Start>

08004ce4 <HAL_MspInit>:
 8004ce4:	4770      	bx	lr

08004ce6 <TIM_CCxNChannelCmd>:
 8004ce6:	6a03      	ldr	r3, [r0, #32]
 8004ce8:	b510      	push	{r4, lr}
 8004cea:	2404      	movs	r4, #4
 8004cec:	408c      	lsls	r4, r1
 8004cee:	ea23 0304 	bic.w	r3, r3, r4
 8004cf2:	6203      	str	r3, [r0, #32]
 8004cf4:	6a03      	ldr	r3, [r0, #32]
 8004cf6:	408a      	lsls	r2, r1
 8004cf8:	431a      	orrs	r2, r3
 8004cfa:	6202      	str	r2, [r0, #32]
 8004cfc:	bd10      	pop	{r4, pc}

08004cfe <HAL_TIMEx_PWMN_Start>:
 8004cfe:	b510      	push	{r4, lr}
 8004d00:	4604      	mov	r4, r0
 8004d02:	2204      	movs	r2, #4
 8004d04:	6800      	ldr	r0, [r0, #0]
 8004d06:	f7ff ffee 	bl	8004ce6 <TIM_CCxNChannelCmd>
 8004d0a:	6823      	ldr	r3, [r4, #0]
 8004d0c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004d0e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004d12:	645a      	str	r2, [r3, #68]	; 0x44
 8004d14:	681a      	ldr	r2, [r3, #0]
 8004d16:	f042 0201 	orr.w	r2, r2, #1
 8004d1a:	601a      	str	r2, [r3, #0]
 8004d1c:	2000      	movs	r0, #0
 8004d1e:	bd10      	pop	{r4, pc}

08004d20 <HAL_UART_MspInit>:
 8004d20:	4770      	bx	lr
	...

08004d24 <UART_SetConfig>:
 8004d24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d26:	4604      	mov	r4, r0
 8004d28:	6805      	ldr	r5, [r0, #0]
 8004d2a:	6921      	ldr	r1, [r4, #16]
 8004d2c:	68a3      	ldr	r3, [r4, #8]
 8004d2e:	69c2      	ldr	r2, [r0, #28]
 8004d30:	6828      	ldr	r0, [r5, #0]
 8004d32:	430b      	orrs	r3, r1
 8004d34:	6961      	ldr	r1, [r4, #20]
 8004d36:	430b      	orrs	r3, r1
 8004d38:	4980      	ldr	r1, [pc, #512]	; (8004f3c <UART_SetConfig+0x218>)
 8004d3a:	4313      	orrs	r3, r2
 8004d3c:	4001      	ands	r1, r0
 8004d3e:	430b      	orrs	r3, r1
 8004d40:	602b      	str	r3, [r5, #0]
 8004d42:	686b      	ldr	r3, [r5, #4]
 8004d44:	68e1      	ldr	r1, [r4, #12]
 8004d46:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8004d4a:	430b      	orrs	r3, r1
 8004d4c:	606b      	str	r3, [r5, #4]
 8004d4e:	4b7c      	ldr	r3, [pc, #496]	; (8004f40 <UART_SetConfig+0x21c>)
 8004d50:	69a1      	ldr	r1, [r4, #24]
 8004d52:	429d      	cmp	r5, r3
 8004d54:	bf1c      	itt	ne
 8004d56:	6a23      	ldrne	r3, [r4, #32]
 8004d58:	4319      	orrne	r1, r3
 8004d5a:	68ab      	ldr	r3, [r5, #8]
 8004d5c:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 8004d60:	430b      	orrs	r3, r1
 8004d62:	60ab      	str	r3, [r5, #8]
 8004d64:	4b77      	ldr	r3, [pc, #476]	; (8004f44 <UART_SetConfig+0x220>)
 8004d66:	429d      	cmp	r5, r3
 8004d68:	d115      	bne.n	8004d96 <UART_SetConfig+0x72>
 8004d6a:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8004d6e:	4976      	ldr	r1, [pc, #472]	; (8004f48 <UART_SetConfig+0x224>)
 8004d70:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004d74:	f003 0303 	and.w	r3, r3, #3
 8004d78:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004d7c:	5ccb      	ldrb	r3, [r1, r3]
 8004d7e:	f040 809e 	bne.w	8004ebe <UART_SetConfig+0x19a>
 8004d82:	2b08      	cmp	r3, #8
 8004d84:	f200 80d6 	bhi.w	8004f34 <UART_SetConfig+0x210>
 8004d88:	e8df f003 	tbb	[pc, r3]
 8004d8c:	d4888573 	.word	0xd4888573
 8004d90:	d4d4d491 	.word	0xd4d4d491
 8004d94:	94          	.byte	0x94
 8004d95:	00          	.byte	0x00
 8004d96:	4b6d      	ldr	r3, [pc, #436]	; (8004f4c <UART_SetConfig+0x228>)
 8004d98:	429d      	cmp	r5, r3
 8004d9a:	d107      	bne.n	8004dac <UART_SetConfig+0x88>
 8004d9c:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8004da0:	496b      	ldr	r1, [pc, #428]	; (8004f50 <UART_SetConfig+0x22c>)
 8004da2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004da6:	f003 030c 	and.w	r3, r3, #12
 8004daa:	e7e5      	b.n	8004d78 <UART_SetConfig+0x54>
 8004dac:	4b64      	ldr	r3, [pc, #400]	; (8004f40 <UART_SetConfig+0x21c>)
 8004dae:	429d      	cmp	r5, r3
 8004db0:	f040 80bc 	bne.w	8004f2c <UART_SetConfig+0x208>
 8004db4:	f503 33c8 	add.w	r3, r3, #102400	; 0x19000
 8004db8:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8004dbc:	f405 6540 	and.w	r5, r5, #3072	; 0xc00
 8004dc0:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8004dc4:	d026      	beq.n	8004e14 <UART_SetConfig+0xf0>
 8004dc6:	d802      	bhi.n	8004dce <UART_SetConfig+0xaa>
 8004dc8:	b1f5      	cbz	r5, 8004e08 <UART_SetConfig+0xe4>
 8004dca:	2201      	movs	r2, #1
 8004dcc:	e03c      	b.n	8004e48 <UART_SetConfig+0x124>
 8004dce:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8004dd2:	d006      	beq.n	8004de2 <UART_SetConfig+0xbe>
 8004dd4:	f5b5 6f40 	cmp.w	r5, #3072	; 0xc00
 8004dd8:	d1f7      	bne.n	8004dca <UART_SetConfig+0xa6>
 8004dda:	2508      	movs	r5, #8
 8004ddc:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8004de0:	e001      	b.n	8004de6 <UART_SetConfig+0xc2>
 8004de2:	485c      	ldr	r0, [pc, #368]	; (8004f54 <UART_SetConfig+0x230>)
 8004de4:	2502      	movs	r5, #2
 8004de6:	6862      	ldr	r2, [r4, #4]
 8004de8:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8004dec:	4283      	cmp	r3, r0
 8004dee:	d8ec      	bhi.n	8004dca <UART_SetConfig+0xa6>
 8004df0:	ebb0 3f02 	cmp.w	r0, r2, lsl #12
 8004df4:	d8e9      	bhi.n	8004dca <UART_SetConfig+0xa6>
 8004df6:	2d08      	cmp	r5, #8
 8004df8:	d839      	bhi.n	8004e6e <UART_SetConfig+0x14a>
 8004dfa:	e8df f005 	tbb	[pc, r5]
 8004dfe:	380f      	.short	0x380f
 8004e00:	382f3827 	.word	0x382f3827
 8004e04:	3838      	.short	0x3838
 8004e06:	32          	.byte	0x32
 8004e07:	00          	.byte	0x00
 8004e08:	f000 fdc2 	bl	8005990 <HAL_RCC_GetPCLK1Freq>
 8004e0c:	2800      	cmp	r0, #0
 8004e0e:	d1ea      	bne.n	8004de6 <UART_SetConfig+0xc2>
 8004e10:	2200      	movs	r2, #0
 8004e12:	e019      	b.n	8004e48 <UART_SetConfig+0x124>
 8004e14:	f000 fa02 	bl	800521c <HAL_RCC_GetSysClockFreq>
 8004e18:	2504      	movs	r5, #4
 8004e1a:	e7f7      	b.n	8004e0c <UART_SetConfig+0xe8>
 8004e1c:	f000 fdb8 	bl	8005990 <HAL_RCC_GetPCLK1Freq>
 8004e20:	6862      	ldr	r2, [r4, #4]
 8004e22:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004e26:	0856      	lsrs	r6, r2, #1
 8004e28:	2700      	movs	r7, #0
 8004e2a:	fbe1 6700 	umlal	r6, r7, r1, r0
 8004e2e:	2300      	movs	r3, #0
 8004e30:	4630      	mov	r0, r6
 8004e32:	4639      	mov	r1, r7
 8004e34:	f002 f8d0 	bl	8006fd8 <__aeabi_uldivmod>
 8004e38:	2200      	movs	r2, #0
 8004e3a:	4b47      	ldr	r3, [pc, #284]	; (8004f58 <UART_SetConfig+0x234>)
 8004e3c:	f5a0 7140 	sub.w	r1, r0, #768	; 0x300
 8004e40:	4299      	cmp	r1, r3
 8004e42:	d8c2      	bhi.n	8004dca <UART_SetConfig+0xa6>
 8004e44:	6823      	ldr	r3, [r4, #0]
 8004e46:	60d8      	str	r0, [r3, #12]
 8004e48:	4610      	mov	r0, r2
 8004e4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004e4c:	4843      	ldr	r0, [pc, #268]	; (8004f5c <UART_SetConfig+0x238>)
 8004e4e:	0855      	lsrs	r5, r2, #1
 8004e50:	2300      	movs	r3, #0
 8004e52:	2100      	movs	r1, #0
 8004e54:	1940      	adds	r0, r0, r5
 8004e56:	f141 0100 	adc.w	r1, r1, #0
 8004e5a:	e7eb      	b.n	8004e34 <UART_SetConfig+0x110>
 8004e5c:	f000 f9de 	bl	800521c <HAL_RCC_GetSysClockFreq>
 8004e60:	e7de      	b.n	8004e20 <UART_SetConfig+0xfc>
 8004e62:	0850      	lsrs	r0, r2, #1
 8004e64:	2100      	movs	r1, #0
 8004e66:	2300      	movs	r3, #0
 8004e68:	f510 0000 	adds.w	r0, r0, #8388608	; 0x800000
 8004e6c:	e7f3      	b.n	8004e56 <UART_SetConfig+0x132>
 8004e6e:	2201      	movs	r2, #1
 8004e70:	e7e3      	b.n	8004e3a <UART_SetConfig+0x116>
 8004e72:	f000 fd8d 	bl	8005990 <HAL_RCC_GetPCLK1Freq>
 8004e76:	6861      	ldr	r1, [r4, #4]
 8004e78:	084a      	lsrs	r2, r1, #1
 8004e7a:	eb02 0340 	add.w	r3, r2, r0, lsl #1
 8004e7e:	fbb3 f3f1 	udiv	r3, r3, r1
 8004e82:	b29b      	uxth	r3, r3
 8004e84:	2200      	movs	r2, #0
 8004e86:	f023 010f 	bic.w	r1, r3, #15
 8004e8a:	6820      	ldr	r0, [r4, #0]
 8004e8c:	f3c3 0342 	ubfx	r3, r3, #1, #3
 8004e90:	430b      	orrs	r3, r1
 8004e92:	60c3      	str	r3, [r0, #12]
 8004e94:	e7d8      	b.n	8004e48 <UART_SetConfig+0x124>
 8004e96:	f000 fd93 	bl	80059c0 <HAL_RCC_GetPCLK2Freq>
 8004e9a:	e7ec      	b.n	8004e76 <UART_SetConfig+0x152>
 8004e9c:	6860      	ldr	r0, [r4, #4]
 8004e9e:	0843      	lsrs	r3, r0, #1
 8004ea0:	f103 73f4 	add.w	r3, r3, #31981568	; 0x1e80000
 8004ea4:	f503 4390 	add.w	r3, r3, #18432	; 0x4800
 8004ea8:	fbb3 f3f0 	udiv	r3, r3, r0
 8004eac:	e7e9      	b.n	8004e82 <UART_SetConfig+0x15e>
 8004eae:	f000 f9b5 	bl	800521c <HAL_RCC_GetSysClockFreq>
 8004eb2:	e7e0      	b.n	8004e76 <UART_SetConfig+0x152>
 8004eb4:	6860      	ldr	r0, [r4, #4]
 8004eb6:	0843      	lsrs	r3, r0, #1
 8004eb8:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8004ebc:	e7f4      	b.n	8004ea8 <UART_SetConfig+0x184>
 8004ebe:	2b08      	cmp	r3, #8
 8004ec0:	d883      	bhi.n	8004dca <UART_SetConfig+0xa6>
 8004ec2:	a201      	add	r2, pc, #4	; (adr r2, 8004ec8 <UART_SetConfig+0x1a4>)
 8004ec4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004ec8:	08004eed 	.word	0x08004eed
 8004ecc:	08004f01 	.word	0x08004f01
 8004ed0:	08004f07 	.word	0x08004f07
 8004ed4:	08004dcb 	.word	0x08004dcb
 8004ed8:	08004f1d 	.word	0x08004f1d
 8004edc:	08004dcb 	.word	0x08004dcb
 8004ee0:	08004dcb 	.word	0x08004dcb
 8004ee4:	08004dcb 	.word	0x08004dcb
 8004ee8:	08004f23 	.word	0x08004f23
 8004eec:	f000 fd50 	bl	8005990 <HAL_RCC_GetPCLK1Freq>
 8004ef0:	6863      	ldr	r3, [r4, #4]
 8004ef2:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8004ef6:	fbb0 f0f3 	udiv	r0, r0, r3
 8004efa:	b280      	uxth	r0, r0
 8004efc:	60e8      	str	r0, [r5, #12]
 8004efe:	e787      	b.n	8004e10 <UART_SetConfig+0xec>
 8004f00:	f000 fd5e 	bl	80059c0 <HAL_RCC_GetPCLK2Freq>
 8004f04:	e7f4      	b.n	8004ef0 <UART_SetConfig+0x1cc>
 8004f06:	6862      	ldr	r2, [r4, #4]
 8004f08:	0853      	lsrs	r3, r2, #1
 8004f0a:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 8004f0e:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 8004f12:	fbb3 f3f2 	udiv	r3, r3, r2
 8004f16:	b29b      	uxth	r3, r3
 8004f18:	60eb      	str	r3, [r5, #12]
 8004f1a:	e779      	b.n	8004e10 <UART_SetConfig+0xec>
 8004f1c:	f000 f97e 	bl	800521c <HAL_RCC_GetSysClockFreq>
 8004f20:	e7e6      	b.n	8004ef0 <UART_SetConfig+0x1cc>
 8004f22:	6862      	ldr	r2, [r4, #4]
 8004f24:	0853      	lsrs	r3, r2, #1
 8004f26:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8004f2a:	e7f2      	b.n	8004f12 <UART_SetConfig+0x1ee>
 8004f2c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004f30:	f47f af4b 	bne.w	8004dca <UART_SetConfig+0xa6>
 8004f34:	2201      	movs	r2, #1
 8004f36:	2300      	movs	r3, #0
 8004f38:	e7a5      	b.n	8004e86 <UART_SetConfig+0x162>
 8004f3a:	bf00      	nop
 8004f3c:	efff69f3 	.word	0xefff69f3
 8004f40:	40008000 	.word	0x40008000
 8004f44:	40013800 	.word	0x40013800
 8004f48:	080087b0 	.word	0x080087b0
 8004f4c:	40004400 	.word	0x40004400
 8004f50:	080087b4 	.word	0x080087b4
 8004f54:	00f42400 	.word	0x00f42400
 8004f58:	000ffcff 	.word	0x000ffcff
 8004f5c:	f4240000 	.word	0xf4240000

08004f60 <UART_AdvFeatureConfig>:
 8004f60:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004f62:	07da      	lsls	r2, r3, #31
 8004f64:	b510      	push	{r4, lr}
 8004f66:	d506      	bpl.n	8004f76 <UART_AdvFeatureConfig+0x16>
 8004f68:	6801      	ldr	r1, [r0, #0]
 8004f6a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8004f6c:	684a      	ldr	r2, [r1, #4]
 8004f6e:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8004f72:	4322      	orrs	r2, r4
 8004f74:	604a      	str	r2, [r1, #4]
 8004f76:	079c      	lsls	r4, r3, #30
 8004f78:	d506      	bpl.n	8004f88 <UART_AdvFeatureConfig+0x28>
 8004f7a:	6801      	ldr	r1, [r0, #0]
 8004f7c:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8004f7e:	684a      	ldr	r2, [r1, #4]
 8004f80:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004f84:	4322      	orrs	r2, r4
 8004f86:	604a      	str	r2, [r1, #4]
 8004f88:	0759      	lsls	r1, r3, #29
 8004f8a:	d506      	bpl.n	8004f9a <UART_AdvFeatureConfig+0x3a>
 8004f8c:	6801      	ldr	r1, [r0, #0]
 8004f8e:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8004f90:	684a      	ldr	r2, [r1, #4]
 8004f92:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004f96:	4322      	orrs	r2, r4
 8004f98:	604a      	str	r2, [r1, #4]
 8004f9a:	071a      	lsls	r2, r3, #28
 8004f9c:	d506      	bpl.n	8004fac <UART_AdvFeatureConfig+0x4c>
 8004f9e:	6801      	ldr	r1, [r0, #0]
 8004fa0:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8004fa2:	684a      	ldr	r2, [r1, #4]
 8004fa4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004fa8:	4322      	orrs	r2, r4
 8004faa:	604a      	str	r2, [r1, #4]
 8004fac:	06dc      	lsls	r4, r3, #27
 8004fae:	d506      	bpl.n	8004fbe <UART_AdvFeatureConfig+0x5e>
 8004fb0:	6801      	ldr	r1, [r0, #0]
 8004fb2:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8004fb4:	688a      	ldr	r2, [r1, #8]
 8004fb6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004fba:	4322      	orrs	r2, r4
 8004fbc:	608a      	str	r2, [r1, #8]
 8004fbe:	0699      	lsls	r1, r3, #26
 8004fc0:	d506      	bpl.n	8004fd0 <UART_AdvFeatureConfig+0x70>
 8004fc2:	6801      	ldr	r1, [r0, #0]
 8004fc4:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8004fc6:	688a      	ldr	r2, [r1, #8]
 8004fc8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004fcc:	4322      	orrs	r2, r4
 8004fce:	608a      	str	r2, [r1, #8]
 8004fd0:	065a      	lsls	r2, r3, #25
 8004fd2:	d50f      	bpl.n	8004ff4 <UART_AdvFeatureConfig+0x94>
 8004fd4:	6801      	ldr	r1, [r0, #0]
 8004fd6:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8004fd8:	684a      	ldr	r2, [r1, #4]
 8004fda:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8004fde:	4322      	orrs	r2, r4
 8004fe0:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8004fe4:	604a      	str	r2, [r1, #4]
 8004fe6:	d105      	bne.n	8004ff4 <UART_AdvFeatureConfig+0x94>
 8004fe8:	684a      	ldr	r2, [r1, #4]
 8004fea:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8004fec:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8004ff0:	4322      	orrs	r2, r4
 8004ff2:	604a      	str	r2, [r1, #4]
 8004ff4:	061b      	lsls	r3, r3, #24
 8004ff6:	d506      	bpl.n	8005006 <UART_AdvFeatureConfig+0xa6>
 8004ff8:	6802      	ldr	r2, [r0, #0]
 8004ffa:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8004ffc:	6853      	ldr	r3, [r2, #4]
 8004ffe:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8005002:	430b      	orrs	r3, r1
 8005004:	6053      	str	r3, [r2, #4]
 8005006:	bd10      	pop	{r4, pc}

08005008 <UART_WaitOnFlagUntilTimeout>:
 8005008:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800500c:	9d06      	ldr	r5, [sp, #24]
 800500e:	4604      	mov	r4, r0
 8005010:	460f      	mov	r7, r1
 8005012:	4616      	mov	r6, r2
 8005014:	4698      	mov	r8, r3
 8005016:	6821      	ldr	r1, [r4, #0]
 8005018:	69ca      	ldr	r2, [r1, #28]
 800501a:	ea37 0302 	bics.w	r3, r7, r2
 800501e:	bf0c      	ite	eq
 8005020:	2201      	moveq	r2, #1
 8005022:	2200      	movne	r2, #0
 8005024:	42b2      	cmp	r2, r6
 8005026:	d002      	beq.n	800502e <UART_WaitOnFlagUntilTimeout+0x26>
 8005028:	2000      	movs	r0, #0
 800502a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800502e:	1c6b      	adds	r3, r5, #1
 8005030:	d0f2      	beq.n	8005018 <UART_WaitOnFlagUntilTimeout+0x10>
 8005032:	b99d      	cbnz	r5, 800505c <UART_WaitOnFlagUntilTimeout+0x54>
 8005034:	6823      	ldr	r3, [r4, #0]
 8005036:	681a      	ldr	r2, [r3, #0]
 8005038:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800503c:	601a      	str	r2, [r3, #0]
 800503e:	689a      	ldr	r2, [r3, #8]
 8005040:	f022 0201 	bic.w	r2, r2, #1
 8005044:	609a      	str	r2, [r3, #8]
 8005046:	2320      	movs	r3, #32
 8005048:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800504c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8005050:	2300      	movs	r3, #0
 8005052:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 8005056:	2003      	movs	r0, #3
 8005058:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800505c:	f000 fd2a 	bl	8005ab4 <HAL_GetTick>
 8005060:	eba0 0008 	sub.w	r0, r0, r8
 8005064:	4285      	cmp	r5, r0
 8005066:	d2d6      	bcs.n	8005016 <UART_WaitOnFlagUntilTimeout+0xe>
 8005068:	e7e4      	b.n	8005034 <UART_WaitOnFlagUntilTimeout+0x2c>

0800506a <UART_CheckIdleState>:
 800506a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800506c:	4604      	mov	r4, r0
 800506e:	2600      	movs	r6, #0
 8005070:	66c6      	str	r6, [r0, #108]	; 0x6c
 8005072:	f000 fd1f 	bl	8005ab4 <HAL_GetTick>
 8005076:	6823      	ldr	r3, [r4, #0]
 8005078:	681b      	ldr	r3, [r3, #0]
 800507a:	071a      	lsls	r2, r3, #28
 800507c:	4605      	mov	r5, r0
 800507e:	d417      	bmi.n	80050b0 <UART_CheckIdleState+0x46>
 8005080:	6823      	ldr	r3, [r4, #0]
 8005082:	681b      	ldr	r3, [r3, #0]
 8005084:	075b      	lsls	r3, r3, #29
 8005086:	d50a      	bpl.n	800509e <UART_CheckIdleState+0x34>
 8005088:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800508c:	9300      	str	r3, [sp, #0]
 800508e:	2200      	movs	r2, #0
 8005090:	462b      	mov	r3, r5
 8005092:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8005096:	4620      	mov	r0, r4
 8005098:	f7ff ffb6 	bl	8005008 <UART_WaitOnFlagUntilTimeout>
 800509c:	b9a0      	cbnz	r0, 80050c8 <UART_CheckIdleState+0x5e>
 800509e:	2320      	movs	r3, #32
 80050a0:	2000      	movs	r0, #0
 80050a2:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 80050a6:	f884 0068 	strb.w	r0, [r4, #104]	; 0x68
 80050aa:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80050ae:	e00c      	b.n	80050ca <UART_CheckIdleState+0x60>
 80050b0:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80050b4:	9300      	str	r3, [sp, #0]
 80050b6:	4632      	mov	r2, r6
 80050b8:	4603      	mov	r3, r0
 80050ba:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80050be:	4620      	mov	r0, r4
 80050c0:	f7ff ffa2 	bl	8005008 <UART_WaitOnFlagUntilTimeout>
 80050c4:	2800      	cmp	r0, #0
 80050c6:	d0db      	beq.n	8005080 <UART_CheckIdleState+0x16>
 80050c8:	2003      	movs	r0, #3
 80050ca:	b002      	add	sp, #8
 80050cc:	bd70      	pop	{r4, r5, r6, pc}

080050ce <HAL_UART_Init>:
 80050ce:	b510      	push	{r4, lr}
 80050d0:	4604      	mov	r4, r0
 80050d2:	b360      	cbz	r0, 800512e <HAL_UART_Init+0x60>
 80050d4:	f890 3069 	ldrb.w	r3, [r0, #105]	; 0x69
 80050d8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80050dc:	b91b      	cbnz	r3, 80050e6 <HAL_UART_Init+0x18>
 80050de:	f880 2068 	strb.w	r2, [r0, #104]	; 0x68
 80050e2:	f7ff fe1d 	bl	8004d20 <HAL_UART_MspInit>
 80050e6:	6822      	ldr	r2, [r4, #0]
 80050e8:	2324      	movs	r3, #36	; 0x24
 80050ea:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 80050ee:	6813      	ldr	r3, [r2, #0]
 80050f0:	f023 0301 	bic.w	r3, r3, #1
 80050f4:	6013      	str	r3, [r2, #0]
 80050f6:	4620      	mov	r0, r4
 80050f8:	f7ff fe14 	bl	8004d24 <UART_SetConfig>
 80050fc:	2801      	cmp	r0, #1
 80050fe:	d016      	beq.n	800512e <HAL_UART_Init+0x60>
 8005100:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005102:	b113      	cbz	r3, 800510a <HAL_UART_Init+0x3c>
 8005104:	4620      	mov	r0, r4
 8005106:	f7ff ff2b 	bl	8004f60 <UART_AdvFeatureConfig>
 800510a:	6823      	ldr	r3, [r4, #0]
 800510c:	685a      	ldr	r2, [r3, #4]
 800510e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8005112:	605a      	str	r2, [r3, #4]
 8005114:	689a      	ldr	r2, [r3, #8]
 8005116:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800511a:	609a      	str	r2, [r3, #8]
 800511c:	681a      	ldr	r2, [r3, #0]
 800511e:	f042 0201 	orr.w	r2, r2, #1
 8005122:	4620      	mov	r0, r4
 8005124:	601a      	str	r2, [r3, #0]
 8005126:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800512a:	f7ff bf9e 	b.w	800506a <UART_CheckIdleState>
 800512e:	2001      	movs	r0, #1
 8005130:	bd10      	pop	{r4, pc}
	...

08005134 <HAL_NVIC_SetPriorityGrouping>:
 8005134:	4a07      	ldr	r2, [pc, #28]	; (8005154 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8005136:	68d3      	ldr	r3, [r2, #12]
 8005138:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800513c:	041b      	lsls	r3, r3, #16
 800513e:	0c1b      	lsrs	r3, r3, #16
 8005140:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005144:	0200      	lsls	r0, r0, #8
 8005146:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800514a:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 800514e:	4303      	orrs	r3, r0
 8005150:	60d3      	str	r3, [r2, #12]
 8005152:	4770      	bx	lr
 8005154:	e000ed00 	.word	0xe000ed00

08005158 <HAL_PWR_EnterSLEEPMode>:
 8005158:	4b0d      	ldr	r3, [pc, #52]	; (8005190 <HAL_PWR_EnterSLEEPMode+0x38>)
 800515a:	b510      	push	{r4, lr}
 800515c:	695b      	ldr	r3, [r3, #20]
 800515e:	460c      	mov	r4, r1
 8005160:	b960      	cbnz	r0, 800517c <HAL_PWR_EnterSLEEPMode+0x24>
 8005162:	059a      	lsls	r2, r3, #22
 8005164:	d501      	bpl.n	800516a <HAL_PWR_EnterSLEEPMode+0x12>
 8005166:	f000 fc71 	bl	8005a4c <HAL_PWREx_DisableLowPowerRunMode>
 800516a:	4a0a      	ldr	r2, [pc, #40]	; (8005194 <HAL_PWR_EnterSLEEPMode+0x3c>)
 800516c:	6913      	ldr	r3, [r2, #16]
 800516e:	2c01      	cmp	r4, #1
 8005170:	f023 0304 	bic.w	r3, r3, #4
 8005174:	6113      	str	r3, [r2, #16]
 8005176:	d106      	bne.n	8005186 <HAL_PWR_EnterSLEEPMode+0x2e>
 8005178:	bf30      	wfi
 800517a:	bd10      	pop	{r4, pc}
 800517c:	059b      	lsls	r3, r3, #22
 800517e:	d4f4      	bmi.n	800516a <HAL_PWR_EnterSLEEPMode+0x12>
 8005180:	f000 fc5c 	bl	8005a3c <HAL_PWREx_EnableLowPowerRunMode>
 8005184:	e7f1      	b.n	800516a <HAL_PWR_EnterSLEEPMode+0x12>
 8005186:	bf40      	sev
 8005188:	bf20      	wfe
 800518a:	bf20      	wfe
 800518c:	bd10      	pop	{r4, pc}
 800518e:	bf00      	nop
 8005190:	40007000 	.word	0x40007000
 8005194:	e000ed00 	.word	0xe000ed00

08005198 <RCC_SetFlashLatencyFromMSIRange>:
 8005198:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800519a:	4d1e      	ldr	r5, [pc, #120]	; (8005214 <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 800519c:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800519e:	00da      	lsls	r2, r3, #3
 80051a0:	4604      	mov	r4, r0
 80051a2:	d518      	bpl.n	80051d6 <RCC_SetFlashLatencyFromMSIRange+0x3e>
 80051a4:	f000 fc42 	bl	8005a2c <HAL_PWREx_GetVoltageRange>
 80051a8:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80051ac:	d123      	bne.n	80051f6 <RCC_SetFlashLatencyFromMSIRange+0x5e>
 80051ae:	2c80      	cmp	r4, #128	; 0x80
 80051b0:	d929      	bls.n	8005206 <RCC_SetFlashLatencyFromMSIRange+0x6e>
 80051b2:	2ca0      	cmp	r4, #160	; 0xa0
 80051b4:	bf8c      	ite	hi
 80051b6:	2002      	movhi	r0, #2
 80051b8:	2001      	movls	r0, #1
 80051ba:	4a17      	ldr	r2, [pc, #92]	; (8005218 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 80051bc:	6813      	ldr	r3, [r2, #0]
 80051be:	f023 0307 	bic.w	r3, r3, #7
 80051c2:	4303      	orrs	r3, r0
 80051c4:	6013      	str	r3, [r2, #0]
 80051c6:	6813      	ldr	r3, [r2, #0]
 80051c8:	f003 0307 	and.w	r3, r3, #7
 80051cc:	1a18      	subs	r0, r3, r0
 80051ce:	bf18      	it	ne
 80051d0:	2001      	movne	r0, #1
 80051d2:	b003      	add	sp, #12
 80051d4:	bd30      	pop	{r4, r5, pc}
 80051d6:	6dab      	ldr	r3, [r5, #88]	; 0x58
 80051d8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80051dc:	65ab      	str	r3, [r5, #88]	; 0x58
 80051de:	6dab      	ldr	r3, [r5, #88]	; 0x58
 80051e0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80051e4:	9301      	str	r3, [sp, #4]
 80051e6:	9b01      	ldr	r3, [sp, #4]
 80051e8:	f000 fc20 	bl	8005a2c <HAL_PWREx_GetVoltageRange>
 80051ec:	6dab      	ldr	r3, [r5, #88]	; 0x58
 80051ee:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80051f2:	65ab      	str	r3, [r5, #88]	; 0x58
 80051f4:	e7d8      	b.n	80051a8 <RCC_SetFlashLatencyFromMSIRange+0x10>
 80051f6:	2c80      	cmp	r4, #128	; 0x80
 80051f8:	d807      	bhi.n	800520a <RCC_SetFlashLatencyFromMSIRange+0x72>
 80051fa:	d008      	beq.n	800520e <RCC_SetFlashLatencyFromMSIRange+0x76>
 80051fc:	f1a4 0370 	sub.w	r3, r4, #112	; 0x70
 8005200:	4258      	negs	r0, r3
 8005202:	4158      	adcs	r0, r3
 8005204:	e7d9      	b.n	80051ba <RCC_SetFlashLatencyFromMSIRange+0x22>
 8005206:	2000      	movs	r0, #0
 8005208:	e7d7      	b.n	80051ba <RCC_SetFlashLatencyFromMSIRange+0x22>
 800520a:	2003      	movs	r0, #3
 800520c:	e7d5      	b.n	80051ba <RCC_SetFlashLatencyFromMSIRange+0x22>
 800520e:	2002      	movs	r0, #2
 8005210:	e7d3      	b.n	80051ba <RCC_SetFlashLatencyFromMSIRange+0x22>
 8005212:	bf00      	nop
 8005214:	40021000 	.word	0x40021000
 8005218:	40022000 	.word	0x40022000

0800521c <HAL_RCC_GetSysClockFreq>:
 800521c:	4b46      	ldr	r3, [pc, #280]	; (8005338 <HAL_RCC_GetSysClockFreq+0x11c>)
 800521e:	689a      	ldr	r2, [r3, #8]
 8005220:	f012 0f0c 	tst.w	r2, #12
 8005224:	b510      	push	{r4, lr}
 8005226:	d009      	beq.n	800523c <HAL_RCC_GetSysClockFreq+0x20>
 8005228:	689a      	ldr	r2, [r3, #8]
 800522a:	f002 020c 	and.w	r2, r2, #12
 800522e:	2a0c      	cmp	r2, #12
 8005230:	d148      	bne.n	80052c4 <HAL_RCC_GetSysClockFreq+0xa8>
 8005232:	68da      	ldr	r2, [r3, #12]
 8005234:	f002 0203 	and.w	r2, r2, #3
 8005238:	2a01      	cmp	r2, #1
 800523a:	d143      	bne.n	80052c4 <HAL_RCC_GetSysClockFreq+0xa8>
 800523c:	681a      	ldr	r2, [r3, #0]
 800523e:	0712      	lsls	r2, r2, #28
 8005240:	d437      	bmi.n	80052b2 <HAL_RCC_GetSysClockFreq+0x96>
 8005242:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8005246:	f44f 6170 	mov.w	r1, #3840	; 0xf00
 800524a:	fa91 f1a1 	rbit	r1, r1
 800524e:	fab1 f181 	clz	r1, r1
 8005252:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
 8005256:	40ca      	lsrs	r2, r1
 8005258:	4938      	ldr	r1, [pc, #224]	; (800533c <HAL_RCC_GetSysClockFreq+0x120>)
 800525a:	f851 4022 	ldr.w	r4, [r1, r2, lsl #2]
 800525e:	689a      	ldr	r2, [r3, #8]
 8005260:	f012 0f0c 	tst.w	r2, #12
 8005264:	bf0c      	ite	eq
 8005266:	4620      	moveq	r0, r4
 8005268:	2000      	movne	r0, #0
 800526a:	689a      	ldr	r2, [r3, #8]
 800526c:	f002 020c 	and.w	r2, r2, #12
 8005270:	2a0c      	cmp	r2, #12
 8005272:	d154      	bne.n	800531e <HAL_RCC_GetSysClockFreq+0x102>
 8005274:	68da      	ldr	r2, [r3, #12]
 8005276:	68d8      	ldr	r0, [r3, #12]
 8005278:	2170      	movs	r1, #112	; 0x70
 800527a:	fa91 f1a1 	rbit	r1, r1
 800527e:	fab1 f181 	clz	r1, r1
 8005282:	f000 0070 	and.w	r0, r0, #112	; 0x70
 8005286:	40c8      	lsrs	r0, r1
 8005288:	1c41      	adds	r1, r0, #1
 800528a:	f002 0003 	and.w	r0, r2, #3
 800528e:	2802      	cmp	r0, #2
 8005290:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 8005294:	d028      	beq.n	80052e8 <HAL_RCC_GetSysClockFreq+0xcc>
 8005296:	2803      	cmp	r0, #3
 8005298:	d042      	beq.n	8005320 <HAL_RCC_GetSysClockFreq+0x104>
 800529a:	68d8      	ldr	r0, [r3, #12]
 800529c:	fa92 f2a2 	rbit	r2, r2
 80052a0:	fab2 f282 	clz	r2, r2
 80052a4:	f400 40fe 	and.w	r0, r0, #32512	; 0x7f00
 80052a8:	40d0      	lsrs	r0, r2
 80052aa:	fbb4 f1f1 	udiv	r1, r4, r1
 80052ae:	4348      	muls	r0, r1
 80052b0:	e027      	b.n	8005302 <HAL_RCC_GetSysClockFreq+0xe6>
 80052b2:	681a      	ldr	r2, [r3, #0]
 80052b4:	21f0      	movs	r1, #240	; 0xf0
 80052b6:	fa91 f1a1 	rbit	r1, r1
 80052ba:	fab1 f181 	clz	r1, r1
 80052be:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80052c2:	e7c8      	b.n	8005256 <HAL_RCC_GetSysClockFreq+0x3a>
 80052c4:	689a      	ldr	r2, [r3, #8]
 80052c6:	f002 020c 	and.w	r2, r2, #12
 80052ca:	2a04      	cmp	r2, #4
 80052cc:	d007      	beq.n	80052de <HAL_RCC_GetSysClockFreq+0xc2>
 80052ce:	689a      	ldr	r2, [r3, #8]
 80052d0:	f002 020c 	and.w	r2, r2, #12
 80052d4:	2a08      	cmp	r2, #8
 80052d6:	d104      	bne.n	80052e2 <HAL_RCC_GetSysClockFreq+0xc6>
 80052d8:	4819      	ldr	r0, [pc, #100]	; (8005340 <HAL_RCC_GetSysClockFreq+0x124>)
 80052da:	2400      	movs	r4, #0
 80052dc:	e7c5      	b.n	800526a <HAL_RCC_GetSysClockFreq+0x4e>
 80052de:	4819      	ldr	r0, [pc, #100]	; (8005344 <HAL_RCC_GetSysClockFreq+0x128>)
 80052e0:	e7fb      	b.n	80052da <HAL_RCC_GetSysClockFreq+0xbe>
 80052e2:	2000      	movs	r0, #0
 80052e4:	4604      	mov	r4, r0
 80052e6:	e7c0      	b.n	800526a <HAL_RCC_GetSysClockFreq+0x4e>
 80052e8:	68d8      	ldr	r0, [r3, #12]
 80052ea:	fa92 f2a2 	rbit	r2, r2
 80052ee:	f400 40fe 	and.w	r0, r0, #32512	; 0x7f00
 80052f2:	fab2 f282 	clz	r2, r2
 80052f6:	fa20 f202 	lsr.w	r2, r0, r2
 80052fa:	4812      	ldr	r0, [pc, #72]	; (8005344 <HAL_RCC_GetSysClockFreq+0x128>)
 80052fc:	fbb0 f0f1 	udiv	r0, r0, r1
 8005300:	4350      	muls	r0, r2
 8005302:	68db      	ldr	r3, [r3, #12]
 8005304:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8005308:	fa92 f2a2 	rbit	r2, r2
 800530c:	fab2 f282 	clz	r2, r2
 8005310:	f003 63c0 	and.w	r3, r3, #100663296	; 0x6000000
 8005314:	40d3      	lsrs	r3, r2
 8005316:	3301      	adds	r3, #1
 8005318:	005b      	lsls	r3, r3, #1
 800531a:	fbb0 f0f3 	udiv	r0, r0, r3
 800531e:	bd10      	pop	{r4, pc}
 8005320:	68d8      	ldr	r0, [r3, #12]
 8005322:	fa92 f2a2 	rbit	r2, r2
 8005326:	f400 40fe 	and.w	r0, r0, #32512	; 0x7f00
 800532a:	fab2 f282 	clz	r2, r2
 800532e:	fa20 f202 	lsr.w	r2, r0, r2
 8005332:	4803      	ldr	r0, [pc, #12]	; (8005340 <HAL_RCC_GetSysClockFreq+0x124>)
 8005334:	e7e2      	b.n	80052fc <HAL_RCC_GetSysClockFreq+0xe0>
 8005336:	bf00      	nop
 8005338:	40021000 	.word	0x40021000
 800533c:	08008684 	.word	0x08008684
 8005340:	007a1200 	.word	0x007a1200
 8005344:	00f42400 	.word	0x00f42400

08005348 <HAL_RCC_OscConfig>:
 8005348:	6803      	ldr	r3, [r0, #0]
 800534a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800534e:	4605      	mov	r5, r0
 8005350:	06d8      	lsls	r0, r3, #27
 8005352:	d53f      	bpl.n	80053d4 <HAL_RCC_OscConfig+0x8c>
 8005354:	4ca7      	ldr	r4, [pc, #668]	; (80055f4 <HAL_RCC_OscConfig+0x2ac>)
 8005356:	68a3      	ldr	r3, [r4, #8]
 8005358:	f013 0f0c 	tst.w	r3, #12
 800535c:	d168      	bne.n	8005430 <HAL_RCC_OscConfig+0xe8>
 800535e:	6823      	ldr	r3, [r4, #0]
 8005360:	0799      	lsls	r1, r3, #30
 8005362:	d503      	bpl.n	800536c <HAL_RCC_OscConfig+0x24>
 8005364:	69ab      	ldr	r3, [r5, #24]
 8005366:	b90b      	cbnz	r3, 800536c <HAL_RCC_OscConfig+0x24>
 8005368:	2001      	movs	r0, #1
 800536a:	e085      	b.n	8005478 <HAL_RCC_OscConfig+0x130>
 800536c:	6823      	ldr	r3, [r4, #0]
 800536e:	6a28      	ldr	r0, [r5, #32]
 8005370:	071a      	lsls	r2, r3, #28
 8005372:	bf56      	itet	pl
 8005374:	f8d4 3094 	ldrpl.w	r3, [r4, #148]	; 0x94
 8005378:	6823      	ldrmi	r3, [r4, #0]
 800537a:	091b      	lsrpl	r3, r3, #4
 800537c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005380:	4283      	cmp	r3, r0
 8005382:	d240      	bcs.n	8005406 <HAL_RCC_OscConfig+0xbe>
 8005384:	f7ff ff08 	bl	8005198 <RCC_SetFlashLatencyFromMSIRange>
 8005388:	2800      	cmp	r0, #0
 800538a:	d1ed      	bne.n	8005368 <HAL_RCC_OscConfig+0x20>
 800538c:	6823      	ldr	r3, [r4, #0]
 800538e:	f043 0308 	orr.w	r3, r3, #8
 8005392:	6023      	str	r3, [r4, #0]
 8005394:	6823      	ldr	r3, [r4, #0]
 8005396:	6a2a      	ldr	r2, [r5, #32]
 8005398:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800539c:	4313      	orrs	r3, r2
 800539e:	6023      	str	r3, [r4, #0]
 80053a0:	6863      	ldr	r3, [r4, #4]
 80053a2:	69ea      	ldr	r2, [r5, #28]
 80053a4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80053a8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80053ac:	6063      	str	r3, [r4, #4]
 80053ae:	f7ff ff35 	bl	800521c <HAL_RCC_GetSysClockFreq>
 80053b2:	68a3      	ldr	r3, [r4, #8]
 80053b4:	22f0      	movs	r2, #240	; 0xf0
 80053b6:	fa92 f2a2 	rbit	r2, r2
 80053ba:	fab2 f282 	clz	r2, r2
 80053be:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80053c2:	40d3      	lsrs	r3, r2
 80053c4:	4a8c      	ldr	r2, [pc, #560]	; (80055f8 <HAL_RCC_OscConfig+0x2b0>)
 80053c6:	5cd3      	ldrb	r3, [r2, r3]
 80053c8:	40d8      	lsrs	r0, r3
 80053ca:	4b8c      	ldr	r3, [pc, #560]	; (80055fc <HAL_RCC_OscConfig+0x2b4>)
 80053cc:	6018      	str	r0, [r3, #0]
 80053ce:	200f      	movs	r0, #15
 80053d0:	f7fe f982 	bl	80036d8 <HAL_InitTick>
 80053d4:	682b      	ldr	r3, [r5, #0]
 80053d6:	07d8      	lsls	r0, r3, #31
 80053d8:	d461      	bmi.n	800549e <HAL_RCC_OscConfig+0x156>
 80053da:	682b      	ldr	r3, [r5, #0]
 80053dc:	0799      	lsls	r1, r3, #30
 80053de:	f100 80a9 	bmi.w	8005534 <HAL_RCC_OscConfig+0x1ec>
 80053e2:	682b      	ldr	r3, [r5, #0]
 80053e4:	071a      	lsls	r2, r3, #28
 80053e6:	f100 80ed 	bmi.w	80055c4 <HAL_RCC_OscConfig+0x27c>
 80053ea:	682b      	ldr	r3, [r5, #0]
 80053ec:	075b      	lsls	r3, r3, #29
 80053ee:	f100 811b 	bmi.w	8005628 <HAL_RCC_OscConfig+0x2e0>
 80053f2:	682b      	ldr	r3, [r5, #0]
 80053f4:	069a      	lsls	r2, r3, #26
 80053f6:	f100 8182 	bmi.w	80056fe <HAL_RCC_OscConfig+0x3b6>
 80053fa:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 80053fc:	2a00      	cmp	r2, #0
 80053fe:	f040 81a9 	bne.w	8005754 <HAL_RCC_OscConfig+0x40c>
 8005402:	2000      	movs	r0, #0
 8005404:	e038      	b.n	8005478 <HAL_RCC_OscConfig+0x130>
 8005406:	6823      	ldr	r3, [r4, #0]
 8005408:	f043 0308 	orr.w	r3, r3, #8
 800540c:	6023      	str	r3, [r4, #0]
 800540e:	6823      	ldr	r3, [r4, #0]
 8005410:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005414:	4303      	orrs	r3, r0
 8005416:	6023      	str	r3, [r4, #0]
 8005418:	6863      	ldr	r3, [r4, #4]
 800541a:	69ea      	ldr	r2, [r5, #28]
 800541c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005420:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005424:	6063      	str	r3, [r4, #4]
 8005426:	f7ff feb7 	bl	8005198 <RCC_SetFlashLatencyFromMSIRange>
 800542a:	2800      	cmp	r0, #0
 800542c:	d0bf      	beq.n	80053ae <HAL_RCC_OscConfig+0x66>
 800542e:	e79b      	b.n	8005368 <HAL_RCC_OscConfig+0x20>
 8005430:	69ab      	ldr	r3, [r5, #24]
 8005432:	b323      	cbz	r3, 800547e <HAL_RCC_OscConfig+0x136>
 8005434:	6823      	ldr	r3, [r4, #0]
 8005436:	f043 0301 	orr.w	r3, r3, #1
 800543a:	6023      	str	r3, [r4, #0]
 800543c:	f000 fb3a 	bl	8005ab4 <HAL_GetTick>
 8005440:	4606      	mov	r6, r0
 8005442:	6823      	ldr	r3, [r4, #0]
 8005444:	079b      	lsls	r3, r3, #30
 8005446:	d511      	bpl.n	800546c <HAL_RCC_OscConfig+0x124>
 8005448:	6823      	ldr	r3, [r4, #0]
 800544a:	f043 0308 	orr.w	r3, r3, #8
 800544e:	6023      	str	r3, [r4, #0]
 8005450:	6823      	ldr	r3, [r4, #0]
 8005452:	6a2a      	ldr	r2, [r5, #32]
 8005454:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005458:	4313      	orrs	r3, r2
 800545a:	6023      	str	r3, [r4, #0]
 800545c:	6863      	ldr	r3, [r4, #4]
 800545e:	69ea      	ldr	r2, [r5, #28]
 8005460:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005464:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005468:	6063      	str	r3, [r4, #4]
 800546a:	e7b3      	b.n	80053d4 <HAL_RCC_OscConfig+0x8c>
 800546c:	f000 fb22 	bl	8005ab4 <HAL_GetTick>
 8005470:	1b80      	subs	r0, r0, r6
 8005472:	2802      	cmp	r0, #2
 8005474:	d9e5      	bls.n	8005442 <HAL_RCC_OscConfig+0xfa>
 8005476:	2003      	movs	r0, #3
 8005478:	b002      	add	sp, #8
 800547a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800547e:	6823      	ldr	r3, [r4, #0]
 8005480:	f023 0301 	bic.w	r3, r3, #1
 8005484:	6023      	str	r3, [r4, #0]
 8005486:	f000 fb15 	bl	8005ab4 <HAL_GetTick>
 800548a:	4606      	mov	r6, r0
 800548c:	6823      	ldr	r3, [r4, #0]
 800548e:	079f      	lsls	r7, r3, #30
 8005490:	d5a0      	bpl.n	80053d4 <HAL_RCC_OscConfig+0x8c>
 8005492:	f000 fb0f 	bl	8005ab4 <HAL_GetTick>
 8005496:	1b80      	subs	r0, r0, r6
 8005498:	2802      	cmp	r0, #2
 800549a:	d9f7      	bls.n	800548c <HAL_RCC_OscConfig+0x144>
 800549c:	e7eb      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 800549e:	4c55      	ldr	r4, [pc, #340]	; (80055f4 <HAL_RCC_OscConfig+0x2ac>)
 80054a0:	68a3      	ldr	r3, [r4, #8]
 80054a2:	f003 030c 	and.w	r3, r3, #12
 80054a6:	2b08      	cmp	r3, #8
 80054a8:	d009      	beq.n	80054be <HAL_RCC_OscConfig+0x176>
 80054aa:	68a3      	ldr	r3, [r4, #8]
 80054ac:	f003 030c 	and.w	r3, r3, #12
 80054b0:	2b0c      	cmp	r3, #12
 80054b2:	d10b      	bne.n	80054cc <HAL_RCC_OscConfig+0x184>
 80054b4:	68e3      	ldr	r3, [r4, #12]
 80054b6:	f003 0303 	and.w	r3, r3, #3
 80054ba:	2b03      	cmp	r3, #3
 80054bc:	d106      	bne.n	80054cc <HAL_RCC_OscConfig+0x184>
 80054be:	6823      	ldr	r3, [r4, #0]
 80054c0:	039a      	lsls	r2, r3, #14
 80054c2:	d58a      	bpl.n	80053da <HAL_RCC_OscConfig+0x92>
 80054c4:	686b      	ldr	r3, [r5, #4]
 80054c6:	2b00      	cmp	r3, #0
 80054c8:	d187      	bne.n	80053da <HAL_RCC_OscConfig+0x92>
 80054ca:	e74d      	b.n	8005368 <HAL_RCC_OscConfig+0x20>
 80054cc:	686b      	ldr	r3, [r5, #4]
 80054ce:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80054d2:	d110      	bne.n	80054f6 <HAL_RCC_OscConfig+0x1ae>
 80054d4:	6823      	ldr	r3, [r4, #0]
 80054d6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80054da:	6023      	str	r3, [r4, #0]
 80054dc:	f000 faea 	bl	8005ab4 <HAL_GetTick>
 80054e0:	4606      	mov	r6, r0
 80054e2:	6823      	ldr	r3, [r4, #0]
 80054e4:	039b      	lsls	r3, r3, #14
 80054e6:	f53f af78 	bmi.w	80053da <HAL_RCC_OscConfig+0x92>
 80054ea:	f000 fae3 	bl	8005ab4 <HAL_GetTick>
 80054ee:	1b80      	subs	r0, r0, r6
 80054f0:	28c8      	cmp	r0, #200	; 0xc8
 80054f2:	d9f6      	bls.n	80054e2 <HAL_RCC_OscConfig+0x19a>
 80054f4:	e7bf      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 80054f6:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80054fa:	d104      	bne.n	8005506 <HAL_RCC_OscConfig+0x1be>
 80054fc:	6823      	ldr	r3, [r4, #0]
 80054fe:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005502:	6023      	str	r3, [r4, #0]
 8005504:	e7e6      	b.n	80054d4 <HAL_RCC_OscConfig+0x18c>
 8005506:	6822      	ldr	r2, [r4, #0]
 8005508:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800550c:	6022      	str	r2, [r4, #0]
 800550e:	6822      	ldr	r2, [r4, #0]
 8005510:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8005514:	6022      	str	r2, [r4, #0]
 8005516:	2b00      	cmp	r3, #0
 8005518:	d1e0      	bne.n	80054dc <HAL_RCC_OscConfig+0x194>
 800551a:	f000 facb 	bl	8005ab4 <HAL_GetTick>
 800551e:	4606      	mov	r6, r0
 8005520:	6823      	ldr	r3, [r4, #0]
 8005522:	039f      	lsls	r7, r3, #14
 8005524:	f57f af59 	bpl.w	80053da <HAL_RCC_OscConfig+0x92>
 8005528:	f000 fac4 	bl	8005ab4 <HAL_GetTick>
 800552c:	1b80      	subs	r0, r0, r6
 800552e:	28c8      	cmp	r0, #200	; 0xc8
 8005530:	d9f6      	bls.n	8005520 <HAL_RCC_OscConfig+0x1d8>
 8005532:	e7a0      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 8005534:	4c2f      	ldr	r4, [pc, #188]	; (80055f4 <HAL_RCC_OscConfig+0x2ac>)
 8005536:	68a3      	ldr	r3, [r4, #8]
 8005538:	f003 030c 	and.w	r3, r3, #12
 800553c:	2b04      	cmp	r3, #4
 800553e:	d009      	beq.n	8005554 <HAL_RCC_OscConfig+0x20c>
 8005540:	68a3      	ldr	r3, [r4, #8]
 8005542:	f003 030c 	and.w	r3, r3, #12
 8005546:	2b0c      	cmp	r3, #12
 8005548:	d119      	bne.n	800557e <HAL_RCC_OscConfig+0x236>
 800554a:	68e3      	ldr	r3, [r4, #12]
 800554c:	f003 0303 	and.w	r3, r3, #3
 8005550:	2b02      	cmp	r3, #2
 8005552:	d114      	bne.n	800557e <HAL_RCC_OscConfig+0x236>
 8005554:	6823      	ldr	r3, [r4, #0]
 8005556:	055e      	lsls	r6, r3, #21
 8005558:	d503      	bpl.n	8005562 <HAL_RCC_OscConfig+0x21a>
 800555a:	68eb      	ldr	r3, [r5, #12]
 800555c:	2b00      	cmp	r3, #0
 800555e:	f43f af03 	beq.w	8005368 <HAL_RCC_OscConfig+0x20>
 8005562:	6861      	ldr	r1, [r4, #4]
 8005564:	f04f 53f8 	mov.w	r3, #520093696	; 0x1f000000
 8005568:	fa93 f3a3 	rbit	r3, r3
 800556c:	fab3 f283 	clz	r2, r3
 8005570:	692b      	ldr	r3, [r5, #16]
 8005572:	4093      	lsls	r3, r2
 8005574:	f021 52f8 	bic.w	r2, r1, #520093696	; 0x1f000000
 8005578:	4313      	orrs	r3, r2
 800557a:	6063      	str	r3, [r4, #4]
 800557c:	e731      	b.n	80053e2 <HAL_RCC_OscConfig+0x9a>
 800557e:	68eb      	ldr	r3, [r5, #12]
 8005580:	b17b      	cbz	r3, 80055a2 <HAL_RCC_OscConfig+0x25a>
 8005582:	6823      	ldr	r3, [r4, #0]
 8005584:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005588:	6023      	str	r3, [r4, #0]
 800558a:	f000 fa93 	bl	8005ab4 <HAL_GetTick>
 800558e:	4606      	mov	r6, r0
 8005590:	6823      	ldr	r3, [r4, #0]
 8005592:	0558      	lsls	r0, r3, #21
 8005594:	d4e5      	bmi.n	8005562 <HAL_RCC_OscConfig+0x21a>
 8005596:	f000 fa8d 	bl	8005ab4 <HAL_GetTick>
 800559a:	1b80      	subs	r0, r0, r6
 800559c:	2802      	cmp	r0, #2
 800559e:	d9f7      	bls.n	8005590 <HAL_RCC_OscConfig+0x248>
 80055a0:	e769      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 80055a2:	6823      	ldr	r3, [r4, #0]
 80055a4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80055a8:	6023      	str	r3, [r4, #0]
 80055aa:	f000 fa83 	bl	8005ab4 <HAL_GetTick>
 80055ae:	4606      	mov	r6, r0
 80055b0:	6823      	ldr	r3, [r4, #0]
 80055b2:	0559      	lsls	r1, r3, #21
 80055b4:	f57f af15 	bpl.w	80053e2 <HAL_RCC_OscConfig+0x9a>
 80055b8:	f000 fa7c 	bl	8005ab4 <HAL_GetTick>
 80055bc:	1b80      	subs	r0, r0, r6
 80055be:	2802      	cmp	r0, #2
 80055c0:	d9f6      	bls.n	80055b0 <HAL_RCC_OscConfig+0x268>
 80055c2:	e758      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 80055c4:	696b      	ldr	r3, [r5, #20]
 80055c6:	4c0b      	ldr	r4, [pc, #44]	; (80055f4 <HAL_RCC_OscConfig+0x2ac>)
 80055c8:	b1d3      	cbz	r3, 8005600 <HAL_RCC_OscConfig+0x2b8>
 80055ca:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 80055ce:	f043 0301 	orr.w	r3, r3, #1
 80055d2:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80055d6:	f000 fa6d 	bl	8005ab4 <HAL_GetTick>
 80055da:	4606      	mov	r6, r0
 80055dc:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 80055e0:	079f      	lsls	r7, r3, #30
 80055e2:	f53f af02 	bmi.w	80053ea <HAL_RCC_OscConfig+0xa2>
 80055e6:	f000 fa65 	bl	8005ab4 <HAL_GetTick>
 80055ea:	1b80      	subs	r0, r0, r6
 80055ec:	2802      	cmp	r0, #2
 80055ee:	d9f5      	bls.n	80055dc <HAL_RCC_OscConfig+0x294>
 80055f0:	e741      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 80055f2:	bf00      	nop
 80055f4:	40021000 	.word	0x40021000
 80055f8:	0800866c 	.word	0x0800866c
 80055fc:	20000020 	.word	0x20000020
 8005600:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8005604:	f023 0301 	bic.w	r3, r3, #1
 8005608:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800560c:	f000 fa52 	bl	8005ab4 <HAL_GetTick>
 8005610:	4606      	mov	r6, r0
 8005612:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8005616:	0798      	lsls	r0, r3, #30
 8005618:	f57f aee7 	bpl.w	80053ea <HAL_RCC_OscConfig+0xa2>
 800561c:	f000 fa4a 	bl	8005ab4 <HAL_GetTick>
 8005620:	1b80      	subs	r0, r0, r6
 8005622:	2802      	cmp	r0, #2
 8005624:	d9f5      	bls.n	8005612 <HAL_RCC_OscConfig+0x2ca>
 8005626:	e726      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 8005628:	4c79      	ldr	r4, [pc, #484]	; (8005810 <HAL_RCC_OscConfig+0x4c8>)
 800562a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800562c:	00d9      	lsls	r1, r3, #3
 800562e:	d427      	bmi.n	8005680 <HAL_RCC_OscConfig+0x338>
 8005630:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005632:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005636:	65a3      	str	r3, [r4, #88]	; 0x58
 8005638:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800563a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800563e:	9301      	str	r3, [sp, #4]
 8005640:	9b01      	ldr	r3, [sp, #4]
 8005642:	2701      	movs	r7, #1
 8005644:	4e73      	ldr	r6, [pc, #460]	; (8005814 <HAL_RCC_OscConfig+0x4cc>)
 8005646:	6833      	ldr	r3, [r6, #0]
 8005648:	05da      	lsls	r2, r3, #23
 800564a:	d51b      	bpl.n	8005684 <HAL_RCC_OscConfig+0x33c>
 800564c:	68ab      	ldr	r3, [r5, #8]
 800564e:	2b01      	cmp	r3, #1
 8005650:	d129      	bne.n	80056a6 <HAL_RCC_OscConfig+0x35e>
 8005652:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8005656:	f043 0301 	orr.w	r3, r3, #1
 800565a:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800565e:	f000 fa29 	bl	8005ab4 <HAL_GetTick>
 8005662:	f241 3888 	movw	r8, #5000	; 0x1388
 8005666:	4606      	mov	r6, r0
 8005668:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800566c:	0798      	lsls	r0, r3, #30
 800566e:	d540      	bpl.n	80056f2 <HAL_RCC_OscConfig+0x3aa>
 8005670:	2f00      	cmp	r7, #0
 8005672:	f43f aebe 	beq.w	80053f2 <HAL_RCC_OscConfig+0xaa>
 8005676:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005678:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800567c:	65a3      	str	r3, [r4, #88]	; 0x58
 800567e:	e6b8      	b.n	80053f2 <HAL_RCC_OscConfig+0xaa>
 8005680:	2700      	movs	r7, #0
 8005682:	e7df      	b.n	8005644 <HAL_RCC_OscConfig+0x2fc>
 8005684:	6833      	ldr	r3, [r6, #0]
 8005686:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800568a:	6033      	str	r3, [r6, #0]
 800568c:	f000 fa12 	bl	8005ab4 <HAL_GetTick>
 8005690:	4680      	mov	r8, r0
 8005692:	6833      	ldr	r3, [r6, #0]
 8005694:	05db      	lsls	r3, r3, #23
 8005696:	d4d9      	bmi.n	800564c <HAL_RCC_OscConfig+0x304>
 8005698:	f000 fa0c 	bl	8005ab4 <HAL_GetTick>
 800569c:	eba0 0008 	sub.w	r0, r0, r8
 80056a0:	2802      	cmp	r0, #2
 80056a2:	d9f6      	bls.n	8005692 <HAL_RCC_OscConfig+0x34a>
 80056a4:	e6e7      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 80056a6:	2b05      	cmp	r3, #5
 80056a8:	d106      	bne.n	80056b8 <HAL_RCC_OscConfig+0x370>
 80056aa:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80056ae:	f043 0304 	orr.w	r3, r3, #4
 80056b2:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80056b6:	e7cc      	b.n	8005652 <HAL_RCC_OscConfig+0x30a>
 80056b8:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 80056bc:	f022 0201 	bic.w	r2, r2, #1
 80056c0:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 80056c4:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 80056c8:	f022 0204 	bic.w	r2, r2, #4
 80056cc:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 80056d0:	2b00      	cmp	r3, #0
 80056d2:	d1c4      	bne.n	800565e <HAL_RCC_OscConfig+0x316>
 80056d4:	f000 f9ee 	bl	8005ab4 <HAL_GetTick>
 80056d8:	f241 3888 	movw	r8, #5000	; 0x1388
 80056dc:	4606      	mov	r6, r0
 80056de:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80056e2:	0799      	lsls	r1, r3, #30
 80056e4:	d5c4      	bpl.n	8005670 <HAL_RCC_OscConfig+0x328>
 80056e6:	f000 f9e5 	bl	8005ab4 <HAL_GetTick>
 80056ea:	1b80      	subs	r0, r0, r6
 80056ec:	4540      	cmp	r0, r8
 80056ee:	d9f6      	bls.n	80056de <HAL_RCC_OscConfig+0x396>
 80056f0:	e6c1      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 80056f2:	f000 f9df 	bl	8005ab4 <HAL_GetTick>
 80056f6:	1b80      	subs	r0, r0, r6
 80056f8:	4540      	cmp	r0, r8
 80056fa:	d9b5      	bls.n	8005668 <HAL_RCC_OscConfig+0x320>
 80056fc:	e6bb      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 80056fe:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005700:	4c43      	ldr	r4, [pc, #268]	; (8005810 <HAL_RCC_OscConfig+0x4c8>)
 8005702:	b19b      	cbz	r3, 800572c <HAL_RCC_OscConfig+0x3e4>
 8005704:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8005708:	f043 0301 	orr.w	r3, r3, #1
 800570c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005710:	f000 f9d0 	bl	8005ab4 <HAL_GetTick>
 8005714:	4606      	mov	r6, r0
 8005716:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800571a:	079b      	lsls	r3, r3, #30
 800571c:	f53f ae6d 	bmi.w	80053fa <HAL_RCC_OscConfig+0xb2>
 8005720:	f000 f9c8 	bl	8005ab4 <HAL_GetTick>
 8005724:	1b80      	subs	r0, r0, r6
 8005726:	2802      	cmp	r0, #2
 8005728:	d9f5      	bls.n	8005716 <HAL_RCC_OscConfig+0x3ce>
 800572a:	e6a4      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 800572c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8005730:	f023 0301 	bic.w	r3, r3, #1
 8005734:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005738:	f000 f9bc 	bl	8005ab4 <HAL_GetTick>
 800573c:	4606      	mov	r6, r0
 800573e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8005742:	079f      	lsls	r7, r3, #30
 8005744:	f57f ae59 	bpl.w	80053fa <HAL_RCC_OscConfig+0xb2>
 8005748:	f000 f9b4 	bl	8005ab4 <HAL_GetTick>
 800574c:	1b80      	subs	r0, r0, r6
 800574e:	2802      	cmp	r0, #2
 8005750:	d9f5      	bls.n	800573e <HAL_RCC_OscConfig+0x3f6>
 8005752:	e690      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 8005754:	4c2e      	ldr	r4, [pc, #184]	; (8005810 <HAL_RCC_OscConfig+0x4c8>)
 8005756:	68a3      	ldr	r3, [r4, #8]
 8005758:	f003 030c 	and.w	r3, r3, #12
 800575c:	2b0c      	cmp	r3, #12
 800575e:	f43f ae03 	beq.w	8005368 <HAL_RCC_OscConfig+0x20>
 8005762:	6823      	ldr	r3, [r4, #0]
 8005764:	2a02      	cmp	r2, #2
 8005766:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800576a:	6023      	str	r3, [r4, #0]
 800576c:	d136      	bne.n	80057dc <HAL_RCC_OscConfig+0x494>
 800576e:	f000 f9a1 	bl	8005ab4 <HAL_GetTick>
 8005772:	4606      	mov	r6, r0
 8005774:	6823      	ldr	r3, [r4, #0]
 8005776:	0198      	lsls	r0, r3, #6
 8005778:	d42a      	bmi.n	80057d0 <HAL_RCC_OscConfig+0x488>
 800577a:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800577c:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 800577e:	06db      	lsls	r3, r3, #27
 8005780:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005784:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8005786:	4313      	orrs	r3, r2
 8005788:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 800578a:	3a01      	subs	r2, #1
 800578c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8005790:	6bea      	ldr	r2, [r5, #60]	; 0x3c
 8005792:	0852      	lsrs	r2, r2, #1
 8005794:	3a01      	subs	r2, #1
 8005796:	ea43 5342 	orr.w	r3, r3, r2, lsl #21
 800579a:	6c2a      	ldr	r2, [r5, #64]	; 0x40
 800579c:	0852      	lsrs	r2, r2, #1
 800579e:	3a01      	subs	r2, #1
 80057a0:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 80057a4:	60e3      	str	r3, [r4, #12]
 80057a6:	6823      	ldr	r3, [r4, #0]
 80057a8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80057ac:	6023      	str	r3, [r4, #0]
 80057ae:	68e3      	ldr	r3, [r4, #12]
 80057b0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80057b4:	60e3      	str	r3, [r4, #12]
 80057b6:	f000 f97d 	bl	8005ab4 <HAL_GetTick>
 80057ba:	4605      	mov	r5, r0
 80057bc:	6823      	ldr	r3, [r4, #0]
 80057be:	0199      	lsls	r1, r3, #6
 80057c0:	f53f ae1f 	bmi.w	8005402 <HAL_RCC_OscConfig+0xba>
 80057c4:	f000 f976 	bl	8005ab4 <HAL_GetTick>
 80057c8:	1b40      	subs	r0, r0, r5
 80057ca:	2802      	cmp	r0, #2
 80057cc:	d9f6      	bls.n	80057bc <HAL_RCC_OscConfig+0x474>
 80057ce:	e652      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 80057d0:	f000 f970 	bl	8005ab4 <HAL_GetTick>
 80057d4:	1b80      	subs	r0, r0, r6
 80057d6:	2802      	cmp	r0, #2
 80057d8:	d9cc      	bls.n	8005774 <HAL_RCC_OscConfig+0x42c>
 80057da:	e64c      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 80057dc:	6823      	ldr	r3, [r4, #0]
 80057de:	011a      	lsls	r2, r3, #4
 80057e0:	bf5e      	ittt	pl
 80057e2:	68e3      	ldrpl	r3, [r4, #12]
 80057e4:	f023 0303 	bicpl.w	r3, r3, #3
 80057e8:	60e3      	strpl	r3, [r4, #12]
 80057ea:	68e3      	ldr	r3, [r4, #12]
 80057ec:	f023 7388 	bic.w	r3, r3, #17825792	; 0x1100000
 80057f0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80057f4:	60e3      	str	r3, [r4, #12]
 80057f6:	f000 f95d 	bl	8005ab4 <HAL_GetTick>
 80057fa:	4605      	mov	r5, r0
 80057fc:	6823      	ldr	r3, [r4, #0]
 80057fe:	019b      	lsls	r3, r3, #6
 8005800:	f57f adff 	bpl.w	8005402 <HAL_RCC_OscConfig+0xba>
 8005804:	f000 f956 	bl	8005ab4 <HAL_GetTick>
 8005808:	1b40      	subs	r0, r0, r5
 800580a:	2802      	cmp	r0, #2
 800580c:	d9f6      	bls.n	80057fc <HAL_RCC_OscConfig+0x4b4>
 800580e:	e632      	b.n	8005476 <HAL_RCC_OscConfig+0x12e>
 8005810:	40021000 	.word	0x40021000
 8005814:	40007000 	.word	0x40007000

08005818 <HAL_RCC_ClockConfig>:
 8005818:	4a59      	ldr	r2, [pc, #356]	; (8005980 <HAL_RCC_ClockConfig+0x168>)
 800581a:	6813      	ldr	r3, [r2, #0]
 800581c:	f003 0307 	and.w	r3, r3, #7
 8005820:	428b      	cmp	r3, r1
 8005822:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005826:	4605      	mov	r5, r0
 8005828:	460e      	mov	r6, r1
 800582a:	d330      	bcc.n	800588e <HAL_RCC_ClockConfig+0x76>
 800582c:	682a      	ldr	r2, [r5, #0]
 800582e:	0791      	lsls	r1, r2, #30
 8005830:	d43a      	bmi.n	80058a8 <HAL_RCC_ClockConfig+0x90>
 8005832:	07d2      	lsls	r2, r2, #31
 8005834:	d440      	bmi.n	80058b8 <HAL_RCC_ClockConfig+0xa0>
 8005836:	4a52      	ldr	r2, [pc, #328]	; (8005980 <HAL_RCC_ClockConfig+0x168>)
 8005838:	6813      	ldr	r3, [r2, #0]
 800583a:	f003 0307 	and.w	r3, r3, #7
 800583e:	429e      	cmp	r6, r3
 8005840:	f0c0 808c 	bcc.w	800595c <HAL_RCC_ClockConfig+0x144>
 8005844:	682a      	ldr	r2, [r5, #0]
 8005846:	4c4f      	ldr	r4, [pc, #316]	; (8005984 <HAL_RCC_ClockConfig+0x16c>)
 8005848:	f012 0f04 	tst.w	r2, #4
 800584c:	f040 8091 	bne.w	8005972 <HAL_RCC_ClockConfig+0x15a>
 8005850:	0713      	lsls	r3, r2, #28
 8005852:	d506      	bpl.n	8005862 <HAL_RCC_ClockConfig+0x4a>
 8005854:	68a3      	ldr	r3, [r4, #8]
 8005856:	692a      	ldr	r2, [r5, #16]
 8005858:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 800585c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005860:	60a3      	str	r3, [r4, #8]
 8005862:	f7ff fcdb 	bl	800521c <HAL_RCC_GetSysClockFreq>
 8005866:	68a3      	ldr	r3, [r4, #8]
 8005868:	22f0      	movs	r2, #240	; 0xf0
 800586a:	fa92 f2a2 	rbit	r2, r2
 800586e:	fab2 f282 	clz	r2, r2
 8005872:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005876:	40d3      	lsrs	r3, r2
 8005878:	4a43      	ldr	r2, [pc, #268]	; (8005988 <HAL_RCC_ClockConfig+0x170>)
 800587a:	5cd3      	ldrb	r3, [r2, r3]
 800587c:	40d8      	lsrs	r0, r3
 800587e:	4b43      	ldr	r3, [pc, #268]	; (800598c <HAL_RCC_ClockConfig+0x174>)
 8005880:	6018      	str	r0, [r3, #0]
 8005882:	200f      	movs	r0, #15
 8005884:	f7fd ff28 	bl	80036d8 <HAL_InitTick>
 8005888:	2000      	movs	r0, #0
 800588a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800588e:	6813      	ldr	r3, [r2, #0]
 8005890:	f023 0307 	bic.w	r3, r3, #7
 8005894:	430b      	orrs	r3, r1
 8005896:	6013      	str	r3, [r2, #0]
 8005898:	6813      	ldr	r3, [r2, #0]
 800589a:	f003 0307 	and.w	r3, r3, #7
 800589e:	4299      	cmp	r1, r3
 80058a0:	d0c4      	beq.n	800582c <HAL_RCC_ClockConfig+0x14>
 80058a2:	2001      	movs	r0, #1
 80058a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80058a8:	4936      	ldr	r1, [pc, #216]	; (8005984 <HAL_RCC_ClockConfig+0x16c>)
 80058aa:	68a8      	ldr	r0, [r5, #8]
 80058ac:	688b      	ldr	r3, [r1, #8]
 80058ae:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80058b2:	4303      	orrs	r3, r0
 80058b4:	608b      	str	r3, [r1, #8]
 80058b6:	e7bc      	b.n	8005832 <HAL_RCC_ClockConfig+0x1a>
 80058b8:	686a      	ldr	r2, [r5, #4]
 80058ba:	4c32      	ldr	r4, [pc, #200]	; (8005984 <HAL_RCC_ClockConfig+0x16c>)
 80058bc:	2a02      	cmp	r2, #2
 80058be:	6823      	ldr	r3, [r4, #0]
 80058c0:	d11c      	bne.n	80058fc <HAL_RCC_ClockConfig+0xe4>
 80058c2:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80058c6:	d0ec      	beq.n	80058a2 <HAL_RCC_ClockConfig+0x8a>
 80058c8:	68a3      	ldr	r3, [r4, #8]
 80058ca:	f023 0303 	bic.w	r3, r3, #3
 80058ce:	4313      	orrs	r3, r2
 80058d0:	60a3      	str	r3, [r4, #8]
 80058d2:	f000 f8ef 	bl	8005ab4 <HAL_GetTick>
 80058d6:	686b      	ldr	r3, [r5, #4]
 80058d8:	2b02      	cmp	r3, #2
 80058da:	4607      	mov	r7, r0
 80058dc:	f241 3888 	movw	r8, #5000	; 0x1388
 80058e0:	d118      	bne.n	8005914 <HAL_RCC_ClockConfig+0xfc>
 80058e2:	68a3      	ldr	r3, [r4, #8]
 80058e4:	f003 030c 	and.w	r3, r3, #12
 80058e8:	2b08      	cmp	r3, #8
 80058ea:	d0a4      	beq.n	8005836 <HAL_RCC_ClockConfig+0x1e>
 80058ec:	f000 f8e2 	bl	8005ab4 <HAL_GetTick>
 80058f0:	1bc0      	subs	r0, r0, r7
 80058f2:	4540      	cmp	r0, r8
 80058f4:	d9f5      	bls.n	80058e2 <HAL_RCC_ClockConfig+0xca>
 80058f6:	2003      	movs	r0, #3
 80058f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80058fc:	2a03      	cmp	r2, #3
 80058fe:	d102      	bne.n	8005906 <HAL_RCC_ClockConfig+0xee>
 8005900:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005904:	e7df      	b.n	80058c6 <HAL_RCC_ClockConfig+0xae>
 8005906:	b912      	cbnz	r2, 800590e <HAL_RCC_ClockConfig+0xf6>
 8005908:	f013 0f02 	tst.w	r3, #2
 800590c:	e7db      	b.n	80058c6 <HAL_RCC_ClockConfig+0xae>
 800590e:	f413 6f80 	tst.w	r3, #1024	; 0x400
 8005912:	e7d8      	b.n	80058c6 <HAL_RCC_ClockConfig+0xae>
 8005914:	2b03      	cmp	r3, #3
 8005916:	d10a      	bne.n	800592e <HAL_RCC_ClockConfig+0x116>
 8005918:	68a3      	ldr	r3, [r4, #8]
 800591a:	f003 030c 	and.w	r3, r3, #12
 800591e:	2b0c      	cmp	r3, #12
 8005920:	d089      	beq.n	8005836 <HAL_RCC_ClockConfig+0x1e>
 8005922:	f000 f8c7 	bl	8005ab4 <HAL_GetTick>
 8005926:	1bc0      	subs	r0, r0, r7
 8005928:	4540      	cmp	r0, r8
 800592a:	d9f5      	bls.n	8005918 <HAL_RCC_ClockConfig+0x100>
 800592c:	e7e3      	b.n	80058f6 <HAL_RCC_ClockConfig+0xde>
 800592e:	b97b      	cbnz	r3, 8005950 <HAL_RCC_ClockConfig+0x138>
 8005930:	68a3      	ldr	r3, [r4, #8]
 8005932:	f013 0f0c 	tst.w	r3, #12
 8005936:	f43f af7e 	beq.w	8005836 <HAL_RCC_ClockConfig+0x1e>
 800593a:	f000 f8bb 	bl	8005ab4 <HAL_GetTick>
 800593e:	1bc0      	subs	r0, r0, r7
 8005940:	4540      	cmp	r0, r8
 8005942:	d9f5      	bls.n	8005930 <HAL_RCC_ClockConfig+0x118>
 8005944:	e7d7      	b.n	80058f6 <HAL_RCC_ClockConfig+0xde>
 8005946:	f000 f8b5 	bl	8005ab4 <HAL_GetTick>
 800594a:	1bc0      	subs	r0, r0, r7
 800594c:	4540      	cmp	r0, r8
 800594e:	d8d2      	bhi.n	80058f6 <HAL_RCC_ClockConfig+0xde>
 8005950:	68a3      	ldr	r3, [r4, #8]
 8005952:	f003 030c 	and.w	r3, r3, #12
 8005956:	2b04      	cmp	r3, #4
 8005958:	d1f5      	bne.n	8005946 <HAL_RCC_ClockConfig+0x12e>
 800595a:	e76c      	b.n	8005836 <HAL_RCC_ClockConfig+0x1e>
 800595c:	6813      	ldr	r3, [r2, #0]
 800595e:	f023 0307 	bic.w	r3, r3, #7
 8005962:	4333      	orrs	r3, r6
 8005964:	6013      	str	r3, [r2, #0]
 8005966:	6813      	ldr	r3, [r2, #0]
 8005968:	f003 0307 	and.w	r3, r3, #7
 800596c:	429e      	cmp	r6, r3
 800596e:	d198      	bne.n	80058a2 <HAL_RCC_ClockConfig+0x8a>
 8005970:	e768      	b.n	8005844 <HAL_RCC_ClockConfig+0x2c>
 8005972:	68a3      	ldr	r3, [r4, #8]
 8005974:	68e9      	ldr	r1, [r5, #12]
 8005976:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800597a:	430b      	orrs	r3, r1
 800597c:	60a3      	str	r3, [r4, #8]
 800597e:	e767      	b.n	8005850 <HAL_RCC_ClockConfig+0x38>
 8005980:	40022000 	.word	0x40022000
 8005984:	40021000 	.word	0x40021000
 8005988:	0800866c 	.word	0x0800866c
 800598c:	20000020 	.word	0x20000020

08005990 <HAL_RCC_GetPCLK1Freq>:
 8005990:	4b08      	ldr	r3, [pc, #32]	; (80059b4 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005992:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8005996:	689b      	ldr	r3, [r3, #8]
 8005998:	fa92 f2a2 	rbit	r2, r2
 800599c:	fab2 f282 	clz	r2, r2
 80059a0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80059a4:	40d3      	lsrs	r3, r2
 80059a6:	4a04      	ldr	r2, [pc, #16]	; (80059b8 <HAL_RCC_GetPCLK1Freq+0x28>)
 80059a8:	5cd3      	ldrb	r3, [r2, r3]
 80059aa:	4a04      	ldr	r2, [pc, #16]	; (80059bc <HAL_RCC_GetPCLK1Freq+0x2c>)
 80059ac:	6810      	ldr	r0, [r2, #0]
 80059ae:	40d8      	lsrs	r0, r3
 80059b0:	4770      	bx	lr
 80059b2:	bf00      	nop
 80059b4:	40021000 	.word	0x40021000
 80059b8:	0800867c 	.word	0x0800867c
 80059bc:	20000020 	.word	0x20000020

080059c0 <HAL_RCC_GetPCLK2Freq>:
 80059c0:	4b08      	ldr	r3, [pc, #32]	; (80059e4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80059c2:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 80059c6:	689b      	ldr	r3, [r3, #8]
 80059c8:	fa92 f2a2 	rbit	r2, r2
 80059cc:	fab2 f282 	clz	r2, r2
 80059d0:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 80059d4:	40d3      	lsrs	r3, r2
 80059d6:	4a04      	ldr	r2, [pc, #16]	; (80059e8 <HAL_RCC_GetPCLK2Freq+0x28>)
 80059d8:	5cd3      	ldrb	r3, [r2, r3]
 80059da:	4a04      	ldr	r2, [pc, #16]	; (80059ec <HAL_RCC_GetPCLK2Freq+0x2c>)
 80059dc:	6810      	ldr	r0, [r2, #0]
 80059de:	40d8      	lsrs	r0, r3
 80059e0:	4770      	bx	lr
 80059e2:	bf00      	nop
 80059e4:	40021000 	.word	0x40021000
 80059e8:	0800867c 	.word	0x0800867c
 80059ec:	20000020 	.word	0x20000020

080059f0 <HAL_RCC_GetClockConfig>:
 80059f0:	230f      	movs	r3, #15
 80059f2:	6003      	str	r3, [r0, #0]
 80059f4:	4b0b      	ldr	r3, [pc, #44]	; (8005a24 <HAL_RCC_GetClockConfig+0x34>)
 80059f6:	689a      	ldr	r2, [r3, #8]
 80059f8:	f002 0203 	and.w	r2, r2, #3
 80059fc:	6042      	str	r2, [r0, #4]
 80059fe:	689a      	ldr	r2, [r3, #8]
 8005a00:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005a04:	6082      	str	r2, [r0, #8]
 8005a06:	689a      	ldr	r2, [r3, #8]
 8005a08:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8005a0c:	60c2      	str	r2, [r0, #12]
 8005a0e:	689b      	ldr	r3, [r3, #8]
 8005a10:	08db      	lsrs	r3, r3, #3
 8005a12:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8005a16:	6103      	str	r3, [r0, #16]
 8005a18:	4b03      	ldr	r3, [pc, #12]	; (8005a28 <HAL_RCC_GetClockConfig+0x38>)
 8005a1a:	681b      	ldr	r3, [r3, #0]
 8005a1c:	f003 0307 	and.w	r3, r3, #7
 8005a20:	600b      	str	r3, [r1, #0]
 8005a22:	4770      	bx	lr
 8005a24:	40021000 	.word	0x40021000
 8005a28:	40022000 	.word	0x40022000

08005a2c <HAL_PWREx_GetVoltageRange>:
 8005a2c:	4b02      	ldr	r3, [pc, #8]	; (8005a38 <HAL_PWREx_GetVoltageRange+0xc>)
 8005a2e:	6818      	ldr	r0, [r3, #0]
 8005a30:	f400 60c0 	and.w	r0, r0, #1536	; 0x600
 8005a34:	4770      	bx	lr
 8005a36:	bf00      	nop
 8005a38:	40007000 	.word	0x40007000

08005a3c <HAL_PWREx_EnableLowPowerRunMode>:
 8005a3c:	4a02      	ldr	r2, [pc, #8]	; (8005a48 <HAL_PWREx_EnableLowPowerRunMode+0xc>)
 8005a3e:	6813      	ldr	r3, [r2, #0]
 8005a40:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005a44:	6013      	str	r3, [r2, #0]
 8005a46:	4770      	bx	lr
 8005a48:	40007000 	.word	0x40007000

08005a4c <HAL_PWREx_DisableLowPowerRunMode>:
 8005a4c:	4b0c      	ldr	r3, [pc, #48]	; (8005a80 <HAL_PWREx_DisableLowPowerRunMode+0x34>)
 8005a4e:	490d      	ldr	r1, [pc, #52]	; (8005a84 <HAL_PWREx_DisableLowPowerRunMode+0x38>)
 8005a50:	681a      	ldr	r2, [r3, #0]
 8005a52:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8005a56:	601a      	str	r2, [r3, #0]
 8005a58:	4a0b      	ldr	r2, [pc, #44]	; (8005a88 <HAL_PWREx_DisableLowPowerRunMode+0x3c>)
 8005a5a:	6812      	ldr	r2, [r2, #0]
 8005a5c:	fbb2 f1f1 	udiv	r1, r2, r1
 8005a60:	2232      	movs	r2, #50	; 0x32
 8005a62:	434a      	muls	r2, r1
 8005a64:	b112      	cbz	r2, 8005a6c <HAL_PWREx_DisableLowPowerRunMode+0x20>
 8005a66:	6959      	ldr	r1, [r3, #20]
 8005a68:	0589      	lsls	r1, r1, #22
 8005a6a:	d406      	bmi.n	8005a7a <HAL_PWREx_DisableLowPowerRunMode+0x2e>
 8005a6c:	695b      	ldr	r3, [r3, #20]
 8005a6e:	f413 7f00 	tst.w	r3, #512	; 0x200
 8005a72:	bf14      	ite	ne
 8005a74:	2003      	movne	r0, #3
 8005a76:	2000      	moveq	r0, #0
 8005a78:	4770      	bx	lr
 8005a7a:	3a01      	subs	r2, #1
 8005a7c:	e7f2      	b.n	8005a64 <HAL_PWREx_DisableLowPowerRunMode+0x18>
 8005a7e:	bf00      	nop
 8005a80:	40007000 	.word	0x40007000
 8005a84:	000f4240 	.word	0x000f4240
 8005a88:	20000020 	.word	0x20000020

08005a8c <HAL_Init>:
 8005a8c:	b508      	push	{r3, lr}
 8005a8e:	2003      	movs	r0, #3
 8005a90:	f7ff fb50 	bl	8005134 <HAL_NVIC_SetPriorityGrouping>
 8005a94:	200f      	movs	r0, #15
 8005a96:	f7fd fe1f 	bl	80036d8 <HAL_InitTick>
 8005a9a:	f7ff f923 	bl	8004ce4 <HAL_MspInit>
 8005a9e:	2000      	movs	r0, #0
 8005aa0:	bd08      	pop	{r3, pc}
	...

08005aa4 <HAL_IncTick>:
 8005aa4:	4a02      	ldr	r2, [pc, #8]	; (8005ab0 <HAL_IncTick+0xc>)
 8005aa6:	6813      	ldr	r3, [r2, #0]
 8005aa8:	3301      	adds	r3, #1
 8005aaa:	6013      	str	r3, [r2, #0]
 8005aac:	4770      	bx	lr
 8005aae:	bf00      	nop
 8005ab0:	200030c0 	.word	0x200030c0

08005ab4 <HAL_GetTick>:
 8005ab4:	4b01      	ldr	r3, [pc, #4]	; (8005abc <HAL_GetTick+0x8>)
 8005ab6:	6818      	ldr	r0, [r3, #0]
 8005ab8:	4770      	bx	lr
 8005aba:	bf00      	nop
 8005abc:	200030c0 	.word	0x200030c0

08005ac0 <mbed::Ticker::handler()>:
 8005ac0:	6943      	ldr	r3, [r0, #20]
 8005ac2:	6841      	ldr	r1, [r0, #4]
 8005ac4:	b510      	push	{r4, lr}
 8005ac6:	4604      	mov	r4, r0
 8005ac8:	4419      	add	r1, r3
 8005aca:	f000 fa37 	bl	8005f3c <mbed::TimerEvent::insert(unsigned long)>
 8005ace:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005ad0:	f104 0018 	add.w	r0, r4, #24
 8005ad4:	681b      	ldr	r3, [r3, #0]
 8005ad6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005ada:	4718      	bx	r3

08005adc <mbed::Ticker::setup(unsigned long)>:
 8005adc:	b538      	push	{r3, r4, r5, lr}
 8005ade:	4604      	mov	r4, r0
 8005ae0:	460d      	mov	r5, r1
 8005ae2:	f7fc f8b7 	bl	8001c54 <core_util_critical_section_enter>
 8005ae6:	4620      	mov	r0, r4
 8005ae8:	f000 fa2e 	bl	8005f48 <mbed::TimerEvent::remove()>
 8005aec:	6165      	str	r5, [r4, #20]
 8005aee:	6920      	ldr	r0, [r4, #16]
 8005af0:	f7fc f83f 	bl	8001b72 <ticker_read>
 8005af4:	1829      	adds	r1, r5, r0
 8005af6:	4620      	mov	r0, r4
 8005af8:	f000 fa20 	bl	8005f3c <mbed::TimerEvent::insert(unsigned long)>
 8005afc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005b00:	f7fc b8be 	b.w	8001c80 <core_util_critical_section_exit>

08005b04 <mbed::Ticker::detach()>:
 8005b04:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005b06:	4606      	mov	r6, r0
 8005b08:	f106 0418 	add.w	r4, r6, #24
 8005b0c:	f7fc f8a2 	bl	8001c54 <core_util_critical_section_enter>
 8005b10:	466d      	mov	r5, sp
 8005b12:	4630      	mov	r0, r6
 8005b14:	f000 fa18 	bl	8005f48 <mbed::TimerEvent::remove()>
 8005b18:	2300      	movs	r3, #0
 8005b1a:	42ac      	cmp	r4, r5
 8005b1c:	9303      	str	r3, [sp, #12]
 8005b1e:	d00b      	beq.n	8005b38 <mbed::Ticker::detach()+0x34>
 8005b20:	4620      	mov	r0, r4
 8005b22:	f7fa fd27 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005b26:	b13c      	cbz	r4, 8005b38 <mbed::Ticker::detach()+0x34>
 8005b28:	9b03      	ldr	r3, [sp, #12]
 8005b2a:	b11b      	cbz	r3, 8005b34 <mbed::Ticker::detach()+0x30>
 8005b2c:	685b      	ldr	r3, [r3, #4]
 8005b2e:	4669      	mov	r1, sp
 8005b30:	4620      	mov	r0, r4
 8005b32:	4798      	blx	r3
 8005b34:	9b03      	ldr	r3, [sp, #12]
 8005b36:	6273      	str	r3, [r6, #36]	; 0x24
 8005b38:	4628      	mov	r0, r5
 8005b3a:	f7fa fd1b 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005b3e:	f7fc f89f 	bl	8001c80 <core_util_critical_section_exit>
 8005b42:	b004      	add	sp, #16
 8005b44:	bd70      	pop	{r4, r5, r6, pc}

08005b46 <mbed::Callback<void (int)>::~Callback()>:
 8005b46:	68c3      	ldr	r3, [r0, #12]
 8005b48:	b510      	push	{r4, lr}
 8005b4a:	4604      	mov	r4, r0
 8005b4c:	b10b      	cbz	r3, 8005b52 <mbed::Callback<void (int)>::~Callback()+0xc>
 8005b4e:	689b      	ldr	r3, [r3, #8]
 8005b50:	4798      	blx	r3
 8005b52:	4620      	mov	r0, r4
 8005b54:	bd10      	pop	{r4, pc}

08005b56 <mbed::donothing()>:
 8005b56:	4770      	bx	lr

08005b58 <mbed::SerialBase::lock()>:
 8005b58:	4770      	bx	lr

08005b5a <mbed::SerialBase::unlock()>:
 8005b5a:	4770      	bx	lr

08005b5c <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 8005b5c:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8005b60:	f102 0028 	add.w	r0, r2, #40	; 0x28
 8005b64:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005b66:	681b      	ldr	r3, [r3, #0]
 8005b68:	4718      	bx	r3

08005b6a <mbed::SerialBase::baud(int)>:
 8005b6a:	b570      	push	{r4, r5, r6, lr}
 8005b6c:	4605      	mov	r5, r0
 8005b6e:	4604      	mov	r4, r0
 8005b70:	f855 3b04 	ldr.w	r3, [r5], #4
 8005b74:	460e      	mov	r6, r1
 8005b76:	681b      	ldr	r3, [r3, #0]
 8005b78:	4798      	blx	r3
 8005b7a:	4628      	mov	r0, r5
 8005b7c:	4631      	mov	r1, r6
 8005b7e:	f7fe fca9 	bl	80044d4 <serial_baud>
 8005b82:	6823      	ldr	r3, [r4, #0]
 8005b84:	64a6      	str	r6, [r4, #72]	; 0x48
 8005b86:	4620      	mov	r0, r4
 8005b88:	685b      	ldr	r3, [r3, #4]
 8005b8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005b8e:	4718      	bx	r3

08005b90 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8005b90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005b94:	4605      	mov	r5, r0
 8005b96:	461e      	mov	r6, r3
 8005b98:	4b1b      	ldr	r3, [pc, #108]	; (8005c08 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x78>)
 8005b9a:	f845 3b04 	str.w	r3, [r5], #4
 8005b9e:	b085      	sub	sp, #20
 8005ba0:	4604      	mov	r4, r0
 8005ba2:	4688      	mov	r8, r1
 8005ba4:	4691      	mov	r9, r2
 8005ba6:	2100      	movs	r1, #0
 8005ba8:	2224      	movs	r2, #36	; 0x24
 8005baa:	4628      	mov	r0, r5
 8005bac:	f001 fddd 	bl	800776a <memset>
 8005bb0:	2200      	movs	r2, #0
 8005bb2:	6362      	str	r2, [r4, #52]	; 0x34
 8005bb4:	6462      	str	r2, [r4, #68]	; 0x44
 8005bb6:	4669      	mov	r1, sp
 8005bb8:	64a6      	str	r6, [r4, #72]	; 0x48
 8005bba:	4f14      	ldr	r7, [pc, #80]	; (8005c0c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x7c>)
 8005bbc:	4e14      	ldr	r6, [pc, #80]	; (8005c10 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x80>)
 8005bbe:	9700      	str	r7, [sp, #0]
 8005bc0:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8005bc4:	9603      	str	r6, [sp, #12]
 8005bc6:	f7fa fd38 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005bca:	4668      	mov	r0, sp
 8005bcc:	f7fa fcd2 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005bd0:	4669      	mov	r1, sp
 8005bd2:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8005bd6:	9700      	str	r7, [sp, #0]
 8005bd8:	9603      	str	r6, [sp, #12]
 8005bda:	f7fa fd2e 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005bde:	4668      	mov	r0, sp
 8005be0:	f7fa fcc8 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005be4:	464a      	mov	r2, r9
 8005be6:	4641      	mov	r1, r8
 8005be8:	4628      	mov	r0, r5
 8005bea:	f7fe fbd3 	bl	8004394 <serial_init>
 8005bee:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8005bf0:	4628      	mov	r0, r5
 8005bf2:	f7fe fc6f 	bl	80044d4 <serial_baud>
 8005bf6:	4628      	mov	r0, r5
 8005bf8:	4622      	mov	r2, r4
 8005bfa:	4906      	ldr	r1, [pc, #24]	; (8005c14 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0x84>)
 8005bfc:	f7fe fc6e 	bl	80044dc <serial_irq_handler>
 8005c00:	4620      	mov	r0, r4
 8005c02:	b005      	add	sp, #20
 8005c04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005c08:	080087e0 	.word	0x080087e0
 8005c0c:	08005b57 	.word	0x08005b57
 8005c10:	08008120 	.word	0x08008120
 8005c14:	08005b5d 	.word	0x08005b5d

08005c18 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8005c18:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005c1c:	4605      	mov	r5, r0
 8005c1e:	4688      	mov	r8, r1
 8005c20:	f855 3b04 	ldr.w	r3, [r5], #4
 8005c24:	681b      	ldr	r3, [r3, #0]
 8005c26:	4604      	mov	r4, r0
 8005c28:	4616      	mov	r6, r2
 8005c2a:	4798      	blx	r3
 8005c2c:	f7fc f812 	bl	8001c54 <core_util_critical_section_enter>
 8005c30:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005c34:	0130      	lsls	r0, r6, #4
 8005c36:	b197      	cbz	r7, 8005c5e <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8005c38:	3028      	adds	r0, #40	; 0x28
 8005c3a:	4641      	mov	r1, r8
 8005c3c:	4420      	add	r0, r4
 8005c3e:	f7fa fcfc 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005c42:	2201      	movs	r2, #1
 8005c44:	4631      	mov	r1, r6
 8005c46:	4628      	mov	r0, r5
 8005c48:	f7fe fc54 	bl	80044f4 <serial_irq_set>
 8005c4c:	f7fc f818 	bl	8001c80 <core_util_critical_section_exit>
 8005c50:	6823      	ldr	r3, [r4, #0]
 8005c52:	4620      	mov	r0, r4
 8005c54:	685b      	ldr	r3, [r3, #4]
 8005c56:	4798      	blx	r3
 8005c58:	b004      	add	sp, #16
 8005c5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005c5e:	4b07      	ldr	r3, [pc, #28]	; (8005c7c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8005c60:	9300      	str	r3, [sp, #0]
 8005c62:	3028      	adds	r0, #40	; 0x28
 8005c64:	4b06      	ldr	r3, [pc, #24]	; (8005c80 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8005c66:	9303      	str	r3, [sp, #12]
 8005c68:	4669      	mov	r1, sp
 8005c6a:	4420      	add	r0, r4
 8005c6c:	f7fa fce5 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005c70:	4668      	mov	r0, sp
 8005c72:	f7fa fc7f 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005c76:	463a      	mov	r2, r7
 8005c78:	e7e4      	b.n	8005c44 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8005c7a:	bf00      	nop
 8005c7c:	08005b57 	.word	0x08005b57
 8005c80:	08008120 	.word	0x08008120

08005c84 <mbed::RawSerial::lock()>:
 8005c84:	4770      	bx	lr
	...

08005c88 <mbed::RawSerial::~RawSerial()>:
 8005c88:	b510      	push	{r4, lr}
 8005c8a:	4b03      	ldr	r3, [pc, #12]	; (8005c98 <mbed::RawSerial::~RawSerial()+0x10>)
 8005c8c:	6003      	str	r3, [r0, #0]
 8005c8e:	4604      	mov	r4, r0
 8005c90:	f7fb fd22 	bl	80016d8 <mbed::SerialBase::~SerialBase()>
 8005c94:	4620      	mov	r0, r4
 8005c96:	bd10      	pop	{r4, pc}
 8005c98:	080087f8 	.word	0x080087f8

08005c9c <mbed::RawSerial::~RawSerial()>:
 8005c9c:	b510      	push	{r4, lr}
 8005c9e:	4604      	mov	r4, r0
 8005ca0:	f7ff fff2 	bl	8005c88 <mbed::RawSerial::~RawSerial()>
 8005ca4:	4620      	mov	r0, r4
 8005ca6:	f000 facf 	bl	8006248 <operator delete(void*)>
 8005caa:	4620      	mov	r0, r4
 8005cac:	bd10      	pop	{r4, pc}
	...

08005cb0 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8005cb0:	b510      	push	{r4, lr}
 8005cb2:	4604      	mov	r4, r0
 8005cb4:	f7ff ff6c 	bl	8005b90 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8005cb8:	4b01      	ldr	r3, [pc, #4]	; (8005cc0 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8005cba:	6023      	str	r3, [r4, #0]
 8005cbc:	4620      	mov	r0, r4
 8005cbe:	bd10      	pop	{r4, pc}
 8005cc0:	080087f8 	.word	0x080087f8

08005cc4 <mbed::donothing()>:
 8005cc4:	4770      	bx	lr
	...

08005cc8 <mbed::InterruptIn::~InterruptIn()>:
 8005cc8:	b510      	push	{r4, lr}
 8005cca:	4b08      	ldr	r3, [pc, #32]	; (8005cec <mbed::InterruptIn::~InterruptIn()+0x24>)
 8005ccc:	4604      	mov	r4, r0
 8005cce:	f840 3b20 	str.w	r3, [r0], #32
 8005cd2:	f7fd fed1 	bl	8003a78 <gpio_irq_free>
 8005cd6:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8005cda:	f7fa fc4b 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005cde:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005ce2:	f7fa fc47 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005ce6:	4620      	mov	r0, r4
 8005ce8:	bd10      	pop	{r4, pc}
 8005cea:	bf00      	nop
 8005cec:	08008810 	.word	0x08008810

08005cf0 <mbed::InterruptIn::~InterruptIn()>:
 8005cf0:	b510      	push	{r4, lr}
 8005cf2:	4604      	mov	r4, r0
 8005cf4:	f7ff ffe8 	bl	8005cc8 <mbed::InterruptIn::~InterruptIn()>
 8005cf8:	4620      	mov	r0, r4
 8005cfa:	f000 faa5 	bl	8006248 <operator delete(void*)>
 8005cfe:	4620      	mov	r0, r4
 8005d00:	bd10      	pop	{r4, pc}
	...

08005d04 <mbed::InterruptIn::InterruptIn(PinName)>:
 8005d04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005d08:	4605      	mov	r5, r0
 8005d0a:	4b1f      	ldr	r3, [pc, #124]	; (8005d88 <mbed::InterruptIn::InterruptIn(PinName)+0x84>)
 8005d0c:	f845 3b04 	str.w	r3, [r5], #4
 8005d10:	4604      	mov	r4, r0
 8005d12:	b085      	sub	sp, #20
 8005d14:	460e      	mov	r6, r1
 8005d16:	f104 0720 	add.w	r7, r4, #32
 8005d1a:	221c      	movs	r2, #28
 8005d1c:	2100      	movs	r1, #0
 8005d1e:	4628      	mov	r0, r5
 8005d20:	f001 fd23 	bl	800776a <memset>
 8005d24:	2210      	movs	r2, #16
 8005d26:	2100      	movs	r1, #0
 8005d28:	4638      	mov	r0, r7
 8005d2a:	f001 fd1e 	bl	800776a <memset>
 8005d2e:	2300      	movs	r3, #0
 8005d30:	63e3      	str	r3, [r4, #60]	; 0x3c
 8005d32:	64e3      	str	r3, [r4, #76]	; 0x4c
 8005d34:	4669      	mov	r1, sp
 8005d36:	f8df 9058 	ldr.w	r9, [pc, #88]	; 8005d90 <mbed::InterruptIn::InterruptIn(PinName)+0x8c>
 8005d3a:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8005d94 <mbed::InterruptIn::InterruptIn(PinName)+0x90>
 8005d3e:	f8cd 9000 	str.w	r9, [sp]
 8005d42:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005d46:	f8cd 800c 	str.w	r8, [sp, #12]
 8005d4a:	f7fa fc76 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005d4e:	4668      	mov	r0, sp
 8005d50:	f7fa fc10 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005d54:	4669      	mov	r1, sp
 8005d56:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8005d5a:	f8cd 9000 	str.w	r9, [sp]
 8005d5e:	f8cd 800c 	str.w	r8, [sp, #12]
 8005d62:	f7fa fc6a 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005d66:	4668      	mov	r0, sp
 8005d68:	f7fa fc04 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005d6c:	4623      	mov	r3, r4
 8005d6e:	4a07      	ldr	r2, [pc, #28]	; (8005d8c <mbed::InterruptIn::InterruptIn(PinName)+0x88>)
 8005d70:	4631      	mov	r1, r6
 8005d72:	4638      	mov	r0, r7
 8005d74:	f7fd fdce 	bl	8003914 <gpio_irq_init>
 8005d78:	4628      	mov	r0, r5
 8005d7a:	4631      	mov	r1, r6
 8005d7c:	f7fb fe6c 	bl	8001a58 <gpio_init_in>
 8005d80:	4620      	mov	r0, r4
 8005d82:	b005      	add	sp, #20
 8005d84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005d88:	08008810 	.word	0x08008810
 8005d8c:	08005e37 	.word	0x08005e37
 8005d90:	08005cc5 	.word	0x08005cc5
 8005d94:	08008120 	.word	0x08008120

08005d98 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>:
 8005d98:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005d9a:	460e      	mov	r6, r1
 8005d9c:	4604      	mov	r4, r0
 8005d9e:	f7fb ff59 	bl	8001c54 <core_util_critical_section_enter>
 8005da2:	68f5      	ldr	r5, [r6, #12]
 8005da4:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005da8:	3420      	adds	r4, #32
 8005daa:	b15d      	cbz	r5, 8005dc4 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x2c>
 8005dac:	4631      	mov	r1, r6
 8005dae:	f7fa fc44 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005db2:	2201      	movs	r2, #1
 8005db4:	2101      	movs	r1, #1
 8005db6:	4620      	mov	r0, r4
 8005db8:	f7fd fd50 	bl	800385c <gpio_irq_set>
 8005dbc:	f7fb ff60 	bl	8001c80 <core_util_critical_section_exit>
 8005dc0:	b004      	add	sp, #16
 8005dc2:	bd70      	pop	{r4, r5, r6, pc}
 8005dc4:	4b05      	ldr	r3, [pc, #20]	; (8005ddc <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x44>)
 8005dc6:	9300      	str	r3, [sp, #0]
 8005dc8:	4669      	mov	r1, sp
 8005dca:	4b05      	ldr	r3, [pc, #20]	; (8005de0 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x48>)
 8005dcc:	9303      	str	r3, [sp, #12]
 8005dce:	f7fa fc34 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005dd2:	4668      	mov	r0, sp
 8005dd4:	f7fa fbce 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005dd8:	462a      	mov	r2, r5
 8005dda:	e7eb      	b.n	8005db4 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x1c>
 8005ddc:	08005cc5 	.word	0x08005cc5
 8005de0:	08008120 	.word	0x08008120

08005de4 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>:
 8005de4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005de6:	460e      	mov	r6, r1
 8005de8:	4604      	mov	r4, r0
 8005dea:	f7fb ff33 	bl	8001c54 <core_util_critical_section_enter>
 8005dee:	68f5      	ldr	r5, [r6, #12]
 8005df0:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8005df4:	3420      	adds	r4, #32
 8005df6:	b15d      	cbz	r5, 8005e10 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x2c>
 8005df8:	4631      	mov	r1, r6
 8005dfa:	f7fa fc1e 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005dfe:	2201      	movs	r2, #1
 8005e00:	2102      	movs	r1, #2
 8005e02:	4620      	mov	r0, r4
 8005e04:	f7fd fd2a 	bl	800385c <gpio_irq_set>
 8005e08:	f7fb ff3a 	bl	8001c80 <core_util_critical_section_exit>
 8005e0c:	b004      	add	sp, #16
 8005e0e:	bd70      	pop	{r4, r5, r6, pc}
 8005e10:	4b05      	ldr	r3, [pc, #20]	; (8005e28 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x44>)
 8005e12:	9300      	str	r3, [sp, #0]
 8005e14:	4669      	mov	r1, sp
 8005e16:	4b05      	ldr	r3, [pc, #20]	; (8005e2c <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x48>)
 8005e18:	9303      	str	r3, [sp, #12]
 8005e1a:	f7fa fc0e 	bl	800063a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005e1e:	4668      	mov	r0, sp
 8005e20:	f7fa fba8 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 8005e24:	462a      	mov	r2, r5
 8005e26:	e7eb      	b.n	8005e00 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x1c>
 8005e28:	08005cc5 	.word	0x08005cc5
 8005e2c:	08008120 	.word	0x08008120

08005e30 <mbed::Callback<void ()>::call() const>:
 8005e30:	68c3      	ldr	r3, [r0, #12]
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	4718      	bx	r3

08005e36 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)>:
 8005e36:	2901      	cmp	r1, #1
 8005e38:	b508      	push	{r3, lr}
 8005e3a:	d002      	beq.n	8005e42 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0xc>
 8005e3c:	2902      	cmp	r1, #2
 8005e3e:	d004      	beq.n	8005e4a <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0x14>
 8005e40:	bd08      	pop	{r3, pc}
 8005e42:	3030      	adds	r0, #48	; 0x30
 8005e44:	f7ff fff4 	bl	8005e30 <mbed::Callback<void ()>::call() const>
 8005e48:	bd08      	pop	{r3, pc}
 8005e4a:	3040      	adds	r0, #64	; 0x40
 8005e4c:	e7fa      	b.n	8005e44 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0xe>

08005e4e <mbed::Timer::start()>:
 8005e4e:	b510      	push	{r4, lr}
 8005e50:	4604      	mov	r4, r0
 8005e52:	f7fb feff 	bl	8001c54 <core_util_critical_section_enter>
 8005e56:	6823      	ldr	r3, [r4, #0]
 8005e58:	b92b      	cbnz	r3, 8005e66 <mbed::Timer::start()+0x18>
 8005e5a:	68e0      	ldr	r0, [r4, #12]
 8005e5c:	f7fb fe89 	bl	8001b72 <ticker_read>
 8005e60:	2301      	movs	r3, #1
 8005e62:	6060      	str	r0, [r4, #4]
 8005e64:	6023      	str	r3, [r4, #0]
 8005e66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005e6a:	f7fb bf09 	b.w	8001c80 <core_util_critical_section_exit>

08005e6e <mbed::Timer::slicetime()>:
 8005e6e:	b538      	push	{r3, r4, r5, lr}
 8005e70:	4605      	mov	r5, r0
 8005e72:	f7fb feef 	bl	8001c54 <core_util_critical_section_enter>
 8005e76:	682c      	ldr	r4, [r5, #0]
 8005e78:	b124      	cbz	r4, 8005e84 <mbed::Timer::slicetime()+0x16>
 8005e7a:	68e8      	ldr	r0, [r5, #12]
 8005e7c:	f7fb fe79 	bl	8001b72 <ticker_read>
 8005e80:	686c      	ldr	r4, [r5, #4]
 8005e82:	1b04      	subs	r4, r0, r4
 8005e84:	f7fb fefc 	bl	8001c80 <core_util_critical_section_exit>
 8005e88:	4620      	mov	r0, r4
 8005e8a:	bd38      	pop	{r3, r4, r5, pc}

08005e8c <mbed::Timer::stop()>:
 8005e8c:	b510      	push	{r4, lr}
 8005e8e:	4604      	mov	r4, r0
 8005e90:	f7fb fee0 	bl	8001c54 <core_util_critical_section_enter>
 8005e94:	4620      	mov	r0, r4
 8005e96:	f7ff ffea 	bl	8005e6e <mbed::Timer::slicetime()>
 8005e9a:	68a3      	ldr	r3, [r4, #8]
 8005e9c:	4418      	add	r0, r3
 8005e9e:	2300      	movs	r3, #0
 8005ea0:	60a0      	str	r0, [r4, #8]
 8005ea2:	6023      	str	r3, [r4, #0]
 8005ea4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005ea8:	f7fb beea 	b.w	8001c80 <core_util_critical_section_exit>

08005eac <mbed::Timer::read_us()>:
 8005eac:	b538      	push	{r3, r4, r5, lr}
 8005eae:	4605      	mov	r5, r0
 8005eb0:	f7fb fed0 	bl	8001c54 <core_util_critical_section_enter>
 8005eb4:	4628      	mov	r0, r5
 8005eb6:	68ac      	ldr	r4, [r5, #8]
 8005eb8:	f7ff ffd9 	bl	8005e6e <mbed::Timer::slicetime()>
 8005ebc:	4404      	add	r4, r0
 8005ebe:	f7fb fedf 	bl	8001c80 <core_util_critical_section_exit>
 8005ec2:	4620      	mov	r0, r4
 8005ec4:	bd38      	pop	{r3, r4, r5, pc}

08005ec6 <mbed::Timer::read_ms()>:
 8005ec6:	b508      	push	{r3, lr}
 8005ec8:	f7ff fff0 	bl	8005eac <mbed::Timer::read_us()>
 8005ecc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005ed0:	fb90 f0f3 	sdiv	r0, r0, r3
 8005ed4:	bd08      	pop	{r3, pc}

08005ed6 <mbed::Timer::reset()>:
 8005ed6:	b510      	push	{r4, lr}
 8005ed8:	4604      	mov	r4, r0
 8005eda:	f7fb febb 	bl	8001c54 <core_util_critical_section_enter>
 8005ede:	68e0      	ldr	r0, [r4, #12]
 8005ee0:	f7fb fe47 	bl	8001b72 <ticker_read>
 8005ee4:	2300      	movs	r3, #0
 8005ee6:	6060      	str	r0, [r4, #4]
 8005ee8:	60a3      	str	r3, [r4, #8]
 8005eea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005eee:	f7fb bec7 	b.w	8001c80 <core_util_critical_section_exit>

08005ef2 <mbed::Timer::Timer()>:
 8005ef2:	2300      	movs	r3, #0
 8005ef4:	b510      	push	{r4, lr}
 8005ef6:	6003      	str	r3, [r0, #0]
 8005ef8:	6043      	str	r3, [r0, #4]
 8005efa:	6083      	str	r3, [r0, #8]
 8005efc:	4604      	mov	r4, r0
 8005efe:	f7fb fdc1 	bl	8001a84 <get_us_ticker_data>
 8005f02:	60e0      	str	r0, [r4, #12]
 8005f04:	4620      	mov	r0, r4
 8005f06:	f7ff ffe6 	bl	8005ed6 <mbed::Timer::reset()>
 8005f0a:	4620      	mov	r0, r4
 8005f0c:	bd10      	pop	{r4, pc}

08005f0e <mbed::TimerEvent::irq(unsigned long)>:
 8005f0e:	6803      	ldr	r3, [r0, #0]
 8005f10:	689b      	ldr	r3, [r3, #8]
 8005f12:	4718      	bx	r3

08005f14 <mbed::TimerEvent::TimerEvent()>:
 8005f14:	4b07      	ldr	r3, [pc, #28]	; (8005f34 <mbed::TimerEvent::TimerEvent()+0x20>)
 8005f16:	b510      	push	{r4, lr}
 8005f18:	6003      	str	r3, [r0, #0]
 8005f1a:	2300      	movs	r3, #0
 8005f1c:	6043      	str	r3, [r0, #4]
 8005f1e:	6083      	str	r3, [r0, #8]
 8005f20:	60c3      	str	r3, [r0, #12]
 8005f22:	4604      	mov	r4, r0
 8005f24:	f7fb fdae 	bl	8001a84 <get_us_ticker_data>
 8005f28:	4903      	ldr	r1, [pc, #12]	; (8005f38 <mbed::TimerEvent::TimerEvent()+0x24>)
 8005f2a:	6120      	str	r0, [r4, #16]
 8005f2c:	f7fb fdb4 	bl	8001a98 <ticker_set_handler>
 8005f30:	4620      	mov	r0, r4
 8005f32:	bd10      	pop	{r4, pc}
 8005f34:	08008820 	.word	0x08008820
 8005f38:	08005f0f 	.word	0x08005f0f

08005f3c <mbed::TimerEvent::insert(unsigned long)>:
 8005f3c:	4603      	mov	r3, r0
 8005f3e:	460a      	mov	r2, r1
 8005f40:	1d01      	adds	r1, r0, #4
 8005f42:	6900      	ldr	r0, [r0, #16]
 8005f44:	f7fb bdd4 	b.w	8001af0 <ticker_insert_event>

08005f48 <mbed::TimerEvent::remove()>:
 8005f48:	1d01      	adds	r1, r0, #4
 8005f4a:	6900      	ldr	r0, [r0, #16]
 8005f4c:	f7fb bdf1 	b.w	8001b32 <ticker_remove_event>

08005f50 <mbed::TimerEvent::~TimerEvent()>:
 8005f50:	b510      	push	{r4, lr}
 8005f52:	4b03      	ldr	r3, [pc, #12]	; (8005f60 <mbed::TimerEvent::~TimerEvent()+0x10>)
 8005f54:	6003      	str	r3, [r0, #0]
 8005f56:	4604      	mov	r4, r0
 8005f58:	f7ff fff6 	bl	8005f48 <mbed::TimerEvent::remove()>
 8005f5c:	4620      	mov	r0, r4
 8005f5e:	bd10      	pop	{r4, pc}
 8005f60:	08008820 	.word	0x08008820

08005f64 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 8005f64:	b538      	push	{r3, r4, r5, lr}
 8005f66:	4604      	mov	r4, r0
 8005f68:	b148      	cbz	r0, 8005f7e <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8005f6a:	3058      	adds	r0, #88	; 0x58
 8005f6c:	42a0      	cmp	r0, r4
 8005f6e:	d006      	beq.n	8005f7e <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8005f70:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8005f74:	3814      	subs	r0, #20
 8005f76:	f7ff fde6 	bl	8005b46 <mbed::Callback<void (int)>::~Callback()>
 8005f7a:	4628      	mov	r0, r5
 8005f7c:	e7f6      	b.n	8005f6c <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8005f7e:	4620      	mov	r0, r4
 8005f80:	bd38      	pop	{r3, r4, r5, pc}
	...

08005f84 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8005f84:	b570      	push	{r4, r5, r6, lr}
 8005f86:	4c0e      	ldr	r4, [pc, #56]	; (8005fc0 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8005f88:	4620      	mov	r0, r4
 8005f8a:	2500      	movs	r5, #0
 8005f8c:	2628      	movs	r6, #40	; 0x28
 8005f8e:	4632      	mov	r2, r6
 8005f90:	4629      	mov	r1, r5
 8005f92:	f840 5b04 	str.w	r5, [r0], #4
 8005f96:	f001 fbe8 	bl	800776a <memset>
 8005f9a:	4632      	mov	r2, r6
 8005f9c:	4629      	mov	r1, r5
 8005f9e:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005fa2:	62e5      	str	r5, [r4, #44]	; 0x2c
 8005fa4:	f001 fbe1 	bl	800776a <memset>
 8005fa8:	65a5      	str	r5, [r4, #88]	; 0x58
 8005faa:	4620      	mov	r0, r4
 8005fac:	65e5      	str	r5, [r4, #92]	; 0x5c
 8005fae:	4a05      	ldr	r2, [pc, #20]	; (8005fc4 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8005fb0:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8005fb4:	4904      	ldr	r1, [pc, #16]	; (8005fc8 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8005fb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005fba:	f000 b927 	b.w	800620c <__aeabi_atexit>
 8005fbe:	bf00      	nop
 8005fc0:	20002484 	.word	0x20002484
 8005fc4:	20000000 	.word	0x20000000
 8005fc8:	08005f65 	.word	0x08005f65

08005fcc <__wrap__malloc_r>:
 8005fcc:	f001 bc24 	b.w	8007818 <_malloc_r>

08005fd0 <__wrap__realloc_r>:
 8005fd0:	f001 bc80 	b.w	80078d4 <_realloc_r>

08005fd4 <__wrap__free_r>:
 8005fd4:	f001 bbd2 	b.w	800777c <_free_r>

08005fd8 <wait_us>:
 8005fd8:	b570      	push	{r4, r5, r6, lr}
 8005fda:	4605      	mov	r5, r0
 8005fdc:	f7fd feba 	bl	8003d54 <us_ticker_read>
 8005fe0:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005fe4:	fb95 f4f4 	sdiv	r4, r5, r4
 8005fe8:	2c00      	cmp	r4, #0
 8005fea:	4606      	mov	r6, r0
 8005fec:	dd02      	ble.n	8005ff4 <wait_us+0x1c>
 8005fee:	f7fb fe2b 	bl	8001c48 <core_util_are_interrupts_enabled>
 8005ff2:	b928      	cbnz	r0, 8006000 <wait_us+0x28>
 8005ff4:	f7fd feae 	bl	8003d54 <us_ticker_read>
 8005ff8:	1b80      	subs	r0, r0, r6
 8005ffa:	42a8      	cmp	r0, r5
 8005ffc:	d3fa      	bcc.n	8005ff4 <wait_us+0x1c>
 8005ffe:	bd70      	pop	{r4, r5, r6, pc}
 8006000:	4620      	mov	r0, r4
 8006002:	f000 f976 	bl	80062f2 <rtos::Thread::wait(unsigned long)>
 8006006:	e7f5      	b.n	8005ff4 <wait_us+0x1c>

08006008 <wait_ms>:
 8006008:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800600c:	4358      	muls	r0, r3
 800600e:	f7ff bfe3 	b.w	8005fd8 <wait_us>
	...

08006014 <init_serial()>:
 8006014:	b508      	push	{r3, lr}
 8006016:	4b08      	ldr	r3, [pc, #32]	; (8006038 <init_serial()+0x24>)
 8006018:	681b      	ldr	r3, [r3, #0]
 800601a:	b95b      	cbnz	r3, 8006034 <init_serial()+0x20>
 800601c:	2102      	movs	r1, #2
 800601e:	4807      	ldr	r0, [pc, #28]	; (800603c <init_serial()+0x28>)
 8006020:	220f      	movs	r2, #15
 8006022:	f7fe f9b7 	bl	8004394 <serial_init>
 8006026:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 800602a:	4804      	ldr	r0, [pc, #16]	; (800603c <init_serial()+0x28>)
 800602c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8006030:	f7fe ba50 	b.w	80044d4 <serial_baud>
 8006034:	bd08      	pop	{r3, pc}
 8006036:	bf00      	nop
 8006038:	200021e0 	.word	0x200021e0
 800603c:	2000309c 	.word	0x2000309c

08006040 <_close>:
 8006040:	2802      	cmp	r0, #2
 8006042:	b510      	push	{r4, lr}
 8006044:	4604      	mov	r4, r0
 8006046:	dc01      	bgt.n	800604c <_close+0xc>
 8006048:	2000      	movs	r0, #0
 800604a:	bd10      	pop	{r4, pc}
 800604c:	f001 f94c 	bl	80072e8 <__errno>
 8006050:	2309      	movs	r3, #9
 8006052:	6003      	str	r3, [r0, #0]
 8006054:	3c03      	subs	r4, #3
 8006056:	4b09      	ldr	r3, [pc, #36]	; (800607c <_close+0x3c>)
 8006058:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800605c:	2200      	movs	r2, #0
 800605e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8006062:	b140      	cbz	r0, 8006076 <_close+0x36>
 8006064:	6803      	ldr	r3, [r0, #0]
 8006066:	691b      	ldr	r3, [r3, #16]
 8006068:	4798      	blx	r3
 800606a:	1e04      	subs	r4, r0, #0
 800606c:	daec      	bge.n	8006048 <_close+0x8>
 800606e:	f001 f93b 	bl	80072e8 <__errno>
 8006072:	4264      	negs	r4, r4
 8006074:	6004      	str	r4, [r0, #0]
 8006076:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800607a:	bd10      	pop	{r4, pc}
 800607c:	200024e8 	.word	0x200024e8

08006080 <_write>:
 8006080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006082:	4605      	mov	r5, r0
 8006084:	460e      	mov	r6, r1
 8006086:	4614      	mov	r4, r2
 8006088:	f001 f92e 	bl	80072e8 <__errno>
 800608c:	2309      	movs	r3, #9
 800608e:	2d02      	cmp	r5, #2
 8006090:	6003      	str	r3, [r0, #0]
 8006092:	dc0f      	bgt.n	80060b4 <_write+0x34>
 8006094:	4b12      	ldr	r3, [pc, #72]	; (80060e0 <_write+0x60>)
 8006096:	681b      	ldr	r3, [r3, #0]
 8006098:	b90b      	cbnz	r3, 800609e <_write+0x1e>
 800609a:	f7ff ffbb 	bl	8006014 <init_serial()>
 800609e:	4635      	mov	r5, r6
 80060a0:	1937      	adds	r7, r6, r4
 80060a2:	4e10      	ldr	r6, [pc, #64]	; (80060e4 <_write+0x64>)
 80060a4:	42bd      	cmp	r5, r7
 80060a6:	d015      	beq.n	80060d4 <_write+0x54>
 80060a8:	f815 1b01 	ldrb.w	r1, [r5], #1
 80060ac:	4630      	mov	r0, r6
 80060ae:	f7fe faaf 	bl	8004610 <serial_putc>
 80060b2:	e7f7      	b.n	80060a4 <_write+0x24>
 80060b4:	3d03      	subs	r5, #3
 80060b6:	4b0c      	ldr	r3, [pc, #48]	; (80060e8 <_write+0x68>)
 80060b8:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80060bc:	b160      	cbz	r0, 80060d8 <_write+0x58>
 80060be:	6803      	ldr	r3, [r0, #0]
 80060c0:	4622      	mov	r2, r4
 80060c2:	68db      	ldr	r3, [r3, #12]
 80060c4:	4631      	mov	r1, r6
 80060c6:	4798      	blx	r3
 80060c8:	1e04      	subs	r4, r0, #0
 80060ca:	da03      	bge.n	80060d4 <_write+0x54>
 80060cc:	f001 f90c 	bl	80072e8 <__errno>
 80060d0:	4263      	negs	r3, r4
 80060d2:	6003      	str	r3, [r0, #0]
 80060d4:	4620      	mov	r0, r4
 80060d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80060d8:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80060dc:	e7fa      	b.n	80060d4 <_write+0x54>
 80060de:	bf00      	nop
 80060e0:	200021e0 	.word	0x200021e0
 80060e4:	2000309c 	.word	0x2000309c
 80060e8:	200024e8 	.word	0x200024e8

080060ec <_read>:
 80060ec:	b570      	push	{r4, r5, r6, lr}
 80060ee:	4604      	mov	r4, r0
 80060f0:	460d      	mov	r5, r1
 80060f2:	4616      	mov	r6, r2
 80060f4:	f001 f8f8 	bl	80072e8 <__errno>
 80060f8:	2309      	movs	r3, #9
 80060fa:	2c02      	cmp	r4, #2
 80060fc:	6003      	str	r3, [r0, #0]
 80060fe:	dc0b      	bgt.n	8006118 <_read+0x2c>
 8006100:	4b0f      	ldr	r3, [pc, #60]	; (8006140 <_read+0x54>)
 8006102:	681b      	ldr	r3, [r3, #0]
 8006104:	b90b      	cbnz	r3, 800610a <_read+0x1e>
 8006106:	f7ff ff85 	bl	8006014 <init_serial()>
 800610a:	480e      	ldr	r0, [pc, #56]	; (8006144 <_read+0x58>)
 800610c:	f7fe fa5e 	bl	80045cc <serial_getc>
 8006110:	2401      	movs	r4, #1
 8006112:	7028      	strb	r0, [r5, #0]
 8006114:	4620      	mov	r0, r4
 8006116:	bd70      	pop	{r4, r5, r6, pc}
 8006118:	3c03      	subs	r4, #3
 800611a:	4b0b      	ldr	r3, [pc, #44]	; (8006148 <_read+0x5c>)
 800611c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8006120:	b158      	cbz	r0, 800613a <_read+0x4e>
 8006122:	6803      	ldr	r3, [r0, #0]
 8006124:	4632      	mov	r2, r6
 8006126:	689b      	ldr	r3, [r3, #8]
 8006128:	4629      	mov	r1, r5
 800612a:	4798      	blx	r3
 800612c:	1e04      	subs	r4, r0, #0
 800612e:	daf1      	bge.n	8006114 <_read+0x28>
 8006130:	f001 f8da 	bl	80072e8 <__errno>
 8006134:	4263      	negs	r3, r4
 8006136:	6003      	str	r3, [r0, #0]
 8006138:	e7ec      	b.n	8006114 <_read+0x28>
 800613a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800613e:	e7e9      	b.n	8006114 <_read+0x28>
 8006140:	200021e0 	.word	0x200021e0
 8006144:	2000309c 	.word	0x2000309c
 8006148:	200024e8 	.word	0x200024e8

0800614c <_lseek>:
 800614c:	b570      	push	{r4, r5, r6, lr}
 800614e:	4604      	mov	r4, r0
 8006150:	460d      	mov	r5, r1
 8006152:	4616      	mov	r6, r2
 8006154:	f001 f8c8 	bl	80072e8 <__errno>
 8006158:	2309      	movs	r3, #9
 800615a:	2c02      	cmp	r4, #2
 800615c:	6003      	str	r3, [r0, #0]
 800615e:	dd0b      	ble.n	8006178 <_lseek+0x2c>
 8006160:	3c03      	subs	r4, #3
 8006162:	4b08      	ldr	r3, [pc, #32]	; (8006184 <_lseek+0x38>)
 8006164:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8006168:	b140      	cbz	r0, 800617c <_lseek+0x30>
 800616a:	6803      	ldr	r3, [r0, #0]
 800616c:	4632      	mov	r2, r6
 800616e:	4629      	mov	r1, r5
 8006170:	69db      	ldr	r3, [r3, #28]
 8006172:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006176:	4718      	bx	r3
 8006178:	2000      	movs	r0, #0
 800617a:	bd70      	pop	{r4, r5, r6, pc}
 800617c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006180:	bd70      	pop	{r4, r5, r6, pc}
 8006182:	bf00      	nop
 8006184:	200024e8 	.word	0x200024e8

08006188 <software_init_hook>:
 8006188:	b508      	push	{r3, lr}
 800618a:	f7fe fa57 	bl	800463c <mbed_sdk_init>
 800618e:	f7fb fdfd 	bl	8001d8c <software_init_hook_rtos>
 8006192:	bd08      	pop	{r3, pc}

08006194 <mbed_main>:
 8006194:	4770      	bx	lr

08006196 <__wrap_main>:
 8006196:	b508      	push	{r3, lr}
 8006198:	f7ff fffc 	bl	8006194 <mbed_main>
 800619c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80061a0:	f7fb b9d8 	b.w	8001554 <main>

080061a4 <_sbrk>:
 80061a4:	4a0c      	ldr	r2, [pc, #48]	; (80061d8 <_sbrk+0x34>)
 80061a6:	6813      	ldr	r3, [r2, #0]
 80061a8:	b510      	push	{r4, lr}
 80061aa:	4418      	add	r0, r3
 80061ac:	f3ef 8108 	mrs	r1, MSP
 80061b0:	4288      	cmp	r0, r1
 80061b2:	d305      	bcc.n	80061c0 <_sbrk+0x1c>
 80061b4:	4b09      	ldr	r3, [pc, #36]	; (80061dc <_sbrk+0x38>)
 80061b6:	220c      	movs	r2, #12
 80061b8:	601a      	str	r2, [r3, #0]
 80061ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80061be:	bd10      	pop	{r4, pc}
 80061c0:	4907      	ldr	r1, [pc, #28]	; (80061e0 <_sbrk+0x3c>)
 80061c2:	680c      	ldr	r4, [r1, #0]
 80061c4:	b124      	cbz	r4, 80061d0 <_sbrk+0x2c>
 80061c6:	4907      	ldr	r1, [pc, #28]	; (80061e4 <_sbrk+0x40>)
 80061c8:	6809      	ldr	r1, [r1, #0]
 80061ca:	4421      	add	r1, r4
 80061cc:	4288      	cmp	r0, r1
 80061ce:	d2f1      	bcs.n	80061b4 <_sbrk+0x10>
 80061d0:	6010      	str	r0, [r2, #0]
 80061d2:	4618      	mov	r0, r3
 80061d4:	bd10      	pop	{r4, pc}
 80061d6:	bf00      	nop
 80061d8:	20000024 	.word	0x20000024
 80061dc:	200030c4 	.word	0x200030c4
 80061e0:	200025e8 	.word	0x200025e8
 80061e4:	200025ec 	.word	0x200025ec

080061e8 <_exit>:
 80061e8:	4c07      	ldr	r4, [pc, #28]	; (8006208 <_exit+0x20>)
 80061ea:	b508      	push	{r3, lr}
 80061ec:	6823      	ldr	r3, [r4, #0]
 80061ee:	4605      	mov	r5, r0
 80061f0:	6898      	ldr	r0, [r3, #8]
 80061f2:	f001 f931 	bl	8007458 <fflush>
 80061f6:	6823      	ldr	r3, [r4, #0]
 80061f8:	68d8      	ldr	r0, [r3, #12]
 80061fa:	f001 f92d 	bl	8007458 <fflush>
 80061fe:	b10d      	cbz	r5, 8006204 <_exit+0x1c>
 8006200:	f7fb fd57 	bl	8001cb2 <mbed_die>
 8006204:	e7fe      	b.n	8006204 <_exit+0x1c>
 8006206:	bf00      	nop
 8006208:	20000028 	.word	0x20000028

0800620c <__aeabi_atexit>:
 800620c:	2001      	movs	r0, #1
 800620e:	4770      	bx	lr

08006210 <__wrap_exit>:
 8006210:	b508      	push	{r3, lr}
 8006212:	f7ff ffe9 	bl	80061e8 <_exit>

08006216 <__malloc_lock>:
 8006216:	b508      	push	{r3, lr}
 8006218:	f7fb fdc6 	bl	8001da8 <__rtos_malloc_lock>
 800621c:	bd08      	pop	{r3, pc}

0800621e <__malloc_unlock>:
 800621e:	b508      	push	{r3, lr}
 8006220:	f7fb fdca 	bl	8001db8 <__rtos_malloc_unlock>
 8006224:	bd08      	pop	{r3, pc}
	...

08006228 <operator new[](unsigned int)>:
 8006228:	b510      	push	{r4, lr}
 800622a:	f001 fa15 	bl	8007658 <malloc>
 800622e:	4604      	mov	r4, r0
 8006230:	b910      	cbnz	r0, 8006238 <operator new[](unsigned int)+0x10>
 8006232:	4802      	ldr	r0, [pc, #8]	; (800623c <operator new[](unsigned int)+0x14>)
 8006234:	f7fb fd38 	bl	8001ca8 <error>
 8006238:	4620      	mov	r0, r4
 800623a:	bd10      	pop	{r4, pc}
 800623c:	0800882c 	.word	0x0800882c

08006240 <operator delete[](void*)>:
 8006240:	b108      	cbz	r0, 8006246 <operator delete[](void*)+0x6>
 8006242:	f001 ba11 	b.w	8007668 <free>
 8006246:	4770      	bx	lr

08006248 <operator delete(void*)>:
 8006248:	f7ff bffa 	b.w	8006240 <operator delete[](void*)>

0800624c <rtos::Thread::_thunk(void const*)>:
 800624c:	6903      	ldr	r3, [r0, #16]
 800624e:	b510      	push	{r4, lr}
 8006250:	681b      	ldr	r3, [r3, #0]
 8006252:	4604      	mov	r4, r0
 8006254:	3004      	adds	r0, #4
 8006256:	4798      	blx	r3
 8006258:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 800625c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8006260:	f000 f900 	bl	8006464 <rtos::Mutex::lock(unsigned long)>
 8006264:	2300      	movs	r3, #0
 8006266:	6163      	str	r3, [r4, #20]
 8006268:	2301      	movs	r3, #1
 800626a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800626e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8006272:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006276:	f000 b8d3 	b.w	8006420 <rtos::Semaphore::release()>
	...

0800627c <thread_terminate_hook>:
 800627c:	4b02      	ldr	r3, [pc, #8]	; (8006288 <thread_terminate_hook+0xc>)
 800627e:	681b      	ldr	r3, [r3, #0]
 8006280:	b103      	cbz	r3, 8006284 <thread_terminate_hook+0x8>
 8006282:	4718      	bx	r3
 8006284:	4770      	bx	lr
 8006286:	bf00      	nop
 8006288:	200025f0 	.word	0x200025f0

0800628c <rtos::Thread::constructor(osPriority, unsigned long, unsigned char*)>:
 800628c:	b510      	push	{r4, lr}
 800628e:	2400      	movs	r4, #0
 8006290:	6144      	str	r4, [r0, #20]
 8006292:	f880 4055 	strb.w	r4, [r0, #85]	; 0x55
 8006296:	fab3 f483 	clz	r4, r3
 800629a:	0964      	lsrs	r4, r4, #5
 800629c:	f880 4054 	strb.w	r4, [r0, #84]	; 0x54
 80062a0:	8381      	strh	r1, [r0, #28]
 80062a2:	6242      	str	r2, [r0, #36]	; 0x24
 80062a4:	6283      	str	r3, [r0, #40]	; 0x28
 80062a6:	bd10      	pop	{r4, pc}

080062a8 <rtos::Thread::terminate()>:
 80062a8:	b570      	push	{r4, r5, r6, lr}
 80062aa:	f100 053c 	add.w	r5, r0, #60	; 0x3c
 80062ae:	4604      	mov	r4, r0
 80062b0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80062b4:	4628      	mov	r0, r5
 80062b6:	f000 f8d5 	bl	8006464 <rtos::Mutex::lock(unsigned long)>
 80062ba:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80062be:	6966      	ldr	r6, [r4, #20]
 80062c0:	f000 f8ae 	bl	8006420 <rtos::Semaphore::release()>
 80062c4:	2300      	movs	r3, #0
 80062c6:	6163      	str	r3, [r4, #20]
 80062c8:	2301      	movs	r3, #1
 80062ca:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80062ce:	4630      	mov	r0, r6
 80062d0:	f7fc fd26 	bl	8002d20 <osThreadTerminate>
 80062d4:	4604      	mov	r4, r0
 80062d6:	4628      	mov	r0, r5
 80062d8:	f000 f8c7 	bl	800646a <rtos::Mutex::unlock()>
 80062dc:	4620      	mov	r0, r4
 80062de:	bd70      	pop	{r4, r5, r6, pc}

080062e0 <rtos::Thread::signal_set(long)>:
 80062e0:	6940      	ldr	r0, [r0, #20]
 80062e2:	f7fc bc1d 	b.w	8002b20 <osSignalSet>

080062e6 <rtos::Thread::signal_wait(long, unsigned long)>:
 80062e6:	b510      	push	{r4, lr}
 80062e8:	4604      	mov	r4, r0
 80062ea:	f7fc fc2f 	bl	8002b4c <osSignalWait>
 80062ee:	4620      	mov	r0, r4
 80062f0:	bd10      	pop	{r4, pc}

080062f2 <rtos::Thread::wait(unsigned long)>:
 80062f2:	f7fc bb89 	b.w	8002a08 <osDelay>
	...

080062f8 <rtos::Thread::~Thread()>:
 80062f8:	b510      	push	{r4, lr}
 80062fa:	4b0d      	ldr	r3, [pc, #52]	; (8006330 <rtos::Thread::~Thread()+0x38>)
 80062fc:	6003      	str	r3, [r0, #0]
 80062fe:	4604      	mov	r4, r0
 8006300:	f7ff ffd2 	bl	80062a8 <rtos::Thread::terminate()>
 8006304:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8006308:	b12b      	cbz	r3, 8006316 <rtos::Thread::~Thread()+0x1e>
 800630a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800630c:	b108      	cbz	r0, 8006312 <rtos::Thread::~Thread()+0x1a>
 800630e:	f7ff ff97 	bl	8006240 <operator delete[](void*)>
 8006312:	2300      	movs	r3, #0
 8006314:	62a3      	str	r3, [r4, #40]	; 0x28
 8006316:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 800631a:	f000 f8a9 	bl	8006470 <rtos::Mutex::~Mutex()>
 800631e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8006322:	f000 f880 	bl	8006426 <rtos::Semaphore::~Semaphore()>
 8006326:	1d20      	adds	r0, r4, #4
 8006328:	f7fa f924 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 800632c:	4620      	mov	r0, r4
 800632e:	bd10      	pop	{r4, pc}
 8006330:	08008854 	.word	0x08008854

08006334 <rtos::Thread::~Thread()>:
 8006334:	b510      	push	{r4, lr}
 8006336:	4604      	mov	r4, r0
 8006338:	f7ff ffde 	bl	80062f8 <rtos::Thread::~Thread()>
 800633c:	4620      	mov	r0, r4
 800633e:	f7ff ff83 	bl	8006248 <operator delete(void*)>
 8006342:	4620      	mov	r0, r4
 8006344:	bd10      	pop	{r4, pc}
	...

08006348 <rtos::Thread::start(mbed::Callback<void ()>)>:
 8006348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800634a:	4604      	mov	r4, r0
 800634c:	f100 053c 	add.w	r5, r0, #60	; 0x3c
 8006350:	460f      	mov	r7, r1
 8006352:	4628      	mov	r0, r5
 8006354:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8006358:	f000 f884 	bl	8006464 <rtos::Mutex::lock(unsigned long)>
 800635c:	6963      	ldr	r3, [r4, #20]
 800635e:	b913      	cbnz	r3, 8006366 <rtos::Thread::start(mbed::Callback<void ()>)+0x1e>
 8006360:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8006364:	b123      	cbz	r3, 8006370 <rtos::Thread::start(mbed::Callback<void ()>)+0x28>
 8006366:	4628      	mov	r0, r5
 8006368:	f000 f87f 	bl	800646a <rtos::Mutex::unlock()>
 800636c:	2080      	movs	r0, #128	; 0x80
 800636e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006370:	4b21      	ldr	r3, [pc, #132]	; (80063f8 <rtos::Thread::start(mbed::Callback<void ()>)+0xb0>)
 8006372:	61a3      	str	r3, [r4, #24]
 8006374:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006376:	b953      	cbnz	r3, 800638e <rtos::Thread::start(mbed::Callback<void ()>)+0x46>
 8006378:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800637a:	4b20      	ldr	r3, [pc, #128]	; (80063fc <rtos::Thread::start(mbed::Callback<void ()>)+0xb4>)
 800637c:	4298      	cmp	r0, r3
 800637e:	bf94      	ite	ls
 8006380:	f020 0003 	bicls.w	r0, r0, #3
 8006384:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8006388:	f7ff ff4e 	bl	8006228 <operator new[](unsigned int)>
 800638c:	62a0      	str	r0, [r4, #40]	; 0x28
 800638e:	491c      	ldr	r1, [pc, #112]	; (8006400 <rtos::Thread::start(mbed::Callback<void ()>)+0xb8>)
 8006390:	2300      	movs	r3, #0
 8006392:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006394:	ebb3 0f92 	cmp.w	r3, r2, lsr #2
 8006398:	d204      	bcs.n	80063a4 <rtos::Thread::start(mbed::Callback<void ()>)+0x5c>
 800639a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800639c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80063a0:	3301      	adds	r3, #1
 80063a2:	e7f6      	b.n	8006392 <rtos::Thread::start(mbed::Callback<void ()>)+0x4a>
 80063a4:	1d26      	adds	r6, r4, #4
 80063a6:	42be      	cmp	r6, r7
 80063a8:	d007      	beq.n	80063ba <rtos::Thread::start(mbed::Callback<void ()>)+0x72>
 80063aa:	4630      	mov	r0, r6
 80063ac:	f7fa f8e2 	bl	8000574 <mbed::Callback<void ()>::~Callback()>
 80063b0:	b11e      	cbz	r6, 80063ba <rtos::Thread::start(mbed::Callback<void ()>)+0x72>
 80063b2:	4639      	mov	r1, r7
 80063b4:	4630      	mov	r0, r6
 80063b6:	f7fa f935 	bl	8000624 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 80063ba:	4621      	mov	r1, r4
 80063bc:	f104 0018 	add.w	r0, r4, #24
 80063c0:	f7fc fcaa 	bl	8002d18 <osThreadCreate>
 80063c4:	6160      	str	r0, [r4, #20]
 80063c6:	b988      	cbnz	r0, 80063ec <rtos::Thread::start(mbed::Callback<void ()>)+0xa4>
 80063c8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80063cc:	b12b      	cbz	r3, 80063da <rtos::Thread::start(mbed::Callback<void ()>)+0x92>
 80063ce:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80063d0:	b108      	cbz	r0, 80063d6 <rtos::Thread::start(mbed::Callback<void ()>)+0x8e>
 80063d2:	f7ff ff35 	bl	8006240 <operator delete[](void*)>
 80063d6:	2300      	movs	r3, #0
 80063d8:	62a3      	str	r3, [r4, #40]	; 0x28
 80063da:	4628      	mov	r0, r5
 80063dc:	f000 f845 	bl	800646a <rtos::Mutex::unlock()>
 80063e0:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80063e4:	f000 f81c 	bl	8006420 <rtos::Semaphore::release()>
 80063e8:	2081      	movs	r0, #129	; 0x81
 80063ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80063ec:	4628      	mov	r0, r5
 80063ee:	f000 f83c 	bl	800646a <rtos::Mutex::unlock()>
 80063f2:	2000      	movs	r0, #0
 80063f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80063f6:	bf00      	nop
 80063f8:	0800624d 	.word	0x0800624d
 80063fc:	7ffffffb 	.word	0x7ffffffb
 8006400:	e25a2ea5 	.word	0xe25a2ea5

08006404 <rtos::Semaphore::Semaphore(long)>:
 8006404:	b510      	push	{r4, lr}
 8006406:	2200      	movs	r2, #0
 8006408:	f100 0308 	add.w	r3, r0, #8
 800640c:	4604      	mov	r4, r0
 800640e:	6082      	str	r2, [r0, #8]
 8006410:	60c2      	str	r2, [r0, #12]
 8006412:	f840 3f04 	str.w	r3, [r0, #4]!
 8006416:	f7fc fcff 	bl	8002e18 <osSemaphoreCreate>
 800641a:	6020      	str	r0, [r4, #0]
 800641c:	4620      	mov	r0, r4
 800641e:	bd10      	pop	{r4, pc}

08006420 <rtos::Semaphore::release()>:
 8006420:	6800      	ldr	r0, [r0, #0]
 8006422:	f7fc bd19 	b.w	8002e58 <osSemaphoreRelease>

08006426 <rtos::Semaphore::~Semaphore()>:
 8006426:	b510      	push	{r4, lr}
 8006428:	4604      	mov	r4, r0
 800642a:	6800      	ldr	r0, [r0, #0]
 800642c:	f7fc fd28 	bl	8002e80 <osSemaphoreDelete>
 8006430:	4620      	mov	r0, r4
 8006432:	bd10      	pop	{r4, pc}

08006434 <rtos::Mutex::Mutex()>:
 8006434:	b538      	push	{r3, r4, r5, lr}
 8006436:	f100 0508 	add.w	r5, r0, #8
 800643a:	4604      	mov	r4, r0
 800643c:	2210      	movs	r2, #16
 800643e:	2100      	movs	r1, #0
 8006440:	4628      	mov	r0, r5
 8006442:	f001 f992 	bl	800776a <memset>
 8006446:	4620      	mov	r0, r4
 8006448:	f840 5f04 	str.w	r5, [r0, #4]!
 800644c:	f7fc fbdc 	bl	8002c08 <osMutexCreate>
 8006450:	6020      	str	r0, [r4, #0]
 8006452:	b910      	cbnz	r0, 800645a <rtos::Mutex::Mutex()+0x26>
 8006454:	4802      	ldr	r0, [pc, #8]	; (8006460 <rtos::Mutex::Mutex()+0x2c>)
 8006456:	f7fb fc27 	bl	8001ca8 <error>
 800645a:	4620      	mov	r0, r4
 800645c:	bd38      	pop	{r3, r4, r5, pc}
 800645e:	bf00      	nop
 8006460:	0800885c 	.word	0x0800885c

08006464 <rtos::Mutex::lock(unsigned long)>:
 8006464:	6800      	ldr	r0, [r0, #0]
 8006466:	f7fc bbed 	b.w	8002c44 <osMutexWait>

0800646a <rtos::Mutex::unlock()>:
 800646a:	6800      	ldr	r0, [r0, #0]
 800646c:	f7fc bc12 	b.w	8002c94 <osMutexRelease>

08006470 <rtos::Mutex::~Mutex()>:
 8006470:	b510      	push	{r4, lr}
 8006472:	4604      	mov	r4, r0
 8006474:	6800      	ldr	r0, [r0, #0]
 8006476:	f7fc fc75 	bl	8002d64 <osMutexDelete>
 800647a:	4620      	mov	r0, r4
 800647c:	bd10      	pop	{r4, pc}
	...

08006480 <rt_set_PSP>:
 8006480:	f380 8809 	msr	PSP, r0
 8006484:	4770      	bx	lr

08006486 <rt_get_PSP>:
 8006486:	f3ef 8009 	mrs	r0, PSP
 800648a:	4770      	bx	lr

0800648c <os_set_env>:
 800648c:	4668      	mov	r0, sp
 800648e:	f380 8809 	msr	PSP, r0
 8006492:	485a      	ldr	r0, [pc, #360]	; (80065fc <OS_Tick_Handler+0x10>)
 8006494:	7800      	ldrb	r0, [r0, #0]
 8006496:	07c0      	lsls	r0, r0, #31
 8006498:	bf14      	ite	ne
 800649a:	2002      	movne	r0, #2
 800649c:	2003      	moveq	r0, #3
 800649e:	f380 8814 	msr	CONTROL, r0
 80064a2:	4770      	bx	lr

080064a4 <_alloc_box>:
 80064a4:	f8df c158 	ldr.w	r12, [pc, #344]	; 8006600 <OS_Tick_Handler+0x14>
 80064a8:	f3ef 8305 	mrs	r3, IPSR
 80064ac:	061b      	lsls	r3, r3, #24
 80064ae:	bf18      	it	ne
 80064b0:	4760      	bxne	r12
 80064b2:	f3ef 8314 	mrs	r3, CONTROL
 80064b6:	07db      	lsls	r3, r3, #31
 80064b8:	bf08      	it	eq
 80064ba:	4760      	bxeq	r12
 80064bc:	df00      	svc	0
 80064be:	4770      	bx	lr

080064c0 <_free_box>:
 80064c0:	f8df c140 	ldr.w	r12, [pc, #320]	; 8006604 <OS_Tick_Handler+0x18>
 80064c4:	f3ef 8305 	mrs	r3, IPSR
 80064c8:	061b      	lsls	r3, r3, #24
 80064ca:	bf18      	it	ne
 80064cc:	4760      	bxne	r12
 80064ce:	f3ef 8314 	mrs	r3, CONTROL
 80064d2:	07db      	lsls	r3, r3, #31
 80064d4:	bf08      	it	eq
 80064d6:	4760      	bxeq	r12
 80064d8:	df00      	svc	0
 80064da:	4770      	bx	lr

080064dc <SVC_Handler>:
 80064dc:	f3ef 8009 	mrs	r0, PSP
 80064e0:	6981      	ldr	r1, [r0, #24]
 80064e2:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 80064e6:	bbe1      	cbnz	r1, 8006562 <SVC_User>
 80064e8:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 80064ec:	b510      	push	{r4, lr}
 80064ee:	47e0      	blx	r12
 80064f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80064f4:	f3ef 8c09 	mrs	r12, PSP
 80064f8:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 80064fc:	4b42      	ldr	r3, [pc, #264]	; (8006608 <OS_Tick_Handler+0x1c>)
 80064fe:	e893 0006 	ldmia.w	r3, {r1, r2}
 8006502:	4291      	cmp	r1, r2
 8006504:	bf08      	it	eq
 8006506:	4770      	bxeq	lr
 8006508:	b941      	cbnz	r1, 800651c <SVC_ContextSave>
 800650a:	f01e 0f10 	tst.w	lr, #16
 800650e:	d116      	bne.n	800653e <SVC_ContextRestore>
 8006510:	493e      	ldr	r1, [pc, #248]	; (800660c <OS_Tick_Handler+0x20>)
 8006512:	6808      	ldr	r0, [r1, #0]
 8006514:	f020 0001 	bic.w	r0, r0, #1
 8006518:	6008      	str	r0, [r1, #0]
 800651a:	e010      	b.n	800653e <SVC_ContextRestore>

0800651c <SVC_ContextSave>:
 800651c:	f01e 0f10 	tst.w	lr, #16
 8006520:	bf06      	itte	eq
 8006522:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8006526:	2001      	moveq	r0, #1
 8006528:	2000      	movne	r0, #0
 800652a:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 800652e:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8006532:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8006536:	b40c      	push	{r2, r3}
 8006538:	f7fb fdc2 	bl	80020c0 <rt_stk_check>
 800653c:	bc0c      	pop	{r2, r3}

0800653e <SVC_ContextRestore>:
 800653e:	601a      	str	r2, [r3, #0]
 8006540:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8006544:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8006548:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 800654c:	2800      	cmp	r0, #0
 800654e:	bf0e      	itee	eq
 8006550:	f06f 0e02 	mvneq.w	lr, #2
 8006554:	f06f 0e12 	mvnne.w	lr, #18
 8006558:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 800655c:	f38c 8809 	msr	PSP, r12

08006560 <SVC_Exit>:
 8006560:	4770      	bx	lr

08006562 <SVC_User>:
 8006562:	b510      	push	{r4, lr}
 8006564:	4a2a      	ldr	r2, [pc, #168]	; (8006610 <OS_Tick_Handler+0x24>)
 8006566:	6812      	ldr	r2, [r2, #0]
 8006568:	4291      	cmp	r1, r2
 800656a:	d809      	bhi.n	8006580 <SVC_Done>
 800656c:	4c29      	ldr	r4, [pc, #164]	; (8006614 <OS_Tick_Handler+0x28>)
 800656e:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 8006572:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8006576:	47a0      	blx	r4
 8006578:	f3ef 8c09 	mrs	r12, PSP
 800657c:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08006580 <SVC_Done>:
 8006580:	bd10      	pop	{r4, pc}

08006582 <PendSV_Handler>:
 8006582:	b510      	push	{r4, lr}
 8006584:	f7fb fd28 	bl	8001fd8 <rt_pop_req>

08006588 <Sys_Switch>:
 8006588:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800658c:	4b1e      	ldr	r3, [pc, #120]	; (8006608 <OS_Tick_Handler+0x1c>)
 800658e:	e893 0006 	ldmia.w	r3, {r1, r2}
 8006592:	4291      	cmp	r1, r2
 8006594:	bf08      	it	eq
 8006596:	4770      	bxeq	lr
 8006598:	f3ef 8c09 	mrs	r12, PSP
 800659c:	f01e 0f10 	tst.w	lr, #16
 80065a0:	bf06      	itte	eq
 80065a2:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80065a6:	2001      	moveq	r0, #1
 80065a8:	2000      	movne	r0, #0
 80065aa:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 80065ae:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80065b2:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80065b6:	b40c      	push	{r2, r3}
 80065b8:	f7fb fd82 	bl	80020c0 <rt_stk_check>
 80065bc:	bc0c      	pop	{r2, r3}
 80065be:	601a      	str	r2, [r3, #0]
 80065c0:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 80065c4:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80065c8:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 80065cc:	2800      	cmp	r0, #0
 80065ce:	bf0e      	itee	eq
 80065d0:	f06f 0e02 	mvneq.w	lr, #2
 80065d4:	f06f 0e12 	mvnne.w	lr, #18
 80065d8:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 80065dc:	f38c 8809 	msr	PSP, r12

080065e0 <Sys_Exit>:
 80065e0:	4770      	bx	lr

080065e2 <SysTick_Handler>:
 80065e2:	b510      	push	{r4, lr}
 80065e4:	f7fb fd4e 	bl	8002084 <rt_systick>
 80065e8:	f7ff bfce 	b.w	8006588 <Sys_Switch>

080065ec <OS_Tick_Handler>:
 80065ec:	b510      	push	{r4, lr}
 80065ee:	f7fb fd47 	bl	8002080 <os_tick_irqack>
 80065f2:	f7fb fd47 	bl	8002084 <rt_systick>
 80065f6:	f7ff bfc7 	b.w	8006588 <Sys_Switch>
 80065fa:	0000      	.short	0x0000
 80065fc:	0800847a 	.word	0x0800847a
 8006600:	080021ef 	.word	0x080021ef
 8006604:	08002209 	.word	0x08002209
 8006608:	20003014 	.word	0x20003014
 800660c:	e000ef34 	.word	0xe000ef34
 8006610:	00000000 	.word	0x00000000
 8006614:	fffffffc 	.word	0xfffffffc

08006618 <Reset_Handler>:
 8006618:	f8df d024 	ldr.w	sp, [pc, #36]	; 8006640 <LoopForever+0x4>
 800661c:	2100      	movs	r1, #0
 800661e:	e003      	b.n	8006628 <LoopCopyDataInit>

08006620 <CopyDataInit>:
 8006620:	4b08      	ldr	r3, [pc, #32]	; (8006644 <LoopForever+0x8>)
 8006622:	585b      	ldr	r3, [r3, r1]
 8006624:	5043      	str	r3, [r0, r1]
 8006626:	3104      	adds	r1, #4

08006628 <LoopCopyDataInit>:
 8006628:	4807      	ldr	r0, [pc, #28]	; (8006648 <LoopForever+0xc>)
 800662a:	4b08      	ldr	r3, [pc, #32]	; (800664c <LoopForever+0x10>)
 800662c:	1842      	adds	r2, r0, r1
 800662e:	429a      	cmp	r2, r3
 8006630:	d3f6      	bcc.n	8006620 <CopyDataInit>
 8006632:	f7fe f8b1 	bl	8004798 <SystemInit>
 8006636:	f7fa fff9 	bl	800162c <_start>
 800663a:	4770      	bx	lr

0800663c <LoopForever>:
 800663c:	e7fe      	b.n	800663c <LoopForever>
 800663e:	0000      	.short	0x0000
 8006640:	2000c000 	.word	0x2000c000
 8006644:	08008928 	.word	0x08008928
 8006648:	20000000 	.word	0x20000000
 800664c:	200000a8 	.word	0x200000a8

08006650 <ADC1_IRQHandler>:
 8006650:	e7fe      	b.n	8006650 <ADC1_IRQHandler>
	...

08006654 <__aeabi_drsub>:
 8006654:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8006658:	e002      	b.n	8006660 <__adddf3>
 800665a:	bf00      	nop

0800665c <__aeabi_dsub>:
 800665c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08006660 <__adddf3>:
 8006660:	b530      	push	{r4, r5, lr}
 8006662:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8006666:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800666a:	ea94 0f05 	teq	r4, r5
 800666e:	bf08      	it	eq
 8006670:	ea90 0f02 	teqeq	r0, r2
 8006674:	bf1f      	itttt	ne
 8006676:	ea54 0c00 	orrsne.w	r12, r4, r0
 800667a:	ea55 0c02 	orrsne.w	r12, r5, r2
 800667e:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
 8006682:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8006686:	f000 80e2 	beq.w	800684e <__adddf3+0x1ee>
 800668a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800668e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8006692:	bfb8      	it	lt
 8006694:	426d      	neglt	r5, r5
 8006696:	dd0c      	ble.n	80066b2 <__adddf3+0x52>
 8006698:	442c      	add	r4, r5
 800669a:	ea80 0202 	eor.w	r2, r0, r2
 800669e:	ea81 0303 	eor.w	r3, r1, r3
 80066a2:	ea82 0000 	eor.w	r0, r2, r0
 80066a6:	ea83 0101 	eor.w	r1, r3, r1
 80066aa:	ea80 0202 	eor.w	r2, r0, r2
 80066ae:	ea81 0303 	eor.w	r3, r1, r3
 80066b2:	2d36      	cmp	r5, #54	; 0x36
 80066b4:	bf88      	it	hi
 80066b6:	bd30      	pophi	{r4, r5, pc}
 80066b8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80066bc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80066c0:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
 80066c4:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
 80066c8:	d002      	beq.n	80066d0 <__adddf3+0x70>
 80066ca:	4240      	negs	r0, r0
 80066cc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80066d0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80066d4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80066d8:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
 80066dc:	d002      	beq.n	80066e4 <__adddf3+0x84>
 80066de:	4252      	negs	r2, r2
 80066e0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80066e4:	ea94 0f05 	teq	r4, r5
 80066e8:	f000 80a7 	beq.w	800683a <__adddf3+0x1da>
 80066ec:	f1a4 0401 	sub.w	r4, r4, #1
 80066f0:	f1d5 0e20 	rsbs	lr, r5, #32
 80066f4:	db0d      	blt.n	8006712 <__adddf3+0xb2>
 80066f6:	fa02 fc0e 	lsl.w	r12, r2, lr
 80066fa:	fa22 f205 	lsr.w	r2, r2, r5
 80066fe:	1880      	adds	r0, r0, r2
 8006700:	f141 0100 	adc.w	r1, r1, #0
 8006704:	fa03 f20e 	lsl.w	r2, r3, lr
 8006708:	1880      	adds	r0, r0, r2
 800670a:	fa43 f305 	asr.w	r3, r3, r5
 800670e:	4159      	adcs	r1, r3
 8006710:	e00e      	b.n	8006730 <__adddf3+0xd0>
 8006712:	f1a5 0520 	sub.w	r5, r5, #32
 8006716:	f10e 0e20 	add.w	lr, lr, #32
 800671a:	2a01      	cmp	r2, #1
 800671c:	fa03 fc0e 	lsl.w	r12, r3, lr
 8006720:	bf28      	it	cs
 8006722:	f04c 0c02 	orrcs.w	r12, r12, #2
 8006726:	fa43 f305 	asr.w	r3, r3, r5
 800672a:	18c0      	adds	r0, r0, r3
 800672c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8006730:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006734:	d507      	bpl.n	8006746 <__adddf3+0xe6>
 8006736:	f04f 0e00 	mov.w	lr, #0
 800673a:	f1dc 0c00 	rsbs	r12, r12, #0
 800673e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8006742:	eb6e 0101 	sbc.w	r1, lr, r1
 8006746:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800674a:	d31b      	bcc.n	8006784 <__adddf3+0x124>
 800674c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8006750:	d30c      	bcc.n	800676c <__adddf3+0x10c>
 8006752:	0849      	lsrs	r1, r1, #1
 8006754:	ea5f 0030 	movs.w	r0, r0, rrx
 8006758:	ea4f 0c3c 	mov.w	r12, r12, rrx
 800675c:	f104 0401 	add.w	r4, r4, #1
 8006760:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8006764:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8006768:	f080 809a 	bcs.w	80068a0 <__adddf3+0x240>
 800676c:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
 8006770:	bf08      	it	eq
 8006772:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 8006776:	f150 0000 	adcs.w	r0, r0, #0
 800677a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800677e:	ea41 0105 	orr.w	r1, r1, r5
 8006782:	bd30      	pop	{r4, r5, pc}
 8006784:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
 8006788:	4140      	adcs	r0, r0
 800678a:	eb41 0101 	adc.w	r1, r1, r1
 800678e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006792:	f1a4 0401 	sub.w	r4, r4, #1
 8006796:	d1e9      	bne.n	800676c <__adddf3+0x10c>
 8006798:	f091 0f00 	teq	r1, #0
 800679c:	bf04      	itt	eq
 800679e:	4601      	moveq	r1, r0
 80067a0:	2000      	moveq	r0, #0
 80067a2:	fab1 f381 	clz	r3, r1
 80067a6:	bf08      	it	eq
 80067a8:	3320      	addeq	r3, #32
 80067aa:	f1a3 030b 	sub.w	r3, r3, #11
 80067ae:	f1b3 0220 	subs.w	r2, r3, #32
 80067b2:	da0c      	bge.n	80067ce <__adddf3+0x16e>
 80067b4:	320c      	adds	r2, #12
 80067b6:	dd08      	ble.n	80067ca <__adddf3+0x16a>
 80067b8:	f102 0c14 	add.w	r12, r2, #20
 80067bc:	f1c2 020c 	rsb	r2, r2, #12
 80067c0:	fa01 f00c 	lsl.w	r0, r1, r12
 80067c4:	fa21 f102 	lsr.w	r1, r1, r2
 80067c8:	e00c      	b.n	80067e4 <__adddf3+0x184>
 80067ca:	f102 0214 	add.w	r2, r2, #20
 80067ce:	bfd8      	it	le
 80067d0:	f1c2 0c20 	rsble	r12, r2, #32
 80067d4:	fa01 f102 	lsl.w	r1, r1, r2
 80067d8:	fa20 fc0c 	lsr.w	r12, r0, r12
 80067dc:	bfdc      	itt	le
 80067de:	ea41 010c 	orrle.w	r1, r1, r12
 80067e2:	4090      	lslle	r0, r2
 80067e4:	1ae4      	subs	r4, r4, r3
 80067e6:	bfa2      	ittt	ge
 80067e8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80067ec:	4329      	orrge	r1, r5
 80067ee:	bd30      	popge	{r4, r5, pc}
 80067f0:	ea6f 0404 	mvn.w	r4, r4
 80067f4:	3c1f      	subs	r4, #31
 80067f6:	da1c      	bge.n	8006832 <__adddf3+0x1d2>
 80067f8:	340c      	adds	r4, #12
 80067fa:	dc0e      	bgt.n	800681a <__adddf3+0x1ba>
 80067fc:	f104 0414 	add.w	r4, r4, #20
 8006800:	f1c4 0220 	rsb	r2, r4, #32
 8006804:	fa20 f004 	lsr.w	r0, r0, r4
 8006808:	fa01 f302 	lsl.w	r3, r1, r2
 800680c:	ea40 0003 	orr.w	r0, r0, r3
 8006810:	fa21 f304 	lsr.w	r3, r1, r4
 8006814:	ea45 0103 	orr.w	r1, r5, r3
 8006818:	bd30      	pop	{r4, r5, pc}
 800681a:	f1c4 040c 	rsb	r4, r4, #12
 800681e:	f1c4 0220 	rsb	r2, r4, #32
 8006822:	fa20 f002 	lsr.w	r0, r0, r2
 8006826:	fa01 f304 	lsl.w	r3, r1, r4
 800682a:	ea40 0003 	orr.w	r0, r0, r3
 800682e:	4629      	mov	r1, r5
 8006830:	bd30      	pop	{r4, r5, pc}
 8006832:	fa21 f004 	lsr.w	r0, r1, r4
 8006836:	4629      	mov	r1, r5
 8006838:	bd30      	pop	{r4, r5, pc}
 800683a:	f094 0f00 	teq	r4, #0
 800683e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8006842:	bf06      	itte	eq
 8006844:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8006848:	3401      	addeq	r4, #1
 800684a:	3d01      	subne	r5, #1
 800684c:	e74e      	b.n	80066ec <__adddf3+0x8c>
 800684e:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8006852:	bf18      	it	ne
 8006854:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8006858:	d029      	beq.n	80068ae <__adddf3+0x24e>
 800685a:	ea94 0f05 	teq	r4, r5
 800685e:	bf08      	it	eq
 8006860:	ea90 0f02 	teqeq	r0, r2
 8006864:	d005      	beq.n	8006872 <__adddf3+0x212>
 8006866:	ea54 0c00 	orrs.w	r12, r4, r0
 800686a:	bf04      	itt	eq
 800686c:	4619      	moveq	r1, r3
 800686e:	4610      	moveq	r0, r2
 8006870:	bd30      	pop	{r4, r5, pc}
 8006872:	ea91 0f03 	teq	r1, r3
 8006876:	bf1e      	ittt	ne
 8006878:	2100      	movne	r1, #0
 800687a:	2000      	movne	r0, #0
 800687c:	bd30      	popne	{r4, r5, pc}
 800687e:	ea5f 5c54 	movs.w	r12, r4, lsr #21
 8006882:	d105      	bne.n	8006890 <__adddf3+0x230>
 8006884:	0040      	lsls	r0, r0, #1
 8006886:	4149      	adcs	r1, r1
 8006888:	bf28      	it	cs
 800688a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800688e:	bd30      	pop	{r4, r5, pc}
 8006890:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8006894:	bf3c      	itt	cc
 8006896:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800689a:	bd30      	popcc	{r4, r5, pc}
 800689c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80068a0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80068a4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80068a8:	f04f 0000 	mov.w	r0, #0
 80068ac:	bd30      	pop	{r4, r5, pc}
 80068ae:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 80068b2:	bf1a      	itte	ne
 80068b4:	4619      	movne	r1, r3
 80068b6:	4610      	movne	r0, r2
 80068b8:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
 80068bc:	bf1c      	itt	ne
 80068be:	460b      	movne	r3, r1
 80068c0:	4602      	movne	r2, r0
 80068c2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80068c6:	bf06      	itte	eq
 80068c8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80068cc:	ea91 0f03 	teqeq	r1, r3
 80068d0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80068d4:	bd30      	pop	{r4, r5, pc}
 80068d6:	bf00      	nop

080068d8 <__aeabi_ui2d>:
 80068d8:	f090 0f00 	teq	r0, #0
 80068dc:	bf04      	itt	eq
 80068de:	2100      	moveq	r1, #0
 80068e0:	4770      	bxeq	lr
 80068e2:	b530      	push	{r4, r5, lr}
 80068e4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80068e8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80068ec:	f04f 0500 	mov.w	r5, #0
 80068f0:	f04f 0100 	mov.w	r1, #0
 80068f4:	e750      	b.n	8006798 <__adddf3+0x138>
 80068f6:	bf00      	nop

080068f8 <__aeabi_i2d>:
 80068f8:	f090 0f00 	teq	r0, #0
 80068fc:	bf04      	itt	eq
 80068fe:	2100      	moveq	r1, #0
 8006900:	4770      	bxeq	lr
 8006902:	b530      	push	{r4, r5, lr}
 8006904:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006908:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800690c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8006910:	bf48      	it	mi
 8006912:	4240      	negmi	r0, r0
 8006914:	f04f 0100 	mov.w	r1, #0
 8006918:	e73e      	b.n	8006798 <__adddf3+0x138>
 800691a:	bf00      	nop

0800691c <__aeabi_f2d>:
 800691c:	0042      	lsls	r2, r0, #1
 800691e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8006922:	ea4f 0131 	mov.w	r1, r1, rrx
 8006926:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800692a:	bf1f      	itttt	ne
 800692c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8006930:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8006934:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8006938:	4770      	bxne	lr
 800693a:	f092 0f00 	teq	r2, #0
 800693e:	bf14      	ite	ne
 8006940:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8006944:	4770      	bxeq	lr
 8006946:	b530      	push	{r4, r5, lr}
 8006948:	f44f 7460 	mov.w	r4, #896	; 0x380
 800694c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006950:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8006954:	e720      	b.n	8006798 <__adddf3+0x138>
 8006956:	bf00      	nop

08006958 <__aeabi_ul2d>:
 8006958:	ea50 0201 	orrs.w	r2, r0, r1
 800695c:	bf08      	it	eq
 800695e:	4770      	bxeq	lr
 8006960:	b530      	push	{r4, r5, lr}
 8006962:	f04f 0500 	mov.w	r5, #0
 8006966:	e00a      	b.n	800697e <__aeabi_l2d+0x16>

08006968 <__aeabi_l2d>:
 8006968:	ea50 0201 	orrs.w	r2, r0, r1
 800696c:	bf08      	it	eq
 800696e:	4770      	bxeq	lr
 8006970:	b530      	push	{r4, r5, lr}
 8006972:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8006976:	d502      	bpl.n	800697e <__aeabi_l2d+0x16>
 8006978:	4240      	negs	r0, r0
 800697a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800697e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006982:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8006986:	ea5f 5c91 	movs.w	r12, r1, lsr #22
 800698a:	f43f aedc 	beq.w	8006746 <__adddf3+0xe6>
 800698e:	f04f 0203 	mov.w	r2, #3
 8006992:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8006996:	bf18      	it	ne
 8006998:	3203      	addne	r2, #3
 800699a:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 800699e:	bf18      	it	ne
 80069a0:	3203      	addne	r2, #3
 80069a2:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
 80069a6:	f1c2 0320 	rsb	r3, r2, #32
 80069aa:	fa00 fc03 	lsl.w	r12, r0, r3
 80069ae:	fa20 f002 	lsr.w	r0, r0, r2
 80069b2:	fa01 fe03 	lsl.w	lr, r1, r3
 80069b6:	ea40 000e 	orr.w	r0, r0, lr
 80069ba:	fa21 f102 	lsr.w	r1, r1, r2
 80069be:	4414      	add	r4, r2
 80069c0:	e6c1      	b.n	8006746 <__adddf3+0xe6>
 80069c2:	bf00      	nop

080069c4 <__aeabi_dmul>:
 80069c4:	b570      	push	{r4, r5, r6, lr}
 80069c6:	f04f 0cff 	mov.w	r12, #255	; 0xff
 80069ca:	f44c 6ce0 	orr.w	r12, r12, #1792	; 0x700
 80069ce:	ea1c 5411 	ands.w	r4, r12, r1, lsr #20
 80069d2:	bf1d      	ittte	ne
 80069d4:	ea1c 5513 	andsne.w	r5, r12, r3, lsr #20
 80069d8:	ea94 0f0c 	teqne	r4, r12
 80069dc:	ea95 0f0c 	teqne	r5, r12
 80069e0:	f000 f8de 	bleq	8006ba0 <__aeabi_dmul+0x1dc>
 80069e4:	442c      	add	r4, r5
 80069e6:	ea81 0603 	eor.w	r6, r1, r3
 80069ea:	ea21 514c 	bic.w	r1, r1, r12, lsl #21
 80069ee:	ea23 534c 	bic.w	r3, r3, r12, lsl #21
 80069f2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80069f6:	bf18      	it	ne
 80069f8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80069fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006a00:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006a04:	d038      	beq.n	8006a78 <__aeabi_dmul+0xb4>
 8006a06:	fba0 ce02 	umull	r12, lr, r0, r2
 8006a0a:	f04f 0500 	mov.w	r5, #0
 8006a0e:	fbe1 e502 	umlal	lr, r5, r1, r2
 8006a12:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8006a16:	fbe0 e503 	umlal	lr, r5, r0, r3
 8006a1a:	f04f 0600 	mov.w	r6, #0
 8006a1e:	fbe1 5603 	umlal	r5, r6, r1, r3
 8006a22:	f09c 0f00 	teq	r12, #0
 8006a26:	bf18      	it	ne
 8006a28:	f04e 0e01 	orrne.w	lr, lr, #1
 8006a2c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8006a30:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8006a34:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8006a38:	d204      	bcs.n	8006a44 <__aeabi_dmul+0x80>
 8006a3a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8006a3e:	416d      	adcs	r5, r5
 8006a40:	eb46 0606 	adc.w	r6, r6, r6
 8006a44:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8006a48:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8006a4c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8006a50:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8006a54:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8006a58:	f1b4 0cfd 	subs.w	r12, r4, #253	; 0xfd
 8006a5c:	bf88      	it	hi
 8006a5e:	f5bc 6fe0 	cmphi.w	r12, #1792	; 0x700
 8006a62:	d81e      	bhi.n	8006aa2 <__aeabi_dmul+0xde>
 8006a64:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8006a68:	bf08      	it	eq
 8006a6a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8006a6e:	f150 0000 	adcs.w	r0, r0, #0
 8006a72:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8006a76:	bd70      	pop	{r4, r5, r6, pc}
 8006a78:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8006a7c:	ea46 0101 	orr.w	r1, r6, r1
 8006a80:	ea40 0002 	orr.w	r0, r0, r2
 8006a84:	ea81 0103 	eor.w	r1, r1, r3
 8006a88:	ebb4 045c 	subs.w	r4, r4, r12, lsr #1
 8006a8c:	bfc2      	ittt	gt
 8006a8e:	ebd4 050c 	rsbsgt	r5, r4, r12
 8006a92:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8006a96:	bd70      	popgt	{r4, r5, r6, pc}
 8006a98:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006a9c:	f04f 0e00 	mov.w	lr, #0
 8006aa0:	3c01      	subs	r4, #1
 8006aa2:	f300 80ab 	bgt.w	8006bfc <__aeabi_dmul+0x238>
 8006aa6:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8006aaa:	bfde      	ittt	le
 8006aac:	2000      	movle	r0, #0
 8006aae:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8006ab2:	bd70      	pople	{r4, r5, r6, pc}
 8006ab4:	f1c4 0400 	rsb	r4, r4, #0
 8006ab8:	3c20      	subs	r4, #32
 8006aba:	da35      	bge.n	8006b28 <__aeabi_dmul+0x164>
 8006abc:	340c      	adds	r4, #12
 8006abe:	dc1b      	bgt.n	8006af8 <__aeabi_dmul+0x134>
 8006ac0:	f104 0414 	add.w	r4, r4, #20
 8006ac4:	f1c4 0520 	rsb	r5, r4, #32
 8006ac8:	fa00 f305 	lsl.w	r3, r0, r5
 8006acc:	fa20 f004 	lsr.w	r0, r0, r4
 8006ad0:	fa01 f205 	lsl.w	r2, r1, r5
 8006ad4:	ea40 0002 	orr.w	r0, r0, r2
 8006ad8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8006adc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8006ae0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8006ae4:	fa21 f604 	lsr.w	r6, r1, r4
 8006ae8:	eb42 0106 	adc.w	r1, r2, r6
 8006aec:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8006af0:	bf08      	it	eq
 8006af2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8006af6:	bd70      	pop	{r4, r5, r6, pc}
 8006af8:	f1c4 040c 	rsb	r4, r4, #12
 8006afc:	f1c4 0520 	rsb	r5, r4, #32
 8006b00:	fa00 f304 	lsl.w	r3, r0, r4
 8006b04:	fa20 f005 	lsr.w	r0, r0, r5
 8006b08:	fa01 f204 	lsl.w	r2, r1, r4
 8006b0c:	ea40 0002 	orr.w	r0, r0, r2
 8006b10:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006b14:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8006b18:	f141 0100 	adc.w	r1, r1, #0
 8006b1c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8006b20:	bf08      	it	eq
 8006b22:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8006b26:	bd70      	pop	{r4, r5, r6, pc}
 8006b28:	f1c4 0520 	rsb	r5, r4, #32
 8006b2c:	fa00 f205 	lsl.w	r2, r0, r5
 8006b30:	ea4e 0e02 	orr.w	lr, lr, r2
 8006b34:	fa20 f304 	lsr.w	r3, r0, r4
 8006b38:	fa01 f205 	lsl.w	r2, r1, r5
 8006b3c:	ea43 0302 	orr.w	r3, r3, r2
 8006b40:	fa21 f004 	lsr.w	r0, r1, r4
 8006b44:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006b48:	fa21 f204 	lsr.w	r2, r1, r4
 8006b4c:	ea20 0002 	bic.w	r0, r0, r2
 8006b50:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8006b54:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8006b58:	bf08      	it	eq
 8006b5a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8006b5e:	bd70      	pop	{r4, r5, r6, pc}
 8006b60:	f094 0f00 	teq	r4, #0
 8006b64:	d10f      	bne.n	8006b86 <__aeabi_dmul+0x1c2>
 8006b66:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8006b6a:	0040      	lsls	r0, r0, #1
 8006b6c:	eb41 0101 	adc.w	r1, r1, r1
 8006b70:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006b74:	bf08      	it	eq
 8006b76:	3c01      	subeq	r4, #1
 8006b78:	d0f7      	beq.n	8006b6a <__aeabi_dmul+0x1a6>
 8006b7a:	ea41 0106 	orr.w	r1, r1, r6
 8006b7e:	f095 0f00 	teq	r5, #0
 8006b82:	bf18      	it	ne
 8006b84:	4770      	bxne	lr
 8006b86:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8006b8a:	0052      	lsls	r2, r2, #1
 8006b8c:	eb43 0303 	adc.w	r3, r3, r3
 8006b90:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8006b94:	bf08      	it	eq
 8006b96:	3d01      	subeq	r5, #1
 8006b98:	d0f7      	beq.n	8006b8a <__aeabi_dmul+0x1c6>
 8006b9a:	ea43 0306 	orr.w	r3, r3, r6
 8006b9e:	4770      	bx	lr
 8006ba0:	ea94 0f0c 	teq	r4, r12
 8006ba4:	ea0c 5513 	and.w	r5, r12, r3, lsr #20
 8006ba8:	bf18      	it	ne
 8006baa:	ea95 0f0c 	teqne	r5, r12
 8006bae:	d00c      	beq.n	8006bca <__aeabi_dmul+0x206>
 8006bb0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8006bb4:	bf18      	it	ne
 8006bb6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8006bba:	d1d1      	bne.n	8006b60 <__aeabi_dmul+0x19c>
 8006bbc:	ea81 0103 	eor.w	r1, r1, r3
 8006bc0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006bc4:	f04f 0000 	mov.w	r0, #0
 8006bc8:	bd70      	pop	{r4, r5, r6, pc}
 8006bca:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8006bce:	bf06      	itte	eq
 8006bd0:	4610      	moveq	r0, r2
 8006bd2:	4619      	moveq	r1, r3
 8006bd4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8006bd8:	d019      	beq.n	8006c0e <__aeabi_dmul+0x24a>
 8006bda:	ea94 0f0c 	teq	r4, r12
 8006bde:	d102      	bne.n	8006be6 <__aeabi_dmul+0x222>
 8006be0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8006be4:	d113      	bne.n	8006c0e <__aeabi_dmul+0x24a>
 8006be6:	ea95 0f0c 	teq	r5, r12
 8006bea:	d105      	bne.n	8006bf8 <__aeabi_dmul+0x234>
 8006bec:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8006bf0:	bf1c      	itt	ne
 8006bf2:	4610      	movne	r0, r2
 8006bf4:	4619      	movne	r1, r3
 8006bf6:	d10a      	bne.n	8006c0e <__aeabi_dmul+0x24a>
 8006bf8:	ea81 0103 	eor.w	r1, r1, r3
 8006bfc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006c00:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8006c04:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006c08:	f04f 0000 	mov.w	r0, #0
 8006c0c:	bd70      	pop	{r4, r5, r6, pc}
 8006c0e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8006c12:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8006c16:	bd70      	pop	{r4, r5, r6, pc}

08006c18 <__aeabi_ddiv>:
 8006c18:	b570      	push	{r4, r5, r6, lr}
 8006c1a:	f04f 0cff 	mov.w	r12, #255	; 0xff
 8006c1e:	f44c 6ce0 	orr.w	r12, r12, #1792	; 0x700
 8006c22:	ea1c 5411 	ands.w	r4, r12, r1, lsr #20
 8006c26:	bf1d      	ittte	ne
 8006c28:	ea1c 5513 	andsne.w	r5, r12, r3, lsr #20
 8006c2c:	ea94 0f0c 	teqne	r4, r12
 8006c30:	ea95 0f0c 	teqne	r5, r12
 8006c34:	f000 f8a7 	bleq	8006d86 <__aeabi_ddiv+0x16e>
 8006c38:	eba4 0405 	sub.w	r4, r4, r5
 8006c3c:	ea81 0e03 	eor.w	lr, r1, r3
 8006c40:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8006c44:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8006c48:	f000 8088 	beq.w	8006d5c <__aeabi_ddiv+0x144>
 8006c4c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8006c50:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8006c54:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8006c58:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8006c5c:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8006c60:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8006c64:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8006c68:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8006c6c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8006c70:	429d      	cmp	r5, r3
 8006c72:	bf08      	it	eq
 8006c74:	4296      	cmpeq	r6, r2
 8006c76:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8006c7a:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8006c7e:	d202      	bcs.n	8006c86 <__aeabi_ddiv+0x6e>
 8006c80:	085b      	lsrs	r3, r3, #1
 8006c82:	ea4f 0232 	mov.w	r2, r2, rrx
 8006c86:	1ab6      	subs	r6, r6, r2
 8006c88:	eb65 0503 	sbc.w	r5, r5, r3
 8006c8c:	085b      	lsrs	r3, r3, #1
 8006c8e:	ea4f 0232 	mov.w	r2, r2, rrx
 8006c92:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8006c96:	f44f 2c00 	mov.w	r12, #524288	; 0x80000
 8006c9a:	ebb6 0e02 	subs.w	lr, r6, r2
 8006c9e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006ca2:	bf22      	ittt	cs
 8006ca4:	1ab6      	subcs	r6, r6, r2
 8006ca6:	4675      	movcs	r5, lr
 8006ca8:	ea40 000c 	orrcs.w	r0, r0, r12
 8006cac:	085b      	lsrs	r3, r3, #1
 8006cae:	ea4f 0232 	mov.w	r2, r2, rrx
 8006cb2:	ebb6 0e02 	subs.w	lr, r6, r2
 8006cb6:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006cba:	bf22      	ittt	cs
 8006cbc:	1ab6      	subcs	r6, r6, r2
 8006cbe:	4675      	movcs	r5, lr
 8006cc0:	ea40 005c 	orrcs.w	r0, r0, r12, lsr #1
 8006cc4:	085b      	lsrs	r3, r3, #1
 8006cc6:	ea4f 0232 	mov.w	r2, r2, rrx
 8006cca:	ebb6 0e02 	subs.w	lr, r6, r2
 8006cce:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006cd2:	bf22      	ittt	cs
 8006cd4:	1ab6      	subcs	r6, r6, r2
 8006cd6:	4675      	movcs	r5, lr
 8006cd8:	ea40 009c 	orrcs.w	r0, r0, r12, lsr #2
 8006cdc:	085b      	lsrs	r3, r3, #1
 8006cde:	ea4f 0232 	mov.w	r2, r2, rrx
 8006ce2:	ebb6 0e02 	subs.w	lr, r6, r2
 8006ce6:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006cea:	bf22      	ittt	cs
 8006cec:	1ab6      	subcs	r6, r6, r2
 8006cee:	4675      	movcs	r5, lr
 8006cf0:	ea40 00dc 	orrcs.w	r0, r0, r12, lsr #3
 8006cf4:	ea55 0e06 	orrs.w	lr, r5, r6
 8006cf8:	d018      	beq.n	8006d2c <__aeabi_ddiv+0x114>
 8006cfa:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8006cfe:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8006d02:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8006d06:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8006d0a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8006d0e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8006d12:	ea5f 1c1c 	movs.w	r12, r12, lsr #4
 8006d16:	d1c0      	bne.n	8006c9a <__aeabi_ddiv+0x82>
 8006d18:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006d1c:	d10b      	bne.n	8006d36 <__aeabi_ddiv+0x11e>
 8006d1e:	ea41 0100 	orr.w	r1, r1, r0
 8006d22:	f04f 0000 	mov.w	r0, #0
 8006d26:	f04f 4c00 	mov.w	r12, #2147483648	; 0x80000000
 8006d2a:	e7b6      	b.n	8006c9a <__aeabi_ddiv+0x82>
 8006d2c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006d30:	bf04      	itt	eq
 8006d32:	4301      	orreq	r1, r0
 8006d34:	2000      	moveq	r0, #0
 8006d36:	f1b4 0cfd 	subs.w	r12, r4, #253	; 0xfd
 8006d3a:	bf88      	it	hi
 8006d3c:	f5bc 6fe0 	cmphi.w	r12, #1792	; 0x700
 8006d40:	f63f aeaf 	bhi.w	8006aa2 <__aeabi_dmul+0xde>
 8006d44:	ebb5 0c03 	subs.w	r12, r5, r3
 8006d48:	bf04      	itt	eq
 8006d4a:	ebb6 0c02 	subseq.w	r12, r6, r2
 8006d4e:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 8006d52:	f150 0000 	adcs.w	r0, r0, #0
 8006d56:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8006d5a:	bd70      	pop	{r4, r5, r6, pc}
 8006d5c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8006d60:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8006d64:	eb14 045c 	adds.w	r4, r4, r12, lsr #1
 8006d68:	bfc2      	ittt	gt
 8006d6a:	ebd4 050c 	rsbsgt	r5, r4, r12
 8006d6e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8006d72:	bd70      	popgt	{r4, r5, r6, pc}
 8006d74:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006d78:	f04f 0e00 	mov.w	lr, #0
 8006d7c:	3c01      	subs	r4, #1
 8006d7e:	e690      	b.n	8006aa2 <__aeabi_dmul+0xde>
 8006d80:	ea45 0e06 	orr.w	lr, r5, r6
 8006d84:	e68d      	b.n	8006aa2 <__aeabi_dmul+0xde>
 8006d86:	ea0c 5513 	and.w	r5, r12, r3, lsr #20
 8006d8a:	ea94 0f0c 	teq	r4, r12
 8006d8e:	bf08      	it	eq
 8006d90:	ea95 0f0c 	teqeq	r5, r12
 8006d94:	f43f af3b 	beq.w	8006c0e <__aeabi_dmul+0x24a>
 8006d98:	ea94 0f0c 	teq	r4, r12
 8006d9c:	d10a      	bne.n	8006db4 <__aeabi_ddiv+0x19c>
 8006d9e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8006da2:	f47f af34 	bne.w	8006c0e <__aeabi_dmul+0x24a>
 8006da6:	ea95 0f0c 	teq	r5, r12
 8006daa:	f47f af25 	bne.w	8006bf8 <__aeabi_dmul+0x234>
 8006dae:	4610      	mov	r0, r2
 8006db0:	4619      	mov	r1, r3
 8006db2:	e72c      	b.n	8006c0e <__aeabi_dmul+0x24a>
 8006db4:	ea95 0f0c 	teq	r5, r12
 8006db8:	d106      	bne.n	8006dc8 <__aeabi_ddiv+0x1b0>
 8006dba:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8006dbe:	f43f aefd 	beq.w	8006bbc <__aeabi_dmul+0x1f8>
 8006dc2:	4610      	mov	r0, r2
 8006dc4:	4619      	mov	r1, r3
 8006dc6:	e722      	b.n	8006c0e <__aeabi_dmul+0x24a>
 8006dc8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8006dcc:	bf18      	it	ne
 8006dce:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8006dd2:	f47f aec5 	bne.w	8006b60 <__aeabi_dmul+0x19c>
 8006dd6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8006dda:	f47f af0d 	bne.w	8006bf8 <__aeabi_dmul+0x234>
 8006dde:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8006de2:	f47f aeeb 	bne.w	8006bbc <__aeabi_dmul+0x1f8>
 8006de6:	e712      	b.n	8006c0e <__aeabi_dmul+0x24a>

08006de8 <__gedf2>:
 8006de8:	f04f 3cff 	mov.w	r12, #4294967295	; 0xffffffff
 8006dec:	e006      	b.n	8006dfc <__cmpdf2+0x4>
 8006dee:	bf00      	nop

08006df0 <__ledf2>:
 8006df0:	f04f 0c01 	mov.w	r12, #1
 8006df4:	e002      	b.n	8006dfc <__cmpdf2+0x4>
 8006df6:	bf00      	nop

08006df8 <__cmpdf2>:
 8006df8:	f04f 0c01 	mov.w	r12, #1
 8006dfc:	f84d cd04 	str.w	r12, [sp, #-4]!
 8006e00:	ea4f 0c41 	mov.w	r12, r1, lsl #1
 8006e04:	ea7f 5c6c 	mvns.w	r12, r12, asr #21
 8006e08:	ea4f 0c43 	mov.w	r12, r3, lsl #1
 8006e0c:	bf18      	it	ne
 8006e0e:	ea7f 5c6c 	mvnsne.w	r12, r12, asr #21
 8006e12:	d01b      	beq.n	8006e4c <__cmpdf2+0x54>
 8006e14:	b001      	add	sp, #4
 8006e16:	ea50 0c41 	orrs.w	r12, r0, r1, lsl #1
 8006e1a:	bf0c      	ite	eq
 8006e1c:	ea52 0c43 	orrseq.w	r12, r2, r3, lsl #1
 8006e20:	ea91 0f03 	teqne	r1, r3
 8006e24:	bf02      	ittt	eq
 8006e26:	ea90 0f02 	teqeq	r0, r2
 8006e2a:	2000      	moveq	r0, #0
 8006e2c:	4770      	bxeq	lr
 8006e2e:	f110 0f00 	cmn.w	r0, #0
 8006e32:	ea91 0f03 	teq	r1, r3
 8006e36:	bf58      	it	pl
 8006e38:	4299      	cmppl	r1, r3
 8006e3a:	bf08      	it	eq
 8006e3c:	4290      	cmpeq	r0, r2
 8006e3e:	bf2c      	ite	cs
 8006e40:	17d8      	asrcs	r0, r3, #31
 8006e42:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8006e46:	f040 0001 	orr.w	r0, r0, #1
 8006e4a:	4770      	bx	lr
 8006e4c:	ea4f 0c41 	mov.w	r12, r1, lsl #1
 8006e50:	ea7f 5c6c 	mvns.w	r12, r12, asr #21
 8006e54:	d102      	bne.n	8006e5c <__cmpdf2+0x64>
 8006e56:	ea50 3c01 	orrs.w	r12, r0, r1, lsl #12
 8006e5a:	d107      	bne.n	8006e6c <__cmpdf2+0x74>
 8006e5c:	ea4f 0c43 	mov.w	r12, r3, lsl #1
 8006e60:	ea7f 5c6c 	mvns.w	r12, r12, asr #21
 8006e64:	d1d6      	bne.n	8006e14 <__cmpdf2+0x1c>
 8006e66:	ea52 3c03 	orrs.w	r12, r2, r3, lsl #12
 8006e6a:	d0d3      	beq.n	8006e14 <__cmpdf2+0x1c>
 8006e6c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8006e70:	4770      	bx	lr
 8006e72:	bf00      	nop

08006e74 <__aeabi_cdrcmple>:
 8006e74:	4684      	mov	r12, r0
 8006e76:	4610      	mov	r0, r2
 8006e78:	4662      	mov	r2, r12
 8006e7a:	468c      	mov	r12, r1
 8006e7c:	4619      	mov	r1, r3
 8006e7e:	4663      	mov	r3, r12
 8006e80:	e000      	b.n	8006e84 <__aeabi_cdcmpeq>
 8006e82:	bf00      	nop

08006e84 <__aeabi_cdcmpeq>:
 8006e84:	b501      	push	{r0, lr}
 8006e86:	f7ff ffb7 	bl	8006df8 <__cmpdf2>
 8006e8a:	2800      	cmp	r0, #0
 8006e8c:	bf48      	it	mi
 8006e8e:	f110 0f00 	cmnmi.w	r0, #0
 8006e92:	bd01      	pop	{r0, pc}

08006e94 <__aeabi_dcmpeq>:
 8006e94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8006e98:	f7ff fff4 	bl	8006e84 <__aeabi_cdcmpeq>
 8006e9c:	bf0c      	ite	eq
 8006e9e:	2001      	moveq	r0, #1
 8006ea0:	2000      	movne	r0, #0
 8006ea2:	f85d fb08 	ldr.w	pc, [sp], #8
 8006ea6:	bf00      	nop

08006ea8 <__aeabi_dcmplt>:
 8006ea8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8006eac:	f7ff ffea 	bl	8006e84 <__aeabi_cdcmpeq>
 8006eb0:	bf34      	ite	cc
 8006eb2:	2001      	movcc	r0, #1
 8006eb4:	2000      	movcs	r0, #0
 8006eb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8006eba:	bf00      	nop

08006ebc <__aeabi_dcmple>:
 8006ebc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8006ec0:	f7ff ffe0 	bl	8006e84 <__aeabi_cdcmpeq>
 8006ec4:	bf94      	ite	ls
 8006ec6:	2001      	movls	r0, #1
 8006ec8:	2000      	movhi	r0, #0
 8006eca:	f85d fb08 	ldr.w	pc, [sp], #8
 8006ece:	bf00      	nop

08006ed0 <__aeabi_dcmpge>:
 8006ed0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8006ed4:	f7ff ffce 	bl	8006e74 <__aeabi_cdrcmple>
 8006ed8:	bf94      	ite	ls
 8006eda:	2001      	movls	r0, #1
 8006edc:	2000      	movhi	r0, #0
 8006ede:	f85d fb08 	ldr.w	pc, [sp], #8
 8006ee2:	bf00      	nop

08006ee4 <__aeabi_dcmpgt>:
 8006ee4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8006ee8:	f7ff ffc4 	bl	8006e74 <__aeabi_cdrcmple>
 8006eec:	bf34      	ite	cc
 8006eee:	2001      	movcc	r0, #1
 8006ef0:	2000      	movcs	r0, #0
 8006ef2:	f85d fb08 	ldr.w	pc, [sp], #8
 8006ef6:	bf00      	nop

08006ef8 <__aeabi_d2uiz>:
 8006ef8:	004a      	lsls	r2, r1, #1
 8006efa:	d211      	bcs.n	8006f20 <__aeabi_d2uiz+0x28>
 8006efc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8006f00:	d211      	bcs.n	8006f26 <__aeabi_d2uiz+0x2e>
 8006f02:	d50d      	bpl.n	8006f20 <__aeabi_d2uiz+0x28>
 8006f04:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8006f08:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8006f0c:	d40e      	bmi.n	8006f2c <__aeabi_d2uiz+0x34>
 8006f0e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8006f12:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8006f16:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8006f1a:	fa23 f002 	lsr.w	r0, r3, r2
 8006f1e:	4770      	bx	lr
 8006f20:	f04f 0000 	mov.w	r0, #0
 8006f24:	4770      	bx	lr
 8006f26:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8006f2a:	d102      	bne.n	8006f32 <__aeabi_d2uiz+0x3a>
 8006f2c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006f30:	4770      	bx	lr
 8006f32:	f04f 0000 	mov.w	r0, #0
 8006f36:	4770      	bx	lr

08006f38 <__aeabi_d2f>:
 8006f38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8006f3c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8006f40:	bf24      	itt	cs
 8006f42:	f5b3 1c00 	subscs.w	r12, r3, #2097152	; 0x200000
 8006f46:	f1dc 5cfe 	rsbscs	r12, r12, #532676608	; 0x1fc00000
 8006f4a:	d90d      	bls.n	8006f68 <__aeabi_d2f+0x30>
 8006f4c:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
 8006f50:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8006f54:	ea4c 7050 	orr.w	r0, r12, r0, lsr #29
 8006f58:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8006f5c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8006f60:	bf08      	it	eq
 8006f62:	f020 0001 	biceq.w	r0, r0, #1
 8006f66:	4770      	bx	lr
 8006f68:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8006f6c:	d121      	bne.n	8006fb2 <__aeabi_d2f+0x7a>
 8006f6e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8006f72:	bfbc      	itt	lt
 8006f74:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8006f78:	4770      	bxlt	lr
 8006f7a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006f7e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8006f82:	f1c2 0218 	rsb	r2, r2, #24
 8006f86:	f1c2 0c20 	rsb	r12, r2, #32
 8006f8a:	fa10 f30c 	lsls.w	r3, r0, r12
 8006f8e:	fa20 f002 	lsr.w	r0, r0, r2
 8006f92:	bf18      	it	ne
 8006f94:	f040 0001 	orrne.w	r0, r0, #1
 8006f98:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8006f9c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8006fa0:	fa03 fc0c 	lsl.w	r12, r3, r12
 8006fa4:	ea40 000c 	orr.w	r0, r0, r12
 8006fa8:	fa23 f302 	lsr.w	r3, r3, r2
 8006fac:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8006fb0:	e7cc      	b.n	8006f4c <__aeabi_d2f+0x14>
 8006fb2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8006fb6:	d107      	bne.n	8006fc8 <__aeabi_d2f+0x90>
 8006fb8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8006fbc:	bf1e      	ittt	ne
 8006fbe:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8006fc2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8006fc6:	4770      	bxne	lr
 8006fc8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8006fcc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8006fd0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8006fd4:	4770      	bx	lr
 8006fd6:	bf00      	nop

08006fd8 <__aeabi_uldivmod>:
 8006fd8:	b953      	cbnz	r3, 8006ff0 <__aeabi_uldivmod+0x18>
 8006fda:	b94a      	cbnz	r2, 8006ff0 <__aeabi_uldivmod+0x18>
 8006fdc:	2900      	cmp	r1, #0
 8006fde:	bf08      	it	eq
 8006fe0:	2800      	cmpeq	r0, #0
 8006fe2:	bf1c      	itt	ne
 8006fe4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8006fe8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8006fec:	f000 b97a 	b.w	80072e4 <__aeabi_idiv0>
 8006ff0:	f1ad 0c08 	sub.w	r12, sp, #8
 8006ff4:	e96d ce04 	strd	r12, lr, [sp, #-16]!
 8006ff8:	f000 f806 	bl	8007008 <__udivmoddi4>
 8006ffc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007000:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007004:	b004      	add	sp, #16
 8007006:	4770      	bx	lr

08007008 <__udivmoddi4>:
 8007008:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 800700c:	468c      	mov	r12, r1
 800700e:	460d      	mov	r5, r1
 8007010:	4604      	mov	r4, r0
 8007012:	9e08      	ldr	r6, [sp, #32]
 8007014:	2b00      	cmp	r3, #0
 8007016:	d151      	bne.n	80070bc <__udivmoddi4+0xb4>
 8007018:	428a      	cmp	r2, r1
 800701a:	4617      	mov	r7, r2
 800701c:	d96d      	bls.n	80070fa <__udivmoddi4+0xf2>
 800701e:	fab2 fe82 	clz	lr, r2
 8007022:	f1be 0f00 	cmp.w	lr, #0
 8007026:	d00b      	beq.n	8007040 <__udivmoddi4+0x38>
 8007028:	f1ce 0c20 	rsb	r12, lr, #32
 800702c:	fa01 f50e 	lsl.w	r5, r1, lr
 8007030:	fa20 fc0c 	lsr.w	r12, r0, r12
 8007034:	fa02 f70e 	lsl.w	r7, r2, lr
 8007038:	ea4c 0c05 	orr.w	r12, r12, r5
 800703c:	fa00 f40e 	lsl.w	r4, r0, lr
 8007040:	ea4f 4a17 	mov.w	r10, r7, lsr #16
 8007044:	0c25      	lsrs	r5, r4, #16
 8007046:	fbbc f8fa 	udiv	r8, r12, r10
 800704a:	fa1f f987 	uxth.w	r9, r7
 800704e:	fb0a cc18 	mls	r12, r10, r8, r12
 8007052:	ea45 450c 	orr.w	r5, r5, r12, lsl #16
 8007056:	fb08 f309 	mul.w	r3, r8, r9
 800705a:	42ab      	cmp	r3, r5
 800705c:	d90a      	bls.n	8007074 <__udivmoddi4+0x6c>
 800705e:	19ed      	adds	r5, r5, r7
 8007060:	f108 32ff 	add.w	r2, r8, #4294967295	; 0xffffffff
 8007064:	f080 8123 	bcs.w	80072ae <__udivmoddi4+0x2a6>
 8007068:	42ab      	cmp	r3, r5
 800706a:	f240 8120 	bls.w	80072ae <__udivmoddi4+0x2a6>
 800706e:	f1a8 0802 	sub.w	r8, r8, #2
 8007072:	443d      	add	r5, r7
 8007074:	1aed      	subs	r5, r5, r3
 8007076:	b2a4      	uxth	r4, r4
 8007078:	fbb5 f0fa 	udiv	r0, r5, r10
 800707c:	fb0a 5510 	mls	r5, r10, r0, r5
 8007080:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8007084:	fb00 f909 	mul.w	r9, r0, r9
 8007088:	45a1      	cmp	r9, r4
 800708a:	d909      	bls.n	80070a0 <__udivmoddi4+0x98>
 800708c:	19e4      	adds	r4, r4, r7
 800708e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007092:	f080 810a 	bcs.w	80072aa <__udivmoddi4+0x2a2>
 8007096:	45a1      	cmp	r9, r4
 8007098:	f240 8107 	bls.w	80072aa <__udivmoddi4+0x2a2>
 800709c:	3802      	subs	r0, #2
 800709e:	443c      	add	r4, r7
 80070a0:	eba4 0409 	sub.w	r4, r4, r9
 80070a4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80070a8:	2100      	movs	r1, #0
 80070aa:	2e00      	cmp	r6, #0
 80070ac:	d061      	beq.n	8007172 <__udivmoddi4+0x16a>
 80070ae:	fa24 f40e 	lsr.w	r4, r4, lr
 80070b2:	2300      	movs	r3, #0
 80070b4:	6034      	str	r4, [r6, #0]
 80070b6:	6073      	str	r3, [r6, #4]
 80070b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80070bc:	428b      	cmp	r3, r1
 80070be:	d907      	bls.n	80070d0 <__udivmoddi4+0xc8>
 80070c0:	2e00      	cmp	r6, #0
 80070c2:	d054      	beq.n	800716e <__udivmoddi4+0x166>
 80070c4:	2100      	movs	r1, #0
 80070c6:	e886 0021 	stmia.w	r6, {r0, r5}
 80070ca:	4608      	mov	r0, r1
 80070cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80070d0:	fab3 f183 	clz	r1, r3
 80070d4:	2900      	cmp	r1, #0
 80070d6:	f040 808e 	bne.w	80071f6 <__udivmoddi4+0x1ee>
 80070da:	42ab      	cmp	r3, r5
 80070dc:	d302      	bcc.n	80070e4 <__udivmoddi4+0xdc>
 80070de:	4282      	cmp	r2, r0
 80070e0:	f200 80fa 	bhi.w	80072d8 <__udivmoddi4+0x2d0>
 80070e4:	1a84      	subs	r4, r0, r2
 80070e6:	eb65 0503 	sbc.w	r5, r5, r3
 80070ea:	2001      	movs	r0, #1
 80070ec:	46ac      	mov	r12, r5
 80070ee:	2e00      	cmp	r6, #0
 80070f0:	d03f      	beq.n	8007172 <__udivmoddi4+0x16a>
 80070f2:	e886 1010 	stmia.w	r6, {r4, r12}
 80070f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80070fa:	b912      	cbnz	r2, 8007102 <__udivmoddi4+0xfa>
 80070fc:	2701      	movs	r7, #1
 80070fe:	fbb7 f7f2 	udiv	r7, r7, r2
 8007102:	fab7 fe87 	clz	lr, r7
 8007106:	f1be 0f00 	cmp.w	lr, #0
 800710a:	d134      	bne.n	8007176 <__udivmoddi4+0x16e>
 800710c:	1beb      	subs	r3, r5, r7
 800710e:	0c3a      	lsrs	r2, r7, #16
 8007110:	fa1f fc87 	uxth.w	r12, r7
 8007114:	2101      	movs	r1, #1
 8007116:	fbb3 f8f2 	udiv	r8, r3, r2
 800711a:	0c25      	lsrs	r5, r4, #16
 800711c:	fb02 3318 	mls	r3, r2, r8, r3
 8007120:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8007124:	fb0c f308 	mul.w	r3, r12, r8
 8007128:	42ab      	cmp	r3, r5
 800712a:	d907      	bls.n	800713c <__udivmoddi4+0x134>
 800712c:	19ed      	adds	r5, r5, r7
 800712e:	f108 30ff 	add.w	r0, r8, #4294967295	; 0xffffffff
 8007132:	d202      	bcs.n	800713a <__udivmoddi4+0x132>
 8007134:	42ab      	cmp	r3, r5
 8007136:	f200 80d1 	bhi.w	80072dc <__udivmoddi4+0x2d4>
 800713a:	4680      	mov	r8, r0
 800713c:	1aed      	subs	r5, r5, r3
 800713e:	b2a3      	uxth	r3, r4
 8007140:	fbb5 f0f2 	udiv	r0, r5, r2
 8007144:	fb02 5510 	mls	r5, r2, r0, r5
 8007148:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 800714c:	fb0c fc00 	mul.w	r12, r12, r0
 8007150:	45a4      	cmp	r12, r4
 8007152:	d907      	bls.n	8007164 <__udivmoddi4+0x15c>
 8007154:	19e4      	adds	r4, r4, r7
 8007156:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 800715a:	d202      	bcs.n	8007162 <__udivmoddi4+0x15a>
 800715c:	45a4      	cmp	r12, r4
 800715e:	f200 80b8 	bhi.w	80072d2 <__udivmoddi4+0x2ca>
 8007162:	4618      	mov	r0, r3
 8007164:	eba4 040c 	sub.w	r4, r4, r12
 8007168:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800716c:	e79d      	b.n	80070aa <__udivmoddi4+0xa2>
 800716e:	4631      	mov	r1, r6
 8007170:	4630      	mov	r0, r6
 8007172:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8007176:	f1ce 0420 	rsb	r4, lr, #32
 800717a:	fa05 f30e 	lsl.w	r3, r5, lr
 800717e:	fa07 f70e 	lsl.w	r7, r7, lr
 8007182:	fa20 f804 	lsr.w	r8, r0, r4
 8007186:	0c3a      	lsrs	r2, r7, #16
 8007188:	fa25 f404 	lsr.w	r4, r5, r4
 800718c:	ea48 0803 	orr.w	r8, r8, r3
 8007190:	fbb4 f1f2 	udiv	r1, r4, r2
 8007194:	ea4f 4518 	mov.w	r5, r8, lsr #16
 8007198:	fb02 4411 	mls	r4, r2, r1, r4
 800719c:	fa1f fc87 	uxth.w	r12, r7
 80071a0:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
 80071a4:	fb01 f30c 	mul.w	r3, r1, r12
 80071a8:	42ab      	cmp	r3, r5
 80071aa:	fa00 f40e 	lsl.w	r4, r0, lr
 80071ae:	d909      	bls.n	80071c4 <__udivmoddi4+0x1bc>
 80071b0:	19ed      	adds	r5, r5, r7
 80071b2:	f101 30ff 	add.w	r0, r1, #4294967295	; 0xffffffff
 80071b6:	f080 808a 	bcs.w	80072ce <__udivmoddi4+0x2c6>
 80071ba:	42ab      	cmp	r3, r5
 80071bc:	f240 8087 	bls.w	80072ce <__udivmoddi4+0x2c6>
 80071c0:	3902      	subs	r1, #2
 80071c2:	443d      	add	r5, r7
 80071c4:	1aeb      	subs	r3, r5, r3
 80071c6:	fa1f f588 	uxth.w	r5, r8
 80071ca:	fbb3 f0f2 	udiv	r0, r3, r2
 80071ce:	fb02 3310 	mls	r3, r2, r0, r3
 80071d2:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 80071d6:	fb00 f30c 	mul.w	r3, r0, r12
 80071da:	42ab      	cmp	r3, r5
 80071dc:	d907      	bls.n	80071ee <__udivmoddi4+0x1e6>
 80071de:	19ed      	adds	r5, r5, r7
 80071e0:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 80071e4:	d26f      	bcs.n	80072c6 <__udivmoddi4+0x2be>
 80071e6:	42ab      	cmp	r3, r5
 80071e8:	d96d      	bls.n	80072c6 <__udivmoddi4+0x2be>
 80071ea:	3802      	subs	r0, #2
 80071ec:	443d      	add	r5, r7
 80071ee:	1aeb      	subs	r3, r5, r3
 80071f0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80071f4:	e78f      	b.n	8007116 <__udivmoddi4+0x10e>
 80071f6:	f1c1 0720 	rsb	r7, r1, #32
 80071fa:	fa22 f807 	lsr.w	r8, r2, r7
 80071fe:	408b      	lsls	r3, r1
 8007200:	fa05 f401 	lsl.w	r4, r5, r1
 8007204:	ea48 0303 	orr.w	r3, r8, r3
 8007208:	fa20 fe07 	lsr.w	lr, r0, r7
 800720c:	ea4f 4c13 	mov.w	r12, r3, lsr #16
 8007210:	40fd      	lsrs	r5, r7
 8007212:	ea4e 0e04 	orr.w	lr, lr, r4
 8007216:	fbb5 f9fc 	udiv	r9, r5, r12
 800721a:	ea4f 441e 	mov.w	r4, lr, lsr #16
 800721e:	fb0c 5519 	mls	r5, r12, r9, r5
 8007222:	fa1f f883 	uxth.w	r8, r3
 8007226:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 800722a:	fb09 f408 	mul.w	r4, r9, r8
 800722e:	42ac      	cmp	r4, r5
 8007230:	fa02 f201 	lsl.w	r2, r2, r1
 8007234:	fa00 fa01 	lsl.w	r10, r0, r1
 8007238:	d908      	bls.n	800724c <__udivmoddi4+0x244>
 800723a:	18ed      	adds	r5, r5, r3
 800723c:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8007240:	d243      	bcs.n	80072ca <__udivmoddi4+0x2c2>
 8007242:	42ac      	cmp	r4, r5
 8007244:	d941      	bls.n	80072ca <__udivmoddi4+0x2c2>
 8007246:	f1a9 0902 	sub.w	r9, r9, #2
 800724a:	441d      	add	r5, r3
 800724c:	1b2d      	subs	r5, r5, r4
 800724e:	fa1f fe8e 	uxth.w	lr, lr
 8007252:	fbb5 f0fc 	udiv	r0, r5, r12
 8007256:	fb0c 5510 	mls	r5, r12, r0, r5
 800725a:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
 800725e:	fb00 f808 	mul.w	r8, r0, r8
 8007262:	45a0      	cmp	r8, r4
 8007264:	d907      	bls.n	8007276 <__udivmoddi4+0x26e>
 8007266:	18e4      	adds	r4, r4, r3
 8007268:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 800726c:	d229      	bcs.n	80072c2 <__udivmoddi4+0x2ba>
 800726e:	45a0      	cmp	r8, r4
 8007270:	d927      	bls.n	80072c2 <__udivmoddi4+0x2ba>
 8007272:	3802      	subs	r0, #2
 8007274:	441c      	add	r4, r3
 8007276:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800727a:	eba4 0408 	sub.w	r4, r4, r8
 800727e:	fba0 8902 	umull	r8, r9, r0, r2
 8007282:	454c      	cmp	r4, r9
 8007284:	46c6      	mov	lr, r8
 8007286:	464d      	mov	r5, r9
 8007288:	d315      	bcc.n	80072b6 <__udivmoddi4+0x2ae>
 800728a:	d012      	beq.n	80072b2 <__udivmoddi4+0x2aa>
 800728c:	b156      	cbz	r6, 80072a4 <__udivmoddi4+0x29c>
 800728e:	ebba 030e 	subs.w	r3, r10, lr
 8007292:	eb64 0405 	sbc.w	r4, r4, r5
 8007296:	fa04 f707 	lsl.w	r7, r4, r7
 800729a:	40cb      	lsrs	r3, r1
 800729c:	431f      	orrs	r7, r3
 800729e:	40cc      	lsrs	r4, r1
 80072a0:	6037      	str	r7, [r6, #0]
 80072a2:	6074      	str	r4, [r6, #4]
 80072a4:	2100      	movs	r1, #0
 80072a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80072aa:	4618      	mov	r0, r3
 80072ac:	e6f8      	b.n	80070a0 <__udivmoddi4+0x98>
 80072ae:	4690      	mov	r8, r2
 80072b0:	e6e0      	b.n	8007074 <__udivmoddi4+0x6c>
 80072b2:	45c2      	cmp	r10, r8
 80072b4:	d2ea      	bcs.n	800728c <__udivmoddi4+0x284>
 80072b6:	ebb8 0e02 	subs.w	lr, r8, r2
 80072ba:	eb69 0503 	sbc.w	r5, r9, r3
 80072be:	3801      	subs	r0, #1
 80072c0:	e7e4      	b.n	800728c <__udivmoddi4+0x284>
 80072c2:	4628      	mov	r0, r5
 80072c4:	e7d7      	b.n	8007276 <__udivmoddi4+0x26e>
 80072c6:	4640      	mov	r0, r8
 80072c8:	e791      	b.n	80071ee <__udivmoddi4+0x1e6>
 80072ca:	4681      	mov	r9, r0
 80072cc:	e7be      	b.n	800724c <__udivmoddi4+0x244>
 80072ce:	4601      	mov	r1, r0
 80072d0:	e778      	b.n	80071c4 <__udivmoddi4+0x1bc>
 80072d2:	3802      	subs	r0, #2
 80072d4:	443c      	add	r4, r7
 80072d6:	e745      	b.n	8007164 <__udivmoddi4+0x15c>
 80072d8:	4608      	mov	r0, r1
 80072da:	e708      	b.n	80070ee <__udivmoddi4+0xe6>
 80072dc:	f1a8 0802 	sub.w	r8, r8, #2
 80072e0:	443d      	add	r5, r7
 80072e2:	e72b      	b.n	800713c <__udivmoddi4+0x134>

080072e4 <__aeabi_idiv0>:
 80072e4:	4770      	bx	lr
 80072e6:	bf00      	nop

080072e8 <__errno>:
 80072e8:	4b01      	ldr	r3, [pc, #4]	; (80072f0 <__errno+0x8>)
 80072ea:	6818      	ldr	r0, [r3, #0]
 80072ec:	4770      	bx	lr
 80072ee:	bf00      	nop
 80072f0:	20000028 	.word	0x20000028

080072f4 <__sflush_r>:
 80072f4:	898a      	ldrh	r2, [r1, #12]
 80072f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072fa:	4605      	mov	r5, r0
 80072fc:	0710      	lsls	r0, r2, #28
 80072fe:	460c      	mov	r4, r1
 8007300:	d45a      	bmi.n	80073b8 <__sflush_r+0xc4>
 8007302:	684b      	ldr	r3, [r1, #4]
 8007304:	2b00      	cmp	r3, #0
 8007306:	dc05      	bgt.n	8007314 <__sflush_r+0x20>
 8007308:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800730a:	2b00      	cmp	r3, #0
 800730c:	dc02      	bgt.n	8007314 <__sflush_r+0x20>
 800730e:	2000      	movs	r0, #0
 8007310:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007314:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007316:	2e00      	cmp	r6, #0
 8007318:	d0f9      	beq.n	800730e <__sflush_r+0x1a>
 800731a:	2300      	movs	r3, #0
 800731c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8007320:	682f      	ldr	r7, [r5, #0]
 8007322:	602b      	str	r3, [r5, #0]
 8007324:	d033      	beq.n	800738e <__sflush_r+0x9a>
 8007326:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8007328:	89a3      	ldrh	r3, [r4, #12]
 800732a:	075a      	lsls	r2, r3, #29
 800732c:	d505      	bpl.n	800733a <__sflush_r+0x46>
 800732e:	6863      	ldr	r3, [r4, #4]
 8007330:	1ac0      	subs	r0, r0, r3
 8007332:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007334:	b10b      	cbz	r3, 800733a <__sflush_r+0x46>
 8007336:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007338:	1ac0      	subs	r0, r0, r3
 800733a:	2300      	movs	r3, #0
 800733c:	4602      	mov	r2, r0
 800733e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007340:	6a21      	ldr	r1, [r4, #32]
 8007342:	4628      	mov	r0, r5
 8007344:	47b0      	blx	r6
 8007346:	1c43      	adds	r3, r0, #1
 8007348:	89a3      	ldrh	r3, [r4, #12]
 800734a:	d106      	bne.n	800735a <__sflush_r+0x66>
 800734c:	6829      	ldr	r1, [r5, #0]
 800734e:	291d      	cmp	r1, #29
 8007350:	d84b      	bhi.n	80073ea <__sflush_r+0xf6>
 8007352:	4a2b      	ldr	r2, [pc, #172]	; (8007400 <__sflush_r+0x10c>)
 8007354:	40ca      	lsrs	r2, r1
 8007356:	07d6      	lsls	r6, r2, #31
 8007358:	d547      	bpl.n	80073ea <__sflush_r+0xf6>
 800735a:	2200      	movs	r2, #0
 800735c:	6062      	str	r2, [r4, #4]
 800735e:	04d9      	lsls	r1, r3, #19
 8007360:	6922      	ldr	r2, [r4, #16]
 8007362:	6022      	str	r2, [r4, #0]
 8007364:	d504      	bpl.n	8007370 <__sflush_r+0x7c>
 8007366:	1c42      	adds	r2, r0, #1
 8007368:	d101      	bne.n	800736e <__sflush_r+0x7a>
 800736a:	682b      	ldr	r3, [r5, #0]
 800736c:	b903      	cbnz	r3, 8007370 <__sflush_r+0x7c>
 800736e:	6560      	str	r0, [r4, #84]	; 0x54
 8007370:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007372:	602f      	str	r7, [r5, #0]
 8007374:	2900      	cmp	r1, #0
 8007376:	d0ca      	beq.n	800730e <__sflush_r+0x1a>
 8007378:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800737c:	4299      	cmp	r1, r3
 800737e:	d002      	beq.n	8007386 <__sflush_r+0x92>
 8007380:	4628      	mov	r0, r5
 8007382:	f7fe fe27 	bl	8005fd4 <__wrap__free_r>
 8007386:	2000      	movs	r0, #0
 8007388:	6360      	str	r0, [r4, #52]	; 0x34
 800738a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800738e:	6a21      	ldr	r1, [r4, #32]
 8007390:	2301      	movs	r3, #1
 8007392:	4628      	mov	r0, r5
 8007394:	47b0      	blx	r6
 8007396:	1c41      	adds	r1, r0, #1
 8007398:	d1c6      	bne.n	8007328 <__sflush_r+0x34>
 800739a:	682b      	ldr	r3, [r5, #0]
 800739c:	2b00      	cmp	r3, #0
 800739e:	d0c3      	beq.n	8007328 <__sflush_r+0x34>
 80073a0:	2b1d      	cmp	r3, #29
 80073a2:	d001      	beq.n	80073a8 <__sflush_r+0xb4>
 80073a4:	2b16      	cmp	r3, #22
 80073a6:	d101      	bne.n	80073ac <__sflush_r+0xb8>
 80073a8:	602f      	str	r7, [r5, #0]
 80073aa:	e7b0      	b.n	800730e <__sflush_r+0x1a>
 80073ac:	89a3      	ldrh	r3, [r4, #12]
 80073ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80073b2:	81a3      	strh	r3, [r4, #12]
 80073b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80073b8:	690f      	ldr	r7, [r1, #16]
 80073ba:	2f00      	cmp	r7, #0
 80073bc:	d0a7      	beq.n	800730e <__sflush_r+0x1a>
 80073be:	0793      	lsls	r3, r2, #30
 80073c0:	680e      	ldr	r6, [r1, #0]
 80073c2:	bf08      	it	eq
 80073c4:	694b      	ldreq	r3, [r1, #20]
 80073c6:	600f      	str	r7, [r1, #0]
 80073c8:	bf18      	it	ne
 80073ca:	2300      	movne	r3, #0
 80073cc:	eba6 0807 	sub.w	r8, r6, r7
 80073d0:	608b      	str	r3, [r1, #8]
 80073d2:	f1b8 0f00 	cmp.w	r8, #0
 80073d6:	dd9a      	ble.n	800730e <__sflush_r+0x1a>
 80073d8:	4643      	mov	r3, r8
 80073da:	463a      	mov	r2, r7
 80073dc:	6a21      	ldr	r1, [r4, #32]
 80073de:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80073e0:	4628      	mov	r0, r5
 80073e2:	47b0      	blx	r6
 80073e4:	2800      	cmp	r0, #0
 80073e6:	dc07      	bgt.n	80073f8 <__sflush_r+0x104>
 80073e8:	89a3      	ldrh	r3, [r4, #12]
 80073ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80073ee:	81a3      	strh	r3, [r4, #12]
 80073f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80073f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80073f8:	4407      	add	r7, r0
 80073fa:	eba8 0800 	sub.w	r8, r8, r0
 80073fe:	e7e8      	b.n	80073d2 <__sflush_r+0xde>
 8007400:	20400001 	.word	0x20400001

08007404 <_fflush_r>:
 8007404:	b538      	push	{r3, r4, r5, lr}
 8007406:	690b      	ldr	r3, [r1, #16]
 8007408:	4605      	mov	r5, r0
 800740a:	460c      	mov	r4, r1
 800740c:	b1db      	cbz	r3, 8007446 <_fflush_r+0x42>
 800740e:	b118      	cbz	r0, 8007418 <_fflush_r+0x14>
 8007410:	6983      	ldr	r3, [r0, #24]
 8007412:	b90b      	cbnz	r3, 8007418 <_fflush_r+0x14>
 8007414:	f000 f872 	bl	80074fc <__sinit>
 8007418:	4b0c      	ldr	r3, [pc, #48]	; (800744c <_fflush_r+0x48>)
 800741a:	429c      	cmp	r4, r3
 800741c:	d109      	bne.n	8007432 <_fflush_r+0x2e>
 800741e:	686c      	ldr	r4, [r5, #4]
 8007420:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007424:	b17b      	cbz	r3, 8007446 <_fflush_r+0x42>
 8007426:	4621      	mov	r1, r4
 8007428:	4628      	mov	r0, r5
 800742a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800742e:	f7ff bf61 	b.w	80072f4 <__sflush_r>
 8007432:	4b07      	ldr	r3, [pc, #28]	; (8007450 <_fflush_r+0x4c>)
 8007434:	429c      	cmp	r4, r3
 8007436:	d101      	bne.n	800743c <_fflush_r+0x38>
 8007438:	68ac      	ldr	r4, [r5, #8]
 800743a:	e7f1      	b.n	8007420 <_fflush_r+0x1c>
 800743c:	4b05      	ldr	r3, [pc, #20]	; (8007454 <_fflush_r+0x50>)
 800743e:	429c      	cmp	r4, r3
 8007440:	bf08      	it	eq
 8007442:	68ec      	ldreq	r4, [r5, #12]
 8007444:	e7ec      	b.n	8007420 <_fflush_r+0x1c>
 8007446:	2000      	movs	r0, #0
 8007448:	bd38      	pop	{r3, r4, r5, pc}
 800744a:	bf00      	nop
 800744c:	080088a4 	.word	0x080088a4
 8007450:	080088c4 	.word	0x080088c4
 8007454:	08008884 	.word	0x08008884

08007458 <fflush>:
 8007458:	4601      	mov	r1, r0
 800745a:	b920      	cbnz	r0, 8007466 <fflush+0xe>
 800745c:	4b04      	ldr	r3, [pc, #16]	; (8007470 <fflush+0x18>)
 800745e:	4905      	ldr	r1, [pc, #20]	; (8007474 <fflush+0x1c>)
 8007460:	6818      	ldr	r0, [r3, #0]
 8007462:	f000 b8b7 	b.w	80075d4 <_fwalk_reent>
 8007466:	4b04      	ldr	r3, [pc, #16]	; (8007478 <fflush+0x20>)
 8007468:	6818      	ldr	r0, [r3, #0]
 800746a:	f7ff bfcb 	b.w	8007404 <_fflush_r>
 800746e:	bf00      	nop
 8007470:	080088e4 	.word	0x080088e4
 8007474:	08007405 	.word	0x08007405
 8007478:	20000028 	.word	0x20000028

0800747c <_cleanup_r>:
 800747c:	4901      	ldr	r1, [pc, #4]	; (8007484 <_cleanup_r+0x8>)
 800747e:	f000 b8a9 	b.w	80075d4 <_fwalk_reent>
 8007482:	bf00      	nop
 8007484:	08007405 	.word	0x08007405

08007488 <std.isra.0>:
 8007488:	2300      	movs	r3, #0
 800748a:	b510      	push	{r4, lr}
 800748c:	4604      	mov	r4, r0
 800748e:	6003      	str	r3, [r0, #0]
 8007490:	6043      	str	r3, [r0, #4]
 8007492:	6083      	str	r3, [r0, #8]
 8007494:	8181      	strh	r1, [r0, #12]
 8007496:	6643      	str	r3, [r0, #100]	; 0x64
 8007498:	81c2      	strh	r2, [r0, #14]
 800749a:	6103      	str	r3, [r0, #16]
 800749c:	6143      	str	r3, [r0, #20]
 800749e:	6183      	str	r3, [r0, #24]
 80074a0:	4619      	mov	r1, r3
 80074a2:	2208      	movs	r2, #8
 80074a4:	305c      	adds	r0, #92	; 0x5c
 80074a6:	f000 f960 	bl	800776a <memset>
 80074aa:	4b05      	ldr	r3, [pc, #20]	; (80074c0 <std.isra.0+0x38>)
 80074ac:	6263      	str	r3, [r4, #36]	; 0x24
 80074ae:	4b05      	ldr	r3, [pc, #20]	; (80074c4 <std.isra.0+0x3c>)
 80074b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80074b2:	4b05      	ldr	r3, [pc, #20]	; (80074c8 <std.isra.0+0x40>)
 80074b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80074b6:	4b05      	ldr	r3, [pc, #20]	; (80074cc <std.isra.0+0x44>)
 80074b8:	6224      	str	r4, [r4, #32]
 80074ba:	6323      	str	r3, [r4, #48]	; 0x30
 80074bc:	bd10      	pop	{r4, pc}
 80074be:	bf00      	nop
 80074c0:	08007c7d 	.word	0x08007c7d
 80074c4:	08007c9f 	.word	0x08007c9f
 80074c8:	08007cd7 	.word	0x08007cd7
 80074cc:	08007cfb 	.word	0x08007cfb

080074d0 <__sfmoreglue>:
 80074d0:	b570      	push	{r4, r5, r6, lr}
 80074d2:	1e4a      	subs	r2, r1, #1
 80074d4:	2568      	movs	r5, #104	; 0x68
 80074d6:	4355      	muls	r5, r2
 80074d8:	460e      	mov	r6, r1
 80074da:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80074de:	f7fe fd75 	bl	8005fcc <__wrap__malloc_r>
 80074e2:	4604      	mov	r4, r0
 80074e4:	b140      	cbz	r0, 80074f8 <__sfmoreglue+0x28>
 80074e6:	2100      	movs	r1, #0
 80074e8:	e880 0042 	stmia.w	r0, {r1, r6}
 80074ec:	300c      	adds	r0, #12
 80074ee:	60a0      	str	r0, [r4, #8]
 80074f0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80074f4:	f000 f939 	bl	800776a <memset>
 80074f8:	4620      	mov	r0, r4
 80074fa:	bd70      	pop	{r4, r5, r6, pc}

080074fc <__sinit>:
 80074fc:	6983      	ldr	r3, [r0, #24]
 80074fe:	b510      	push	{r4, lr}
 8007500:	4604      	mov	r4, r0
 8007502:	bb33      	cbnz	r3, 8007552 <__sinit+0x56>
 8007504:	6483      	str	r3, [r0, #72]	; 0x48
 8007506:	64c3      	str	r3, [r0, #76]	; 0x4c
 8007508:	6503      	str	r3, [r0, #80]	; 0x50
 800750a:	4b12      	ldr	r3, [pc, #72]	; (8007554 <__sinit+0x58>)
 800750c:	4a12      	ldr	r2, [pc, #72]	; (8007558 <__sinit+0x5c>)
 800750e:	681b      	ldr	r3, [r3, #0]
 8007510:	6282      	str	r2, [r0, #40]	; 0x28
 8007512:	4298      	cmp	r0, r3
 8007514:	bf04      	itt	eq
 8007516:	2301      	moveq	r3, #1
 8007518:	6183      	streq	r3, [r0, #24]
 800751a:	f000 f81f 	bl	800755c <__sfp>
 800751e:	6060      	str	r0, [r4, #4]
 8007520:	4620      	mov	r0, r4
 8007522:	f000 f81b 	bl	800755c <__sfp>
 8007526:	60a0      	str	r0, [r4, #8]
 8007528:	4620      	mov	r0, r4
 800752a:	f000 f817 	bl	800755c <__sfp>
 800752e:	2200      	movs	r2, #0
 8007530:	60e0      	str	r0, [r4, #12]
 8007532:	2104      	movs	r1, #4
 8007534:	6860      	ldr	r0, [r4, #4]
 8007536:	f7ff ffa7 	bl	8007488 <std.isra.0>
 800753a:	2201      	movs	r2, #1
 800753c:	2109      	movs	r1, #9
 800753e:	68a0      	ldr	r0, [r4, #8]
 8007540:	f7ff ffa2 	bl	8007488 <std.isra.0>
 8007544:	2202      	movs	r2, #2
 8007546:	2112      	movs	r1, #18
 8007548:	68e0      	ldr	r0, [r4, #12]
 800754a:	f7ff ff9d 	bl	8007488 <std.isra.0>
 800754e:	2301      	movs	r3, #1
 8007550:	61a3      	str	r3, [r4, #24]
 8007552:	bd10      	pop	{r4, pc}
 8007554:	080088e4 	.word	0x080088e4
 8007558:	0800747d 	.word	0x0800747d

0800755c <__sfp>:
 800755c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800755e:	4b1c      	ldr	r3, [pc, #112]	; (80075d0 <__sfp+0x74>)
 8007560:	681e      	ldr	r6, [r3, #0]
 8007562:	69b3      	ldr	r3, [r6, #24]
 8007564:	4607      	mov	r7, r0
 8007566:	b913      	cbnz	r3, 800756e <__sfp+0x12>
 8007568:	4630      	mov	r0, r6
 800756a:	f7ff ffc7 	bl	80074fc <__sinit>
 800756e:	3648      	adds	r6, #72	; 0x48
 8007570:	68b4      	ldr	r4, [r6, #8]
 8007572:	6873      	ldr	r3, [r6, #4]
 8007574:	3b01      	subs	r3, #1
 8007576:	d503      	bpl.n	8007580 <__sfp+0x24>
 8007578:	6833      	ldr	r3, [r6, #0]
 800757a:	b133      	cbz	r3, 800758a <__sfp+0x2e>
 800757c:	6836      	ldr	r6, [r6, #0]
 800757e:	e7f7      	b.n	8007570 <__sfp+0x14>
 8007580:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8007584:	b16d      	cbz	r5, 80075a2 <__sfp+0x46>
 8007586:	3468      	adds	r4, #104	; 0x68
 8007588:	e7f4      	b.n	8007574 <__sfp+0x18>
 800758a:	2104      	movs	r1, #4
 800758c:	4638      	mov	r0, r7
 800758e:	f7ff ff9f 	bl	80074d0 <__sfmoreglue>
 8007592:	6030      	str	r0, [r6, #0]
 8007594:	2800      	cmp	r0, #0
 8007596:	d1f1      	bne.n	800757c <__sfp+0x20>
 8007598:	230c      	movs	r3, #12
 800759a:	603b      	str	r3, [r7, #0]
 800759c:	4604      	mov	r4, r0
 800759e:	4620      	mov	r0, r4
 80075a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80075a2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80075a6:	81e3      	strh	r3, [r4, #14]
 80075a8:	2301      	movs	r3, #1
 80075aa:	81a3      	strh	r3, [r4, #12]
 80075ac:	6665      	str	r5, [r4, #100]	; 0x64
 80075ae:	6025      	str	r5, [r4, #0]
 80075b0:	60a5      	str	r5, [r4, #8]
 80075b2:	6065      	str	r5, [r4, #4]
 80075b4:	6125      	str	r5, [r4, #16]
 80075b6:	6165      	str	r5, [r4, #20]
 80075b8:	61a5      	str	r5, [r4, #24]
 80075ba:	2208      	movs	r2, #8
 80075bc:	4629      	mov	r1, r5
 80075be:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80075c2:	f000 f8d2 	bl	800776a <memset>
 80075c6:	6365      	str	r5, [r4, #52]	; 0x34
 80075c8:	63a5      	str	r5, [r4, #56]	; 0x38
 80075ca:	64a5      	str	r5, [r4, #72]	; 0x48
 80075cc:	64e5      	str	r5, [r4, #76]	; 0x4c
 80075ce:	e7e6      	b.n	800759e <__sfp+0x42>
 80075d0:	080088e4 	.word	0x080088e4

080075d4 <_fwalk_reent>:
 80075d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80075d8:	4680      	mov	r8, r0
 80075da:	4689      	mov	r9, r1
 80075dc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80075e0:	2600      	movs	r6, #0
 80075e2:	b914      	cbnz	r4, 80075ea <_fwalk_reent+0x16>
 80075e4:	4630      	mov	r0, r6
 80075e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80075ea:	68a5      	ldr	r5, [r4, #8]
 80075ec:	6867      	ldr	r7, [r4, #4]
 80075ee:	3f01      	subs	r7, #1
 80075f0:	d501      	bpl.n	80075f6 <_fwalk_reent+0x22>
 80075f2:	6824      	ldr	r4, [r4, #0]
 80075f4:	e7f5      	b.n	80075e2 <_fwalk_reent+0xe>
 80075f6:	89ab      	ldrh	r3, [r5, #12]
 80075f8:	2b01      	cmp	r3, #1
 80075fa:	d907      	bls.n	800760c <_fwalk_reent+0x38>
 80075fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007600:	3301      	adds	r3, #1
 8007602:	d003      	beq.n	800760c <_fwalk_reent+0x38>
 8007604:	4629      	mov	r1, r5
 8007606:	4640      	mov	r0, r8
 8007608:	47c8      	blx	r9
 800760a:	4306      	orrs	r6, r0
 800760c:	3568      	adds	r5, #104	; 0x68
 800760e:	e7ee      	b.n	80075ee <_fwalk_reent+0x1a>

08007610 <__libc_init_array>:
 8007610:	b570      	push	{r4, r5, r6, lr}
 8007612:	4e0d      	ldr	r6, [pc, #52]	; (8007648 <__libc_init_array+0x38>)
 8007614:	4c0d      	ldr	r4, [pc, #52]	; (800764c <__libc_init_array+0x3c>)
 8007616:	1ba4      	subs	r4, r4, r6
 8007618:	10a4      	asrs	r4, r4, #2
 800761a:	2500      	movs	r5, #0
 800761c:	42a5      	cmp	r5, r4
 800761e:	d109      	bne.n	8007634 <__libc_init_array+0x24>
 8007620:	4e0b      	ldr	r6, [pc, #44]	; (8007650 <__libc_init_array+0x40>)
 8007622:	4c0c      	ldr	r4, [pc, #48]	; (8007654 <__libc_init_array+0x44>)
 8007624:	f000 fd36 	bl	8008094 <_init>
 8007628:	1ba4      	subs	r4, r4, r6
 800762a:	10a4      	asrs	r4, r4, #2
 800762c:	2500      	movs	r5, #0
 800762e:	42a5      	cmp	r5, r4
 8007630:	d105      	bne.n	800763e <__libc_init_array+0x2e>
 8007632:	bd70      	pop	{r4, r5, r6, pc}
 8007634:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8007638:	4798      	blx	r3
 800763a:	3501      	adds	r5, #1
 800763c:	e7ee      	b.n	800761c <__libc_init_array+0xc>
 800763e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8007642:	4798      	blx	r3
 8007644:	3501      	adds	r5, #1
 8007646:	e7f2      	b.n	800762e <__libc_init_array+0x1e>
 8007648:	2000008c 	.word	0x2000008c
 800764c:	2000008c 	.word	0x2000008c
 8007650:	2000008c 	.word	0x2000008c
 8007654:	200000a0 	.word	0x200000a0

08007658 <malloc>:
 8007658:	4b02      	ldr	r3, [pc, #8]	; (8007664 <malloc+0xc>)
 800765a:	4601      	mov	r1, r0
 800765c:	6818      	ldr	r0, [r3, #0]
 800765e:	f7fe bcb5 	b.w	8005fcc <__wrap__malloc_r>
 8007662:	bf00      	nop
 8007664:	20000028 	.word	0x20000028

08007668 <free>:
 8007668:	4b02      	ldr	r3, [pc, #8]	; (8007674 <free+0xc>)
 800766a:	4601      	mov	r1, r0
 800766c:	6818      	ldr	r0, [r3, #0]
 800766e:	f7fe bcb1 	b.w	8005fd4 <__wrap__free_r>
 8007672:	bf00      	nop
 8007674:	20000028 	.word	0x20000028
	...

08007680 <memchr>:
 8007680:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8007684:	2a10      	cmp	r2, #16
 8007686:	db2b      	blt.n	80076e0 <memchr+0x60>
 8007688:	f010 0f07 	tst.w	r0, #7
 800768c:	d008      	beq.n	80076a0 <memchr+0x20>
 800768e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8007692:	3a01      	subs	r2, #1
 8007694:	428b      	cmp	r3, r1
 8007696:	d02d      	beq.n	80076f4 <memchr+0x74>
 8007698:	f010 0f07 	tst.w	r0, #7
 800769c:	b342      	cbz	r2, 80076f0 <memchr+0x70>
 800769e:	d1f6      	bne.n	800768e <memchr+0xe>
 80076a0:	b4f0      	push	{r4, r5, r6, r7}
 80076a2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80076a6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80076aa:	f022 0407 	bic.w	r4, r2, #7
 80076ae:	f07f 0700 	mvns.w	r7, #0
 80076b2:	2300      	movs	r3, #0
 80076b4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80076b8:	3c08      	subs	r4, #8
 80076ba:	ea85 0501 	eor.w	r5, r5, r1
 80076be:	ea86 0601 	eor.w	r6, r6, r1
 80076c2:	fa85 f547 	uadd8	r5, r5, r7
 80076c6:	faa3 f587 	sel	r5, r3, r7
 80076ca:	fa86 f647 	uadd8	r6, r6, r7
 80076ce:	faa5 f687 	sel	r6, r5, r7
 80076d2:	b98e      	cbnz	r6, 80076f8 <memchr+0x78>
 80076d4:	d1ee      	bne.n	80076b4 <memchr+0x34>
 80076d6:	bcf0      	pop	{r4, r5, r6, r7}
 80076d8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80076dc:	f002 0207 	and.w	r2, r2, #7
 80076e0:	b132      	cbz	r2, 80076f0 <memchr+0x70>
 80076e2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80076e6:	3a01      	subs	r2, #1
 80076e8:	ea83 0301 	eor.w	r3, r3, r1
 80076ec:	b113      	cbz	r3, 80076f4 <memchr+0x74>
 80076ee:	d1f8      	bne.n	80076e2 <memchr+0x62>
 80076f0:	2000      	movs	r0, #0
 80076f2:	4770      	bx	lr
 80076f4:	3801      	subs	r0, #1
 80076f6:	4770      	bx	lr
 80076f8:	2d00      	cmp	r5, #0
 80076fa:	bf06      	itte	eq
 80076fc:	4635      	moveq	r5, r6
 80076fe:	3803      	subeq	r0, #3
 8007700:	3807      	subne	r0, #7
 8007702:	f015 0f01 	tst.w	r5, #1
 8007706:	d107      	bne.n	8007718 <memchr+0x98>
 8007708:	3001      	adds	r0, #1
 800770a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800770e:	bf02      	ittt	eq
 8007710:	3001      	addeq	r0, #1
 8007712:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8007716:	3001      	addeq	r0, #1
 8007718:	bcf0      	pop	{r4, r5, r6, r7}
 800771a:	3801      	subs	r0, #1
 800771c:	4770      	bx	lr
 800771e:	bf00      	nop

08007720 <memcpy>:
 8007720:	b510      	push	{r4, lr}
 8007722:	1e43      	subs	r3, r0, #1
 8007724:	440a      	add	r2, r1
 8007726:	4291      	cmp	r1, r2
 8007728:	d100      	bne.n	800772c <memcpy+0xc>
 800772a:	bd10      	pop	{r4, pc}
 800772c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007730:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007734:	e7f7      	b.n	8007726 <memcpy+0x6>

08007736 <memmove>:
 8007736:	4288      	cmp	r0, r1
 8007738:	b510      	push	{r4, lr}
 800773a:	eb01 0302 	add.w	r3, r1, r2
 800773e:	d803      	bhi.n	8007748 <memmove+0x12>
 8007740:	1e42      	subs	r2, r0, #1
 8007742:	4299      	cmp	r1, r3
 8007744:	d10c      	bne.n	8007760 <memmove+0x2a>
 8007746:	bd10      	pop	{r4, pc}
 8007748:	4298      	cmp	r0, r3
 800774a:	d2f9      	bcs.n	8007740 <memmove+0xa>
 800774c:	1881      	adds	r1, r0, r2
 800774e:	1ad2      	subs	r2, r2, r3
 8007750:	42d3      	cmn	r3, r2
 8007752:	d100      	bne.n	8007756 <memmove+0x20>
 8007754:	bd10      	pop	{r4, pc}
 8007756:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800775a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800775e:	e7f7      	b.n	8007750 <memmove+0x1a>
 8007760:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007764:	f802 4f01 	strb.w	r4, [r2, #1]!
 8007768:	e7eb      	b.n	8007742 <memmove+0xc>

0800776a <memset>:
 800776a:	4402      	add	r2, r0
 800776c:	4603      	mov	r3, r0
 800776e:	4293      	cmp	r3, r2
 8007770:	d100      	bne.n	8007774 <memset+0xa>
 8007772:	4770      	bx	lr
 8007774:	f803 1b01 	strb.w	r1, [r3], #1
 8007778:	e7f9      	b.n	800776e <memset+0x4>
	...

0800777c <_free_r>:
 800777c:	b538      	push	{r3, r4, r5, lr}
 800777e:	4605      	mov	r5, r0
 8007780:	2900      	cmp	r1, #0
 8007782:	d045      	beq.n	8007810 <_free_r+0x94>
 8007784:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007788:	1f0c      	subs	r4, r1, #4
 800778a:	2b00      	cmp	r3, #0
 800778c:	bfb8      	it	lt
 800778e:	18e4      	addlt	r4, r4, r3
 8007790:	f7fe fd41 	bl	8006216 <__malloc_lock>
 8007794:	4a1f      	ldr	r2, [pc, #124]	; (8007814 <_free_r+0x98>)
 8007796:	6813      	ldr	r3, [r2, #0]
 8007798:	4610      	mov	r0, r2
 800779a:	b933      	cbnz	r3, 80077aa <_free_r+0x2e>
 800779c:	6063      	str	r3, [r4, #4]
 800779e:	6014      	str	r4, [r2, #0]
 80077a0:	4628      	mov	r0, r5
 80077a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80077a6:	f7fe bd3a 	b.w	800621e <__malloc_unlock>
 80077aa:	42a3      	cmp	r3, r4
 80077ac:	d90c      	bls.n	80077c8 <_free_r+0x4c>
 80077ae:	6821      	ldr	r1, [r4, #0]
 80077b0:	1862      	adds	r2, r4, r1
 80077b2:	4293      	cmp	r3, r2
 80077b4:	bf04      	itt	eq
 80077b6:	681a      	ldreq	r2, [r3, #0]
 80077b8:	685b      	ldreq	r3, [r3, #4]
 80077ba:	6063      	str	r3, [r4, #4]
 80077bc:	bf04      	itt	eq
 80077be:	1852      	addeq	r2, r2, r1
 80077c0:	6022      	streq	r2, [r4, #0]
 80077c2:	6004      	str	r4, [r0, #0]
 80077c4:	e7ec      	b.n	80077a0 <_free_r+0x24>
 80077c6:	4613      	mov	r3, r2
 80077c8:	685a      	ldr	r2, [r3, #4]
 80077ca:	b10a      	cbz	r2, 80077d0 <_free_r+0x54>
 80077cc:	42a2      	cmp	r2, r4
 80077ce:	d9fa      	bls.n	80077c6 <_free_r+0x4a>
 80077d0:	6819      	ldr	r1, [r3, #0]
 80077d2:	1858      	adds	r0, r3, r1
 80077d4:	42a0      	cmp	r0, r4
 80077d6:	d10b      	bne.n	80077f0 <_free_r+0x74>
 80077d8:	6820      	ldr	r0, [r4, #0]
 80077da:	4401      	add	r1, r0
 80077dc:	1858      	adds	r0, r3, r1
 80077de:	4282      	cmp	r2, r0
 80077e0:	6019      	str	r1, [r3, #0]
 80077e2:	d1dd      	bne.n	80077a0 <_free_r+0x24>
 80077e4:	6810      	ldr	r0, [r2, #0]
 80077e6:	6852      	ldr	r2, [r2, #4]
 80077e8:	605a      	str	r2, [r3, #4]
 80077ea:	4401      	add	r1, r0
 80077ec:	6019      	str	r1, [r3, #0]
 80077ee:	e7d7      	b.n	80077a0 <_free_r+0x24>
 80077f0:	d902      	bls.n	80077f8 <_free_r+0x7c>
 80077f2:	230c      	movs	r3, #12
 80077f4:	602b      	str	r3, [r5, #0]
 80077f6:	e7d3      	b.n	80077a0 <_free_r+0x24>
 80077f8:	6820      	ldr	r0, [r4, #0]
 80077fa:	1821      	adds	r1, r4, r0
 80077fc:	428a      	cmp	r2, r1
 80077fe:	bf04      	itt	eq
 8007800:	6811      	ldreq	r1, [r2, #0]
 8007802:	6852      	ldreq	r2, [r2, #4]
 8007804:	6062      	str	r2, [r4, #4]
 8007806:	bf04      	itt	eq
 8007808:	1809      	addeq	r1, r1, r0
 800780a:	6021      	streq	r1, [r4, #0]
 800780c:	605c      	str	r4, [r3, #4]
 800780e:	e7c7      	b.n	80077a0 <_free_r+0x24>
 8007810:	bd38      	pop	{r3, r4, r5, pc}
 8007812:	bf00      	nop
 8007814:	200025f4 	.word	0x200025f4

08007818 <_malloc_r>:
 8007818:	b570      	push	{r4, r5, r6, lr}
 800781a:	1ccd      	adds	r5, r1, #3
 800781c:	f025 0503 	bic.w	r5, r5, #3
 8007820:	3508      	adds	r5, #8
 8007822:	2d0c      	cmp	r5, #12
 8007824:	bf38      	it	cc
 8007826:	250c      	movcc	r5, #12
 8007828:	2d00      	cmp	r5, #0
 800782a:	4606      	mov	r6, r0
 800782c:	db01      	blt.n	8007832 <_malloc_r+0x1a>
 800782e:	42a9      	cmp	r1, r5
 8007830:	d903      	bls.n	800783a <_malloc_r+0x22>
 8007832:	230c      	movs	r3, #12
 8007834:	6033      	str	r3, [r6, #0]
 8007836:	2000      	movs	r0, #0
 8007838:	bd70      	pop	{r4, r5, r6, pc}
 800783a:	f7fe fcec 	bl	8006216 <__malloc_lock>
 800783e:	4a23      	ldr	r2, [pc, #140]	; (80078cc <_malloc_r+0xb4>)
 8007840:	6814      	ldr	r4, [r2, #0]
 8007842:	4621      	mov	r1, r4
 8007844:	b991      	cbnz	r1, 800786c <_malloc_r+0x54>
 8007846:	4c22      	ldr	r4, [pc, #136]	; (80078d0 <_malloc_r+0xb8>)
 8007848:	6823      	ldr	r3, [r4, #0]
 800784a:	b91b      	cbnz	r3, 8007854 <_malloc_r+0x3c>
 800784c:	4630      	mov	r0, r6
 800784e:	f000 fa05 	bl	8007c5c <_sbrk_r>
 8007852:	6020      	str	r0, [r4, #0]
 8007854:	4629      	mov	r1, r5
 8007856:	4630      	mov	r0, r6
 8007858:	f000 fa00 	bl	8007c5c <_sbrk_r>
 800785c:	1c43      	adds	r3, r0, #1
 800785e:	d126      	bne.n	80078ae <_malloc_r+0x96>
 8007860:	230c      	movs	r3, #12
 8007862:	6033      	str	r3, [r6, #0]
 8007864:	4630      	mov	r0, r6
 8007866:	f7fe fcda 	bl	800621e <__malloc_unlock>
 800786a:	e7e4      	b.n	8007836 <_malloc_r+0x1e>
 800786c:	680b      	ldr	r3, [r1, #0]
 800786e:	1b5b      	subs	r3, r3, r5
 8007870:	d41a      	bmi.n	80078a8 <_malloc_r+0x90>
 8007872:	2b0b      	cmp	r3, #11
 8007874:	d90f      	bls.n	8007896 <_malloc_r+0x7e>
 8007876:	600b      	str	r3, [r1, #0]
 8007878:	50cd      	str	r5, [r1, r3]
 800787a:	18cc      	adds	r4, r1, r3
 800787c:	4630      	mov	r0, r6
 800787e:	f7fe fcce 	bl	800621e <__malloc_unlock>
 8007882:	f104 000b 	add.w	r0, r4, #11
 8007886:	1d23      	adds	r3, r4, #4
 8007888:	f020 0007 	bic.w	r0, r0, #7
 800788c:	1ac3      	subs	r3, r0, r3
 800788e:	d01b      	beq.n	80078c8 <_malloc_r+0xb0>
 8007890:	425a      	negs	r2, r3
 8007892:	50e2      	str	r2, [r4, r3]
 8007894:	bd70      	pop	{r4, r5, r6, pc}
 8007896:	428c      	cmp	r4, r1
 8007898:	bf0d      	iteet	eq
 800789a:	6863      	ldreq	r3, [r4, #4]
 800789c:	684b      	ldrne	r3, [r1, #4]
 800789e:	6063      	strne	r3, [r4, #4]
 80078a0:	6013      	streq	r3, [r2, #0]
 80078a2:	bf18      	it	ne
 80078a4:	460c      	movne	r4, r1
 80078a6:	e7e9      	b.n	800787c <_malloc_r+0x64>
 80078a8:	460c      	mov	r4, r1
 80078aa:	6849      	ldr	r1, [r1, #4]
 80078ac:	e7ca      	b.n	8007844 <_malloc_r+0x2c>
 80078ae:	1cc4      	adds	r4, r0, #3
 80078b0:	f024 0403 	bic.w	r4, r4, #3
 80078b4:	42a0      	cmp	r0, r4
 80078b6:	d005      	beq.n	80078c4 <_malloc_r+0xac>
 80078b8:	1a21      	subs	r1, r4, r0
 80078ba:	4630      	mov	r0, r6
 80078bc:	f000 f9ce 	bl	8007c5c <_sbrk_r>
 80078c0:	3001      	adds	r0, #1
 80078c2:	d0cd      	beq.n	8007860 <_malloc_r+0x48>
 80078c4:	6025      	str	r5, [r4, #0]
 80078c6:	e7d9      	b.n	800787c <_malloc_r+0x64>
 80078c8:	bd70      	pop	{r4, r5, r6, pc}
 80078ca:	bf00      	nop
 80078cc:	200025f4 	.word	0x200025f4
 80078d0:	200025f8 	.word	0x200025f8

080078d4 <_realloc_r>:
 80078d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80078d6:	4607      	mov	r7, r0
 80078d8:	4614      	mov	r4, r2
 80078da:	460e      	mov	r6, r1
 80078dc:	b921      	cbnz	r1, 80078e8 <_realloc_r+0x14>
 80078de:	4611      	mov	r1, r2
 80078e0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80078e4:	f7fe bb72 	b.w	8005fcc <__wrap__malloc_r>
 80078e8:	b922      	cbnz	r2, 80078f4 <_realloc_r+0x20>
 80078ea:	f7fe fb73 	bl	8005fd4 <__wrap__free_r>
 80078ee:	4625      	mov	r5, r4
 80078f0:	4628      	mov	r0, r5
 80078f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80078f4:	f000 fa64 	bl	8007dc0 <_malloc_usable_size_r>
 80078f8:	4284      	cmp	r4, r0
 80078fa:	d90f      	bls.n	800791c <_realloc_r+0x48>
 80078fc:	4621      	mov	r1, r4
 80078fe:	4638      	mov	r0, r7
 8007900:	f7fe fb64 	bl	8005fcc <__wrap__malloc_r>
 8007904:	4605      	mov	r5, r0
 8007906:	2800      	cmp	r0, #0
 8007908:	d0f2      	beq.n	80078f0 <_realloc_r+0x1c>
 800790a:	4631      	mov	r1, r6
 800790c:	4622      	mov	r2, r4
 800790e:	f7ff ff07 	bl	8007720 <memcpy>
 8007912:	4631      	mov	r1, r6
 8007914:	4638      	mov	r0, r7
 8007916:	f7fe fb5d 	bl	8005fd4 <__wrap__free_r>
 800791a:	e7e9      	b.n	80078f0 <_realloc_r+0x1c>
 800791c:	4635      	mov	r5, r6
 800791e:	e7e7      	b.n	80078f0 <_realloc_r+0x1c>

08007920 <_printf_common>:
 8007920:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8007924:	4691      	mov	r9, r2
 8007926:	461f      	mov	r7, r3
 8007928:	688a      	ldr	r2, [r1, #8]
 800792a:	690b      	ldr	r3, [r1, #16]
 800792c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007930:	4293      	cmp	r3, r2
 8007932:	bfb8      	it	lt
 8007934:	4613      	movlt	r3, r2
 8007936:	f8c9 3000 	str.w	r3, [r9]
 800793a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800793e:	4606      	mov	r6, r0
 8007940:	460c      	mov	r4, r1
 8007942:	b112      	cbz	r2, 800794a <_printf_common+0x2a>
 8007944:	3301      	adds	r3, #1
 8007946:	f8c9 3000 	str.w	r3, [r9]
 800794a:	6823      	ldr	r3, [r4, #0]
 800794c:	0699      	lsls	r1, r3, #26
 800794e:	bf42      	ittt	mi
 8007950:	f8d9 3000 	ldrmi.w	r3, [r9]
 8007954:	3302      	addmi	r3, #2
 8007956:	f8c9 3000 	strmi.w	r3, [r9]
 800795a:	6825      	ldr	r5, [r4, #0]
 800795c:	f015 0506 	ands.w	r5, r5, #6
 8007960:	d107      	bne.n	8007972 <_printf_common+0x52>
 8007962:	f104 0a19 	add.w	r10, r4, #25
 8007966:	68e3      	ldr	r3, [r4, #12]
 8007968:	f8d9 2000 	ldr.w	r2, [r9]
 800796c:	1a9b      	subs	r3, r3, r2
 800796e:	429d      	cmp	r5, r3
 8007970:	db29      	blt.n	80079c6 <_printf_common+0xa6>
 8007972:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8007976:	6822      	ldr	r2, [r4, #0]
 8007978:	3300      	adds	r3, #0
 800797a:	bf18      	it	ne
 800797c:	2301      	movne	r3, #1
 800797e:	0692      	lsls	r2, r2, #26
 8007980:	d42e      	bmi.n	80079e0 <_printf_common+0xc0>
 8007982:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007986:	4639      	mov	r1, r7
 8007988:	4630      	mov	r0, r6
 800798a:	47c0      	blx	r8
 800798c:	3001      	adds	r0, #1
 800798e:	d021      	beq.n	80079d4 <_printf_common+0xb4>
 8007990:	6823      	ldr	r3, [r4, #0]
 8007992:	68e5      	ldr	r5, [r4, #12]
 8007994:	f8d9 2000 	ldr.w	r2, [r9]
 8007998:	f003 0306 	and.w	r3, r3, #6
 800799c:	2b04      	cmp	r3, #4
 800799e:	bf08      	it	eq
 80079a0:	1aad      	subeq	r5, r5, r2
 80079a2:	68a3      	ldr	r3, [r4, #8]
 80079a4:	6922      	ldr	r2, [r4, #16]
 80079a6:	bf0c      	ite	eq
 80079a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80079ac:	2500      	movne	r5, #0
 80079ae:	4293      	cmp	r3, r2
 80079b0:	bfc4      	itt	gt
 80079b2:	1a9b      	subgt	r3, r3, r2
 80079b4:	18ed      	addgt	r5, r5, r3
 80079b6:	f04f 0900 	mov.w	r9, #0
 80079ba:	341a      	adds	r4, #26
 80079bc:	454d      	cmp	r5, r9
 80079be:	d11b      	bne.n	80079f8 <_printf_common+0xd8>
 80079c0:	2000      	movs	r0, #0
 80079c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80079c6:	2301      	movs	r3, #1
 80079c8:	4652      	mov	r2, r10
 80079ca:	4639      	mov	r1, r7
 80079cc:	4630      	mov	r0, r6
 80079ce:	47c0      	blx	r8
 80079d0:	3001      	adds	r0, #1
 80079d2:	d103      	bne.n	80079dc <_printf_common+0xbc>
 80079d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80079d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80079dc:	3501      	adds	r5, #1
 80079de:	e7c2      	b.n	8007966 <_printf_common+0x46>
 80079e0:	18e1      	adds	r1, r4, r3
 80079e2:	1c5a      	adds	r2, r3, #1
 80079e4:	2030      	movs	r0, #48	; 0x30
 80079e6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80079ea:	4422      	add	r2, r4
 80079ec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80079f0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80079f4:	3302      	adds	r3, #2
 80079f6:	e7c4      	b.n	8007982 <_printf_common+0x62>
 80079f8:	2301      	movs	r3, #1
 80079fa:	4622      	mov	r2, r4
 80079fc:	4639      	mov	r1, r7
 80079fe:	4630      	mov	r0, r6
 8007a00:	47c0      	blx	r8
 8007a02:	3001      	adds	r0, #1
 8007a04:	d0e6      	beq.n	80079d4 <_printf_common+0xb4>
 8007a06:	f109 0901 	add.w	r9, r9, #1
 8007a0a:	e7d7      	b.n	80079bc <_printf_common+0x9c>

08007a0c <_printf_i>:
 8007a0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007a10:	4617      	mov	r7, r2
 8007a12:	7e0a      	ldrb	r2, [r1, #24]
 8007a14:	b085      	sub	sp, #20
 8007a16:	2a6e      	cmp	r2, #110	; 0x6e
 8007a18:	4698      	mov	r8, r3
 8007a1a:	4606      	mov	r6, r0
 8007a1c:	460c      	mov	r4, r1
 8007a1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007a20:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8007a24:	f000 80bc 	beq.w	8007ba0 <_printf_i+0x194>
 8007a28:	d81a      	bhi.n	8007a60 <_printf_i+0x54>
 8007a2a:	2a63      	cmp	r2, #99	; 0x63
 8007a2c:	d02e      	beq.n	8007a8c <_printf_i+0x80>
 8007a2e:	d80a      	bhi.n	8007a46 <_printf_i+0x3a>
 8007a30:	2a00      	cmp	r2, #0
 8007a32:	f000 80c8 	beq.w	8007bc6 <_printf_i+0x1ba>
 8007a36:	2a58      	cmp	r2, #88	; 0x58
 8007a38:	f000 808a 	beq.w	8007b50 <_printf_i+0x144>
 8007a3c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007a40:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8007a44:	e02a      	b.n	8007a9c <_printf_i+0x90>
 8007a46:	2a64      	cmp	r2, #100	; 0x64
 8007a48:	d001      	beq.n	8007a4e <_printf_i+0x42>
 8007a4a:	2a69      	cmp	r2, #105	; 0x69
 8007a4c:	d1f6      	bne.n	8007a3c <_printf_i+0x30>
 8007a4e:	6821      	ldr	r1, [r4, #0]
 8007a50:	681a      	ldr	r2, [r3, #0]
 8007a52:	f011 0f80 	tst.w	r1, #128	; 0x80
 8007a56:	d023      	beq.n	8007aa0 <_printf_i+0x94>
 8007a58:	1d11      	adds	r1, r2, #4
 8007a5a:	6019      	str	r1, [r3, #0]
 8007a5c:	6813      	ldr	r3, [r2, #0]
 8007a5e:	e027      	b.n	8007ab0 <_printf_i+0xa4>
 8007a60:	2a73      	cmp	r2, #115	; 0x73
 8007a62:	f000 80b4 	beq.w	8007bce <_printf_i+0x1c2>
 8007a66:	d808      	bhi.n	8007a7a <_printf_i+0x6e>
 8007a68:	2a6f      	cmp	r2, #111	; 0x6f
 8007a6a:	d02a      	beq.n	8007ac2 <_printf_i+0xb6>
 8007a6c:	2a70      	cmp	r2, #112	; 0x70
 8007a6e:	d1e5      	bne.n	8007a3c <_printf_i+0x30>
 8007a70:	680a      	ldr	r2, [r1, #0]
 8007a72:	f042 0220 	orr.w	r2, r2, #32
 8007a76:	600a      	str	r2, [r1, #0]
 8007a78:	e003      	b.n	8007a82 <_printf_i+0x76>
 8007a7a:	2a75      	cmp	r2, #117	; 0x75
 8007a7c:	d021      	beq.n	8007ac2 <_printf_i+0xb6>
 8007a7e:	2a78      	cmp	r2, #120	; 0x78
 8007a80:	d1dc      	bne.n	8007a3c <_printf_i+0x30>
 8007a82:	2278      	movs	r2, #120	; 0x78
 8007a84:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8007a88:	496e      	ldr	r1, [pc, #440]	; (8007c44 <_printf_i+0x238>)
 8007a8a:	e064      	b.n	8007b56 <_printf_i+0x14a>
 8007a8c:	681a      	ldr	r2, [r3, #0]
 8007a8e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8007a92:	1d11      	adds	r1, r2, #4
 8007a94:	6019      	str	r1, [r3, #0]
 8007a96:	6813      	ldr	r3, [r2, #0]
 8007a98:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007a9c:	2301      	movs	r3, #1
 8007a9e:	e0a3      	b.n	8007be8 <_printf_i+0x1dc>
 8007aa0:	f011 0f40 	tst.w	r1, #64	; 0x40
 8007aa4:	f102 0104 	add.w	r1, r2, #4
 8007aa8:	6019      	str	r1, [r3, #0]
 8007aaa:	d0d7      	beq.n	8007a5c <_printf_i+0x50>
 8007aac:	f9b2 3000 	ldrsh.w	r3, [r2]
 8007ab0:	2b00      	cmp	r3, #0
 8007ab2:	da03      	bge.n	8007abc <_printf_i+0xb0>
 8007ab4:	222d      	movs	r2, #45	; 0x2d
 8007ab6:	425b      	negs	r3, r3
 8007ab8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8007abc:	4962      	ldr	r1, [pc, #392]	; (8007c48 <_printf_i+0x23c>)
 8007abe:	220a      	movs	r2, #10
 8007ac0:	e017      	b.n	8007af2 <_printf_i+0xe6>
 8007ac2:	6820      	ldr	r0, [r4, #0]
 8007ac4:	6819      	ldr	r1, [r3, #0]
 8007ac6:	f010 0f80 	tst.w	r0, #128	; 0x80
 8007aca:	d003      	beq.n	8007ad4 <_printf_i+0xc8>
 8007acc:	1d08      	adds	r0, r1, #4
 8007ace:	6018      	str	r0, [r3, #0]
 8007ad0:	680b      	ldr	r3, [r1, #0]
 8007ad2:	e006      	b.n	8007ae2 <_printf_i+0xd6>
 8007ad4:	f010 0f40 	tst.w	r0, #64	; 0x40
 8007ad8:	f101 0004 	add.w	r0, r1, #4
 8007adc:	6018      	str	r0, [r3, #0]
 8007ade:	d0f7      	beq.n	8007ad0 <_printf_i+0xc4>
 8007ae0:	880b      	ldrh	r3, [r1, #0]
 8007ae2:	4959      	ldr	r1, [pc, #356]	; (8007c48 <_printf_i+0x23c>)
 8007ae4:	2a6f      	cmp	r2, #111	; 0x6f
 8007ae6:	bf14      	ite	ne
 8007ae8:	220a      	movne	r2, #10
 8007aea:	2208      	moveq	r2, #8
 8007aec:	2000      	movs	r0, #0
 8007aee:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8007af2:	6865      	ldr	r5, [r4, #4]
 8007af4:	60a5      	str	r5, [r4, #8]
 8007af6:	2d00      	cmp	r5, #0
 8007af8:	f2c0 809c 	blt.w	8007c34 <_printf_i+0x228>
 8007afc:	6820      	ldr	r0, [r4, #0]
 8007afe:	f020 0004 	bic.w	r0, r0, #4
 8007b02:	6020      	str	r0, [r4, #0]
 8007b04:	2b00      	cmp	r3, #0
 8007b06:	d13f      	bne.n	8007b88 <_printf_i+0x17c>
 8007b08:	2d00      	cmp	r5, #0
 8007b0a:	f040 8095 	bne.w	8007c38 <_printf_i+0x22c>
 8007b0e:	4675      	mov	r5, lr
 8007b10:	2a08      	cmp	r2, #8
 8007b12:	d10b      	bne.n	8007b2c <_printf_i+0x120>
 8007b14:	6823      	ldr	r3, [r4, #0]
 8007b16:	07da      	lsls	r2, r3, #31
 8007b18:	d508      	bpl.n	8007b2c <_printf_i+0x120>
 8007b1a:	6923      	ldr	r3, [r4, #16]
 8007b1c:	6862      	ldr	r2, [r4, #4]
 8007b1e:	429a      	cmp	r2, r3
 8007b20:	bfde      	ittt	le
 8007b22:	2330      	movle	r3, #48	; 0x30
 8007b24:	f805 3c01 	strble.w	r3, [r5, #-1]
 8007b28:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8007b2c:	ebae 0305 	sub.w	r3, lr, r5
 8007b30:	6123      	str	r3, [r4, #16]
 8007b32:	f8cd 8000 	str.w	r8, [sp]
 8007b36:	463b      	mov	r3, r7
 8007b38:	aa03      	add	r2, sp, #12
 8007b3a:	4621      	mov	r1, r4
 8007b3c:	4630      	mov	r0, r6
 8007b3e:	f7ff feef 	bl	8007920 <_printf_common>
 8007b42:	3001      	adds	r0, #1
 8007b44:	d155      	bne.n	8007bf2 <_printf_i+0x1e6>
 8007b46:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007b4a:	b005      	add	sp, #20
 8007b4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007b50:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8007b54:	493c      	ldr	r1, [pc, #240]	; (8007c48 <_printf_i+0x23c>)
 8007b56:	6822      	ldr	r2, [r4, #0]
 8007b58:	6818      	ldr	r0, [r3, #0]
 8007b5a:	f012 0f80 	tst.w	r2, #128	; 0x80
 8007b5e:	f100 0504 	add.w	r5, r0, #4
 8007b62:	601d      	str	r5, [r3, #0]
 8007b64:	d001      	beq.n	8007b6a <_printf_i+0x15e>
 8007b66:	6803      	ldr	r3, [r0, #0]
 8007b68:	e002      	b.n	8007b70 <_printf_i+0x164>
 8007b6a:	0655      	lsls	r5, r2, #25
 8007b6c:	d5fb      	bpl.n	8007b66 <_printf_i+0x15a>
 8007b6e:	8803      	ldrh	r3, [r0, #0]
 8007b70:	07d0      	lsls	r0, r2, #31
 8007b72:	bf44      	itt	mi
 8007b74:	f042 0220 	orrmi.w	r2, r2, #32
 8007b78:	6022      	strmi	r2, [r4, #0]
 8007b7a:	b91b      	cbnz	r3, 8007b84 <_printf_i+0x178>
 8007b7c:	6822      	ldr	r2, [r4, #0]
 8007b7e:	f022 0220 	bic.w	r2, r2, #32
 8007b82:	6022      	str	r2, [r4, #0]
 8007b84:	2210      	movs	r2, #16
 8007b86:	e7b1      	b.n	8007aec <_printf_i+0xe0>
 8007b88:	4675      	mov	r5, lr
 8007b8a:	fbb3 f0f2 	udiv	r0, r3, r2
 8007b8e:	fb02 3310 	mls	r3, r2, r0, r3
 8007b92:	5ccb      	ldrb	r3, [r1, r3]
 8007b94:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8007b98:	4603      	mov	r3, r0
 8007b9a:	2800      	cmp	r0, #0
 8007b9c:	d1f5      	bne.n	8007b8a <_printf_i+0x17e>
 8007b9e:	e7b7      	b.n	8007b10 <_printf_i+0x104>
 8007ba0:	6808      	ldr	r0, [r1, #0]
 8007ba2:	681a      	ldr	r2, [r3, #0]
 8007ba4:	6949      	ldr	r1, [r1, #20]
 8007ba6:	f010 0f80 	tst.w	r0, #128	; 0x80
 8007baa:	d004      	beq.n	8007bb6 <_printf_i+0x1aa>
 8007bac:	1d10      	adds	r0, r2, #4
 8007bae:	6018      	str	r0, [r3, #0]
 8007bb0:	6813      	ldr	r3, [r2, #0]
 8007bb2:	6019      	str	r1, [r3, #0]
 8007bb4:	e007      	b.n	8007bc6 <_printf_i+0x1ba>
 8007bb6:	f010 0f40 	tst.w	r0, #64	; 0x40
 8007bba:	f102 0004 	add.w	r0, r2, #4
 8007bbe:	6018      	str	r0, [r3, #0]
 8007bc0:	6813      	ldr	r3, [r2, #0]
 8007bc2:	d0f6      	beq.n	8007bb2 <_printf_i+0x1a6>
 8007bc4:	8019      	strh	r1, [r3, #0]
 8007bc6:	2300      	movs	r3, #0
 8007bc8:	6123      	str	r3, [r4, #16]
 8007bca:	4675      	mov	r5, lr
 8007bcc:	e7b1      	b.n	8007b32 <_printf_i+0x126>
 8007bce:	681a      	ldr	r2, [r3, #0]
 8007bd0:	1d11      	adds	r1, r2, #4
 8007bd2:	6019      	str	r1, [r3, #0]
 8007bd4:	6815      	ldr	r5, [r2, #0]
 8007bd6:	6862      	ldr	r2, [r4, #4]
 8007bd8:	2100      	movs	r1, #0
 8007bda:	4628      	mov	r0, r5
 8007bdc:	f7ff fd50 	bl	8007680 <memchr>
 8007be0:	b108      	cbz	r0, 8007be6 <_printf_i+0x1da>
 8007be2:	1b40      	subs	r0, r0, r5
 8007be4:	6060      	str	r0, [r4, #4]
 8007be6:	6863      	ldr	r3, [r4, #4]
 8007be8:	6123      	str	r3, [r4, #16]
 8007bea:	2300      	movs	r3, #0
 8007bec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007bf0:	e79f      	b.n	8007b32 <_printf_i+0x126>
 8007bf2:	6923      	ldr	r3, [r4, #16]
 8007bf4:	462a      	mov	r2, r5
 8007bf6:	4639      	mov	r1, r7
 8007bf8:	4630      	mov	r0, r6
 8007bfa:	47c0      	blx	r8
 8007bfc:	3001      	adds	r0, #1
 8007bfe:	d0a2      	beq.n	8007b46 <_printf_i+0x13a>
 8007c00:	6823      	ldr	r3, [r4, #0]
 8007c02:	079b      	lsls	r3, r3, #30
 8007c04:	d507      	bpl.n	8007c16 <_printf_i+0x20a>
 8007c06:	2500      	movs	r5, #0
 8007c08:	f104 0919 	add.w	r9, r4, #25
 8007c0c:	68e3      	ldr	r3, [r4, #12]
 8007c0e:	9a03      	ldr	r2, [sp, #12]
 8007c10:	1a9b      	subs	r3, r3, r2
 8007c12:	429d      	cmp	r5, r3
 8007c14:	db05      	blt.n	8007c22 <_printf_i+0x216>
 8007c16:	68e0      	ldr	r0, [r4, #12]
 8007c18:	9b03      	ldr	r3, [sp, #12]
 8007c1a:	4298      	cmp	r0, r3
 8007c1c:	bfb8      	it	lt
 8007c1e:	4618      	movlt	r0, r3
 8007c20:	e793      	b.n	8007b4a <_printf_i+0x13e>
 8007c22:	2301      	movs	r3, #1
 8007c24:	464a      	mov	r2, r9
 8007c26:	4639      	mov	r1, r7
 8007c28:	4630      	mov	r0, r6
 8007c2a:	47c0      	blx	r8
 8007c2c:	3001      	adds	r0, #1
 8007c2e:	d08a      	beq.n	8007b46 <_printf_i+0x13a>
 8007c30:	3501      	adds	r5, #1
 8007c32:	e7eb      	b.n	8007c0c <_printf_i+0x200>
 8007c34:	2b00      	cmp	r3, #0
 8007c36:	d1a7      	bne.n	8007b88 <_printf_i+0x17c>
 8007c38:	780b      	ldrb	r3, [r1, #0]
 8007c3a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007c3e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007c42:	e765      	b.n	8007b10 <_printf_i+0x104>
 8007c44:	080088f9 	.word	0x080088f9
 8007c48:	080088e8 	.word	0x080088e8

08007c4c <realloc>:
 8007c4c:	4b02      	ldr	r3, [pc, #8]	; (8007c58 <realloc+0xc>)
 8007c4e:	460a      	mov	r2, r1
 8007c50:	4601      	mov	r1, r0
 8007c52:	6818      	ldr	r0, [r3, #0]
 8007c54:	f7fe b9bc 	b.w	8005fd0 <__wrap__realloc_r>
 8007c58:	20000028 	.word	0x20000028

08007c5c <_sbrk_r>:
 8007c5c:	b538      	push	{r3, r4, r5, lr}
 8007c5e:	4c06      	ldr	r4, [pc, #24]	; (8007c78 <_sbrk_r+0x1c>)
 8007c60:	2300      	movs	r3, #0
 8007c62:	4605      	mov	r5, r0
 8007c64:	4608      	mov	r0, r1
 8007c66:	6023      	str	r3, [r4, #0]
 8007c68:	f7fe fa9c 	bl	80061a4 <_sbrk>
 8007c6c:	1c43      	adds	r3, r0, #1
 8007c6e:	d102      	bne.n	8007c76 <_sbrk_r+0x1a>
 8007c70:	6823      	ldr	r3, [r4, #0]
 8007c72:	b103      	cbz	r3, 8007c76 <_sbrk_r+0x1a>
 8007c74:	602b      	str	r3, [r5, #0]
 8007c76:	bd38      	pop	{r3, r4, r5, pc}
 8007c78:	200030c4 	.word	0x200030c4

08007c7c <__sread>:
 8007c7c:	b510      	push	{r4, lr}
 8007c7e:	460c      	mov	r4, r1
 8007c80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007c84:	f000 f9f4 	bl	8008070 <_read_r>
 8007c88:	2800      	cmp	r0, #0
 8007c8a:	bfab      	itete	ge
 8007c8c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8007c8e:	89a3      	ldrhlt	r3, [r4, #12]
 8007c90:	181b      	addge	r3, r3, r0
 8007c92:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8007c96:	bfac      	ite	ge
 8007c98:	6563      	strge	r3, [r4, #84]	; 0x54
 8007c9a:	81a3      	strhlt	r3, [r4, #12]
 8007c9c:	bd10      	pop	{r4, pc}

08007c9e <__swrite>:
 8007c9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007ca2:	461f      	mov	r7, r3
 8007ca4:	898b      	ldrh	r3, [r1, #12]
 8007ca6:	05db      	lsls	r3, r3, #23
 8007ca8:	4605      	mov	r5, r0
 8007caa:	460c      	mov	r4, r1
 8007cac:	4616      	mov	r6, r2
 8007cae:	d505      	bpl.n	8007cbc <__swrite+0x1e>
 8007cb0:	2302      	movs	r3, #2
 8007cb2:	2200      	movs	r2, #0
 8007cb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007cb8:	f000 f870 	bl	8007d9c <_lseek_r>
 8007cbc:	89a3      	ldrh	r3, [r4, #12]
 8007cbe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007cc2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007cc6:	81a3      	strh	r3, [r4, #12]
 8007cc8:	4632      	mov	r2, r6
 8007cca:	463b      	mov	r3, r7
 8007ccc:	4628      	mov	r0, r5
 8007cce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007cd2:	f000 b841 	b.w	8007d58 <_write_r>

08007cd6 <__sseek>:
 8007cd6:	b510      	push	{r4, lr}
 8007cd8:	460c      	mov	r4, r1
 8007cda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007cde:	f000 f85d 	bl	8007d9c <_lseek_r>
 8007ce2:	1c43      	adds	r3, r0, #1
 8007ce4:	89a3      	ldrh	r3, [r4, #12]
 8007ce6:	bf15      	itete	ne
 8007ce8:	6560      	strne	r0, [r4, #84]	; 0x54
 8007cea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8007cee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8007cf2:	81a3      	strheq	r3, [r4, #12]
 8007cf4:	bf18      	it	ne
 8007cf6:	81a3      	strhne	r3, [r4, #12]
 8007cf8:	bd10      	pop	{r4, pc}

08007cfa <__sclose>:
 8007cfa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007cfe:	f000 b83d 	b.w	8007d7c <_close_r>

08007d02 <strlen>:
 8007d02:	4603      	mov	r3, r0
 8007d04:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007d08:	2a00      	cmp	r2, #0
 8007d0a:	d1fb      	bne.n	8007d04 <strlen+0x2>
 8007d0c:	1a18      	subs	r0, r3, r0
 8007d0e:	3801      	subs	r0, #1
 8007d10:	4770      	bx	lr

08007d12 <_vsiprintf_r>:
 8007d12:	b510      	push	{r4, lr}
 8007d14:	b09a      	sub	sp, #104	; 0x68
 8007d16:	f44f 7402 	mov.w	r4, #520	; 0x208
 8007d1a:	9100      	str	r1, [sp, #0]
 8007d1c:	9104      	str	r1, [sp, #16]
 8007d1e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8007d22:	9102      	str	r1, [sp, #8]
 8007d24:	9105      	str	r1, [sp, #20]
 8007d26:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8007d2a:	f8ad 100e 	strh.w	r1, [sp, #14]
 8007d2e:	4669      	mov	r1, sp
 8007d30:	f8ad 400c 	strh.w	r4, [sp, #12]
 8007d34:	f000 f8a8 	bl	8007e88 <_svfiprintf_r>
 8007d38:	9b00      	ldr	r3, [sp, #0]
 8007d3a:	2200      	movs	r2, #0
 8007d3c:	701a      	strb	r2, [r3, #0]
 8007d3e:	b01a      	add	sp, #104	; 0x68
 8007d40:	bd10      	pop	{r4, pc}
	...

08007d44 <vsiprintf>:
 8007d44:	4613      	mov	r3, r2
 8007d46:	460a      	mov	r2, r1
 8007d48:	4601      	mov	r1, r0
 8007d4a:	4802      	ldr	r0, [pc, #8]	; (8007d54 <vsiprintf+0x10>)
 8007d4c:	6800      	ldr	r0, [r0, #0]
 8007d4e:	f7ff bfe0 	b.w	8007d12 <_vsiprintf_r>
 8007d52:	bf00      	nop
 8007d54:	20000028 	.word	0x20000028

08007d58 <_write_r>:
 8007d58:	b538      	push	{r3, r4, r5, lr}
 8007d5a:	4c07      	ldr	r4, [pc, #28]	; (8007d78 <_write_r+0x20>)
 8007d5c:	4605      	mov	r5, r0
 8007d5e:	4608      	mov	r0, r1
 8007d60:	4611      	mov	r1, r2
 8007d62:	2200      	movs	r2, #0
 8007d64:	6022      	str	r2, [r4, #0]
 8007d66:	461a      	mov	r2, r3
 8007d68:	f7fe f98a 	bl	8006080 <_write>
 8007d6c:	1c43      	adds	r3, r0, #1
 8007d6e:	d102      	bne.n	8007d76 <_write_r+0x1e>
 8007d70:	6823      	ldr	r3, [r4, #0]
 8007d72:	b103      	cbz	r3, 8007d76 <_write_r+0x1e>
 8007d74:	602b      	str	r3, [r5, #0]
 8007d76:	bd38      	pop	{r3, r4, r5, pc}
 8007d78:	200030c4 	.word	0x200030c4

08007d7c <_close_r>:
 8007d7c:	b538      	push	{r3, r4, r5, lr}
 8007d7e:	4c06      	ldr	r4, [pc, #24]	; (8007d98 <_close_r+0x1c>)
 8007d80:	2300      	movs	r3, #0
 8007d82:	4605      	mov	r5, r0
 8007d84:	4608      	mov	r0, r1
 8007d86:	6023      	str	r3, [r4, #0]
 8007d88:	f7fe f95a 	bl	8006040 <_close>
 8007d8c:	1c43      	adds	r3, r0, #1
 8007d8e:	d102      	bne.n	8007d96 <_close_r+0x1a>
 8007d90:	6823      	ldr	r3, [r4, #0]
 8007d92:	b103      	cbz	r3, 8007d96 <_close_r+0x1a>
 8007d94:	602b      	str	r3, [r5, #0]
 8007d96:	bd38      	pop	{r3, r4, r5, pc}
 8007d98:	200030c4 	.word	0x200030c4

08007d9c <_lseek_r>:
 8007d9c:	b538      	push	{r3, r4, r5, lr}
 8007d9e:	4c07      	ldr	r4, [pc, #28]	; (8007dbc <_lseek_r+0x20>)
 8007da0:	4605      	mov	r5, r0
 8007da2:	4608      	mov	r0, r1
 8007da4:	4611      	mov	r1, r2
 8007da6:	2200      	movs	r2, #0
 8007da8:	6022      	str	r2, [r4, #0]
 8007daa:	461a      	mov	r2, r3
 8007dac:	f7fe f9ce 	bl	800614c <_lseek>
 8007db0:	1c43      	adds	r3, r0, #1
 8007db2:	d102      	bne.n	8007dba <_lseek_r+0x1e>
 8007db4:	6823      	ldr	r3, [r4, #0]
 8007db6:	b103      	cbz	r3, 8007dba <_lseek_r+0x1e>
 8007db8:	602b      	str	r3, [r5, #0]
 8007dba:	bd38      	pop	{r3, r4, r5, pc}
 8007dbc:	200030c4 	.word	0x200030c4

08007dc0 <_malloc_usable_size_r>:
 8007dc0:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8007dc4:	2800      	cmp	r0, #0
 8007dc6:	f1a0 0004 	sub.w	r0, r0, #4
 8007dca:	bfbc      	itt	lt
 8007dcc:	580b      	ldrlt	r3, [r1, r0]
 8007dce:	18c0      	addlt	r0, r0, r3
 8007dd0:	4770      	bx	lr

08007dd2 <__ssputs_r>:
 8007dd2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8007dd6:	688e      	ldr	r6, [r1, #8]
 8007dd8:	429e      	cmp	r6, r3
 8007dda:	4682      	mov	r10, r0
 8007ddc:	460c      	mov	r4, r1
 8007dde:	4691      	mov	r9, r2
 8007de0:	4698      	mov	r8, r3
 8007de2:	d835      	bhi.n	8007e50 <__ssputs_r+0x7e>
 8007de4:	898a      	ldrh	r2, [r1, #12]
 8007de6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8007dea:	d031      	beq.n	8007e50 <__ssputs_r+0x7e>
 8007dec:	6825      	ldr	r5, [r4, #0]
 8007dee:	6909      	ldr	r1, [r1, #16]
 8007df0:	1a6f      	subs	r7, r5, r1
 8007df2:	6965      	ldr	r5, [r4, #20]
 8007df4:	2302      	movs	r3, #2
 8007df6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8007dfa:	fb95 f5f3 	sdiv	r5, r5, r3
 8007dfe:	f108 0301 	add.w	r3, r8, #1
 8007e02:	443b      	add	r3, r7
 8007e04:	429d      	cmp	r5, r3
 8007e06:	bf38      	it	cc
 8007e08:	461d      	movcc	r5, r3
 8007e0a:	0553      	lsls	r3, r2, #21
 8007e0c:	d531      	bpl.n	8007e72 <__ssputs_r+0xa0>
 8007e0e:	4629      	mov	r1, r5
 8007e10:	f7fe f8dc 	bl	8005fcc <__wrap__malloc_r>
 8007e14:	4606      	mov	r6, r0
 8007e16:	b950      	cbnz	r0, 8007e2e <__ssputs_r+0x5c>
 8007e18:	230c      	movs	r3, #12
 8007e1a:	f8ca 3000 	str.w	r3, [r10]
 8007e1e:	89a3      	ldrh	r3, [r4, #12]
 8007e20:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007e24:	81a3      	strh	r3, [r4, #12]
 8007e26:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007e2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8007e2e:	463a      	mov	r2, r7
 8007e30:	6921      	ldr	r1, [r4, #16]
 8007e32:	f7ff fc75 	bl	8007720 <memcpy>
 8007e36:	89a3      	ldrh	r3, [r4, #12]
 8007e38:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8007e3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007e40:	81a3      	strh	r3, [r4, #12]
 8007e42:	6126      	str	r6, [r4, #16]
 8007e44:	6165      	str	r5, [r4, #20]
 8007e46:	443e      	add	r6, r7
 8007e48:	1bed      	subs	r5, r5, r7
 8007e4a:	6026      	str	r6, [r4, #0]
 8007e4c:	60a5      	str	r5, [r4, #8]
 8007e4e:	4646      	mov	r6, r8
 8007e50:	4546      	cmp	r6, r8
 8007e52:	bf28      	it	cs
 8007e54:	4646      	movcs	r6, r8
 8007e56:	4632      	mov	r2, r6
 8007e58:	4649      	mov	r1, r9
 8007e5a:	6820      	ldr	r0, [r4, #0]
 8007e5c:	f7ff fc6b 	bl	8007736 <memmove>
 8007e60:	68a3      	ldr	r3, [r4, #8]
 8007e62:	1b9b      	subs	r3, r3, r6
 8007e64:	60a3      	str	r3, [r4, #8]
 8007e66:	6823      	ldr	r3, [r4, #0]
 8007e68:	441e      	add	r6, r3
 8007e6a:	6026      	str	r6, [r4, #0]
 8007e6c:	2000      	movs	r0, #0
 8007e6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8007e72:	462a      	mov	r2, r5
 8007e74:	f7fe f8ac 	bl	8005fd0 <__wrap__realloc_r>
 8007e78:	4606      	mov	r6, r0
 8007e7a:	2800      	cmp	r0, #0
 8007e7c:	d1e1      	bne.n	8007e42 <__ssputs_r+0x70>
 8007e7e:	6921      	ldr	r1, [r4, #16]
 8007e80:	4650      	mov	r0, r10
 8007e82:	f7fe f8a7 	bl	8005fd4 <__wrap__free_r>
 8007e86:	e7c7      	b.n	8007e18 <__ssputs_r+0x46>

08007e88 <_svfiprintf_r>:
 8007e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8007e8c:	b09d      	sub	sp, #116	; 0x74
 8007e8e:	4680      	mov	r8, r0
 8007e90:	9303      	str	r3, [sp, #12]
 8007e92:	898b      	ldrh	r3, [r1, #12]
 8007e94:	061c      	lsls	r4, r3, #24
 8007e96:	460d      	mov	r5, r1
 8007e98:	4616      	mov	r6, r2
 8007e9a:	d50f      	bpl.n	8007ebc <_svfiprintf_r+0x34>
 8007e9c:	690b      	ldr	r3, [r1, #16]
 8007e9e:	b96b      	cbnz	r3, 8007ebc <_svfiprintf_r+0x34>
 8007ea0:	2140      	movs	r1, #64	; 0x40
 8007ea2:	f7fe f893 	bl	8005fcc <__wrap__malloc_r>
 8007ea6:	6028      	str	r0, [r5, #0]
 8007ea8:	6128      	str	r0, [r5, #16]
 8007eaa:	b928      	cbnz	r0, 8007eb8 <_svfiprintf_r+0x30>
 8007eac:	230c      	movs	r3, #12
 8007eae:	f8c8 3000 	str.w	r3, [r8]
 8007eb2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007eb6:	e0c5      	b.n	8008044 <_svfiprintf_r+0x1bc>
 8007eb8:	2340      	movs	r3, #64	; 0x40
 8007eba:	616b      	str	r3, [r5, #20]
 8007ebc:	2300      	movs	r3, #0
 8007ebe:	9309      	str	r3, [sp, #36]	; 0x24
 8007ec0:	2320      	movs	r3, #32
 8007ec2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007ec6:	2330      	movs	r3, #48	; 0x30
 8007ec8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007ecc:	f04f 0b01 	mov.w	r11, #1
 8007ed0:	4637      	mov	r7, r6
 8007ed2:	463c      	mov	r4, r7
 8007ed4:	f814 3b01 	ldrb.w	r3, [r4], #1
 8007ed8:	2b00      	cmp	r3, #0
 8007eda:	d13c      	bne.n	8007f56 <_svfiprintf_r+0xce>
 8007edc:	ebb7 0a06 	subs.w	r10, r7, r6
 8007ee0:	d00b      	beq.n	8007efa <_svfiprintf_r+0x72>
 8007ee2:	4653      	mov	r3, r10
 8007ee4:	4632      	mov	r2, r6
 8007ee6:	4629      	mov	r1, r5
 8007ee8:	4640      	mov	r0, r8
 8007eea:	f7ff ff72 	bl	8007dd2 <__ssputs_r>
 8007eee:	3001      	adds	r0, #1
 8007ef0:	f000 80a3 	beq.w	800803a <_svfiprintf_r+0x1b2>
 8007ef4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007ef6:	4453      	add	r3, r10
 8007ef8:	9309      	str	r3, [sp, #36]	; 0x24
 8007efa:	783b      	ldrb	r3, [r7, #0]
 8007efc:	2b00      	cmp	r3, #0
 8007efe:	f000 809c 	beq.w	800803a <_svfiprintf_r+0x1b2>
 8007f02:	2300      	movs	r3, #0
 8007f04:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007f08:	9304      	str	r3, [sp, #16]
 8007f0a:	9307      	str	r3, [sp, #28]
 8007f0c:	9205      	str	r2, [sp, #20]
 8007f0e:	9306      	str	r3, [sp, #24]
 8007f10:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007f14:	931a      	str	r3, [sp, #104]	; 0x68
 8007f16:	2205      	movs	r2, #5
 8007f18:	7821      	ldrb	r1, [r4, #0]
 8007f1a:	4850      	ldr	r0, [pc, #320]	; (800805c <_svfiprintf_r+0x1d4>)
 8007f1c:	f7ff fbb0 	bl	8007680 <memchr>
 8007f20:	1c67      	adds	r7, r4, #1
 8007f22:	9b04      	ldr	r3, [sp, #16]
 8007f24:	b9d8      	cbnz	r0, 8007f5e <_svfiprintf_r+0xd6>
 8007f26:	06d9      	lsls	r1, r3, #27
 8007f28:	bf44      	itt	mi
 8007f2a:	2220      	movmi	r2, #32
 8007f2c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8007f30:	071a      	lsls	r2, r3, #28
 8007f32:	bf44      	itt	mi
 8007f34:	222b      	movmi	r2, #43	; 0x2b
 8007f36:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8007f3a:	7822      	ldrb	r2, [r4, #0]
 8007f3c:	2a2a      	cmp	r2, #42	; 0x2a
 8007f3e:	d016      	beq.n	8007f6e <_svfiprintf_r+0xe6>
 8007f40:	9a07      	ldr	r2, [sp, #28]
 8007f42:	2100      	movs	r1, #0
 8007f44:	200a      	movs	r0, #10
 8007f46:	4627      	mov	r7, r4
 8007f48:	3401      	adds	r4, #1
 8007f4a:	783b      	ldrb	r3, [r7, #0]
 8007f4c:	3b30      	subs	r3, #48	; 0x30
 8007f4e:	2b09      	cmp	r3, #9
 8007f50:	d951      	bls.n	8007ff6 <_svfiprintf_r+0x16e>
 8007f52:	b1c9      	cbz	r1, 8007f88 <_svfiprintf_r+0x100>
 8007f54:	e011      	b.n	8007f7a <_svfiprintf_r+0xf2>
 8007f56:	2b25      	cmp	r3, #37	; 0x25
 8007f58:	d0c0      	beq.n	8007edc <_svfiprintf_r+0x54>
 8007f5a:	4627      	mov	r7, r4
 8007f5c:	e7b9      	b.n	8007ed2 <_svfiprintf_r+0x4a>
 8007f5e:	4a3f      	ldr	r2, [pc, #252]	; (800805c <_svfiprintf_r+0x1d4>)
 8007f60:	1a80      	subs	r0, r0, r2
 8007f62:	fa0b f000 	lsl.w	r0, r11, r0
 8007f66:	4318      	orrs	r0, r3
 8007f68:	9004      	str	r0, [sp, #16]
 8007f6a:	463c      	mov	r4, r7
 8007f6c:	e7d3      	b.n	8007f16 <_svfiprintf_r+0x8e>
 8007f6e:	9a03      	ldr	r2, [sp, #12]
 8007f70:	1d11      	adds	r1, r2, #4
 8007f72:	6812      	ldr	r2, [r2, #0]
 8007f74:	9103      	str	r1, [sp, #12]
 8007f76:	2a00      	cmp	r2, #0
 8007f78:	db01      	blt.n	8007f7e <_svfiprintf_r+0xf6>
 8007f7a:	9207      	str	r2, [sp, #28]
 8007f7c:	e004      	b.n	8007f88 <_svfiprintf_r+0x100>
 8007f7e:	4252      	negs	r2, r2
 8007f80:	f043 0302 	orr.w	r3, r3, #2
 8007f84:	9207      	str	r2, [sp, #28]
 8007f86:	9304      	str	r3, [sp, #16]
 8007f88:	783b      	ldrb	r3, [r7, #0]
 8007f8a:	2b2e      	cmp	r3, #46	; 0x2e
 8007f8c:	d10e      	bne.n	8007fac <_svfiprintf_r+0x124>
 8007f8e:	787b      	ldrb	r3, [r7, #1]
 8007f90:	2b2a      	cmp	r3, #42	; 0x2a
 8007f92:	f107 0101 	add.w	r1, r7, #1
 8007f96:	d132      	bne.n	8007ffe <_svfiprintf_r+0x176>
 8007f98:	9b03      	ldr	r3, [sp, #12]
 8007f9a:	1d1a      	adds	r2, r3, #4
 8007f9c:	681b      	ldr	r3, [r3, #0]
 8007f9e:	9203      	str	r2, [sp, #12]
 8007fa0:	2b00      	cmp	r3, #0
 8007fa2:	bfb8      	it	lt
 8007fa4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8007fa8:	3702      	adds	r7, #2
 8007faa:	9305      	str	r3, [sp, #20]
 8007fac:	4c2c      	ldr	r4, [pc, #176]	; (8008060 <_svfiprintf_r+0x1d8>)
 8007fae:	7839      	ldrb	r1, [r7, #0]
 8007fb0:	2203      	movs	r2, #3
 8007fb2:	4620      	mov	r0, r4
 8007fb4:	f7ff fb64 	bl	8007680 <memchr>
 8007fb8:	b138      	cbz	r0, 8007fca <_svfiprintf_r+0x142>
 8007fba:	2340      	movs	r3, #64	; 0x40
 8007fbc:	1b00      	subs	r0, r0, r4
 8007fbe:	fa03 f000 	lsl.w	r0, r3, r0
 8007fc2:	9b04      	ldr	r3, [sp, #16]
 8007fc4:	4303      	orrs	r3, r0
 8007fc6:	9304      	str	r3, [sp, #16]
 8007fc8:	3701      	adds	r7, #1
 8007fca:	7839      	ldrb	r1, [r7, #0]
 8007fcc:	4825      	ldr	r0, [pc, #148]	; (8008064 <_svfiprintf_r+0x1dc>)
 8007fce:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007fd2:	2206      	movs	r2, #6
 8007fd4:	1c7e      	adds	r6, r7, #1
 8007fd6:	f7ff fb53 	bl	8007680 <memchr>
 8007fda:	2800      	cmp	r0, #0
 8007fdc:	d035      	beq.n	800804a <_svfiprintf_r+0x1c2>
 8007fde:	4b22      	ldr	r3, [pc, #136]	; (8008068 <_svfiprintf_r+0x1e0>)
 8007fe0:	b9fb      	cbnz	r3, 8008022 <_svfiprintf_r+0x19a>
 8007fe2:	9b03      	ldr	r3, [sp, #12]
 8007fe4:	3307      	adds	r3, #7
 8007fe6:	f023 0307 	bic.w	r3, r3, #7
 8007fea:	3308      	adds	r3, #8
 8007fec:	9303      	str	r3, [sp, #12]
 8007fee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007ff0:	444b      	add	r3, r9
 8007ff2:	9309      	str	r3, [sp, #36]	; 0x24
 8007ff4:	e76c      	b.n	8007ed0 <_svfiprintf_r+0x48>
 8007ff6:	fb00 3202 	mla	r2, r0, r2, r3
 8007ffa:	2101      	movs	r1, #1
 8007ffc:	e7a3      	b.n	8007f46 <_svfiprintf_r+0xbe>
 8007ffe:	2300      	movs	r3, #0
 8008000:	9305      	str	r3, [sp, #20]
 8008002:	4618      	mov	r0, r3
 8008004:	240a      	movs	r4, #10
 8008006:	460f      	mov	r7, r1
 8008008:	3101      	adds	r1, #1
 800800a:	783a      	ldrb	r2, [r7, #0]
 800800c:	3a30      	subs	r2, #48	; 0x30
 800800e:	2a09      	cmp	r2, #9
 8008010:	d903      	bls.n	800801a <_svfiprintf_r+0x192>
 8008012:	2b00      	cmp	r3, #0
 8008014:	d0ca      	beq.n	8007fac <_svfiprintf_r+0x124>
 8008016:	9005      	str	r0, [sp, #20]
 8008018:	e7c8      	b.n	8007fac <_svfiprintf_r+0x124>
 800801a:	fb04 2000 	mla	r0, r4, r0, r2
 800801e:	2301      	movs	r3, #1
 8008020:	e7f1      	b.n	8008006 <_svfiprintf_r+0x17e>
 8008022:	ab03      	add	r3, sp, #12
 8008024:	9300      	str	r3, [sp, #0]
 8008026:	462a      	mov	r2, r5
 8008028:	4b10      	ldr	r3, [pc, #64]	; (800806c <_svfiprintf_r+0x1e4>)
 800802a:	a904      	add	r1, sp, #16
 800802c:	4640      	mov	r0, r8
 800802e:	f3af 8000 	nop.w
 8008032:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8008036:	4681      	mov	r9, r0
 8008038:	d1d9      	bne.n	8007fee <_svfiprintf_r+0x166>
 800803a:	89ab      	ldrh	r3, [r5, #12]
 800803c:	065b      	lsls	r3, r3, #25
 800803e:	f53f af38 	bmi.w	8007eb2 <_svfiprintf_r+0x2a>
 8008042:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008044:	b01d      	add	sp, #116	; 0x74
 8008046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800804a:	ab03      	add	r3, sp, #12
 800804c:	9300      	str	r3, [sp, #0]
 800804e:	462a      	mov	r2, r5
 8008050:	4b06      	ldr	r3, [pc, #24]	; (800806c <_svfiprintf_r+0x1e4>)
 8008052:	a904      	add	r1, sp, #16
 8008054:	4640      	mov	r0, r8
 8008056:	f7ff fcd9 	bl	8007a0c <_printf_i>
 800805a:	e7ea      	b.n	8008032 <_svfiprintf_r+0x1aa>
 800805c:	0800890a 	.word	0x0800890a
 8008060:	08008910 	.word	0x08008910
 8008064:	08008914 	.word	0x08008914
 8008068:	00000000 	.word	0x00000000
 800806c:	08007dd3 	.word	0x08007dd3

08008070 <_read_r>:
 8008070:	b538      	push	{r3, r4, r5, lr}
 8008072:	4c07      	ldr	r4, [pc, #28]	; (8008090 <_read_r+0x20>)
 8008074:	4605      	mov	r5, r0
 8008076:	4608      	mov	r0, r1
 8008078:	4611      	mov	r1, r2
 800807a:	2200      	movs	r2, #0
 800807c:	6022      	str	r2, [r4, #0]
 800807e:	461a      	mov	r2, r3
 8008080:	f7fe f834 	bl	80060ec <_read>
 8008084:	1c43      	adds	r3, r0, #1
 8008086:	d102      	bne.n	800808e <_read_r+0x1e>
 8008088:	6823      	ldr	r3, [r4, #0]
 800808a:	b103      	cbz	r3, 800808e <_read_r+0x1e>
 800808c:	602b      	str	r3, [r5, #0]
 800808e:	bd38      	pop	{r3, r4, r5, pc}
 8008090:	200030c4 	.word	0x200030c4

08008094 <_init>:
 8008094:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008096:	bf00      	nop
 8008098:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800809a:	bc08      	pop	{r3}
 800809c:	469e      	mov	lr, r3
 800809e:	4770      	bx	lr

080080a0 <_fini>:
 80080a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80080a2:	bf00      	nop
 80080a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80080a6:	bc08      	pop	{r3}
 80080a8:	469e      	mov	lr, r3
 80080aa:	4770      	bx	lr

080080ac <vtable for std_msgs::Time>:
	...
 80080b4:	01f9 0800 0221 0800 025d 0800 0265 0800     ....!...]...e...

080080c4 <vtable for rosserial_msgs::TopicInfo>:
	...
 80080cc:	0755 0800 0907 0800 026d 0800 0275 0800     U.......m...u...

080080dc <vtable for rosserial_msgs::Log>:
	...
 80080e4:	08bd 0800 0aeb 0800 027d 0800 0285 0800     ........}.......

080080f4 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 80080fc:	07db 0800 09bd 0800 028d 0800 0295 0800     ................

0800810c <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8008114:	1021 0800 0e01 0800 02ad 0800               !...........

08008120 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8008120:	029f 0800 02a3 0800 02ab 0800 6639 6530     ............9f0e
 8008130:	3839 6462 3661 3935 3138 3839 6436 6664     98bda65981986ddf
 8008140:	3335 6661 3761 3461 6530 3934 3100 6131     53afa7a40e49.11a
 8008150:	6462 3337 6331 3532 3339 3233 3136 6463     bd731c25933261cd
 8008160:	3136 3338 6462 3231 3664 3932 0035 6f72     6183bd12d6295.ro
 8008170:	7373 7265 6169 5f6c 736d 7367 4c2f 676f     sserial_msgs/Log
 8008180:	3000 6461 3135 3866 6638 3463 3834 3239     .0ad51f88fc44892
 8008190:	3866 3163 3630 3438 3730 3637 3634 3030     f8c1068407764600
 80081a0:	0035 6f72 7373 7265 6169 5f6c 736d 7367     5.rosserial_msgs
 80081b0:	542f 706f 6369 6e49 6f66 7200                    /TopicInfo.

080081bb <rosserial_msgs::REQUESTPARAM>:
 80081bb:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 80081cb:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 80081db:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 80081eb:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 80081fb:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 800820b:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 800821b:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 800822b:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 800823b:	6d69 0065 0000                                   ime..

08008240 <vtable for std_msgs::String>:
	...
 8008248:	1165 0800 1189 0800 10f9 0800 1101 0800     e...............

08008258 <vtable for std_msgs::UInt32>:
	...
 8008260:	1109 0800 111f 0800 1141 0800 1149 0800     ........A...I...

08008270 <vtable for ros::Subscriber<std_msgs::String, void>>:
	...
 8008278:	11b9 0800 1151 0800 1155 0800 115d 0800     ....Q...U...]...
 8008288:	7563 5f72 6576 006c 6170 5f72 6176 006c     cur_vel.par_val.
 8008298:	3939 6332 3865 3161 3836 6337 6365 6338     992ce8a1687cec8c
 80082a8:	6238 3864 3338 6365 3337 6163 3134 3164     8bd883ec73ca41d1
 80082b8:	7300 6474 6d5f 6773 2f73 7453 6972 676e     .std_msgs/String
 80082c8:	3300 3430 3361 3439 3934 3835 6338 6637     .304a39449588c7f
 80082d8:	6338 3265 6664 6536 3038 3130 3563 6366     8ce2df6e8001c5fc
 80082e8:	0065 7473 5f64 736d 7367 552f 6e49 3374     e.std_msgs/UInt3
 80082f8:	0032 0000                                   2...

080082fc <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 80082fc:	16bf 0800 16b1 0800 16bd 0800 682f 6d6f     ............/hom
 800830c:	2f65 6974 6f6d 612f 616e 6f63 646e 3361     e/timo/anaconda3
 800831c:	652f 766e 2f73 4f52 2f53 6f72 2f73 696c     /envs/ROS/ros/li
 800832c:	2f62 6f72 5f73 696c 2f62 7542 6666 7265     b/ros_lib/Buffer
 800833c:	6465 6553 6972 6c61 422f 6675 6566 6572     edSerial/Buffere
 800834c:	5364 7265 6169 2e6c 7063 0070 7325 2520     dSerial.cpp.%s %
 800835c:	2064 7562 6666 7265 6f20 6576 7772 6972     d buffer overwri
 800836c:	6574 2820 616d 5f78 7562 5f66 6973 657a     te (max_buf_size
 800837c:	203a 6425 6520 6378 6565 6564 3a64 2520     : %d exceeded: %
 800838c:	2964 0d21 000a 0000                         d)!.....

08008394 <vtable for BufferedSerial>:
	...
 800839c:	5c85 0800 5c85 0800 1715 0800 176d 0800     .\...\......m...
 80083ac:	1681 0800 168d 0800 1691 0800 18d7 0800     ................
 80083bc:	18ef 0800 1969 0800 192d 0800               ....i...-...

080083c8 <us_data>:
 80083c8:	83d0 0800 0e98 2000                         ....... 

080083d0 <us_interface>:
 80083d0:	3d35 0800 3d55 0800 3d85 0800 3d9d 0800     5=..U=...=...=..
 80083e0:	3d6d 0800 6970 6d6e 7061 6e20 746f 6620     m=..pinmap not f
 80083f0:	756f 646e 6620 726f 6620 6e75 7463 6f69     ound for functio
 8008400:	006e 6970 6d6e 7061 6d20 7369 6d2d 7461     n.pinmap mis-mat
 8008410:	6863 7000 6e69 616d 2070 6f6e 2074 6f66     ch.pinmap not fo
 8008420:	6e75 2064 6f66 2072 6570 6972 6870 7265     und for peripher
 8008430:	6c61 6300 756f 646c 6e20 746f 7020 6e69     al.could not pin
 8008440:	756f 0074                                   out.

08008444 <mp_stk_size>:
 8008444:	0210 0000                                   ....

08008448 <mp_tcb_size>:
 8008448:	03cc                                        ..

0800844a <mp_tmr_size>:
	...

0800844c <os_clockrate>:
 800844c:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 800845c:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 800846c:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08008479 <os_fifo_size>:
 8008479:	0110                                             .

0800847a <os_flags>:
 800847a:	0001                                        ..

0800847c <os_maxtaskrun>:
 800847c:	000f 0000                                   ....

08008480 <os_messageQ_def_osTimerMessageQ>:
 8008480:	0004 0000 0ebc 2000                         ....... 

08008488 <os_mutex_def_env_mutex>:
 8008488:	0edc 2000                                   ... 

0800848c <os_mutex_def_malloc_mutex>:
 800848c:	0eec 2000                                   ... 

08008490 <os_mutex_def_singleton_mutex>:
 8008490:	0efc 2000                                   ... 

08008494 <os_rrobin>:
 8008494:	0005 0001                                   ....

08008498 <os_stackinfo>:
 8008498:	0200 0100                                   ....

0800849c <os_thread_def_osTimerThread>:
 800849c:	30b5 0800 0002 0000 0001 0000 0320 0000     .0.......... ...
 80084ac:	2690 2000                                   .&. 

080084b0 <os_trv>:
 80084b0:	387f 0001                                   .8..

080084b4 <os_mutex_def_osThreadMutex>:
 80084b4:	1f10 2000 6e49 6574 7272 7075 4974 206e     ... InterruptIn 
 80084c4:	7265 6f72 3a72 7020 6e69 6e20 746f 7320     error: pin not s
 80084d4:	7075 6f70 7472 6465 0a2e 5000 6e69 616d     upported...Pinma
 80084e4:	2070 7265 6f72 3a72 7720 6f72 676e 7020     p error: wrong p
 80084f4:	726f 2074 756e 626d 7265 002e 6e55 6e6b     ort number..Unkn
 8008504:	776f 206e 5750 204d 6e69 7473 6e61 6563     own PWM instance
 8008514:	4300 6e61 6f6e 2074 6e69 7469 6169 696c     .Cannot initiali
 8008524:	657a 5020 4d57 000a                         ze PWM..

0800852c <ll_pin_defines>:
 800852c:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 800853c:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 800854c:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 800855c:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......

0800856c <pwm_apb_map_table>:
 800856c:	0000 4000 0000 0000 2c00 4001 0001 0000     ...@.....,.@....
 800857c:	4000 4001 0001 0000 4400 4001 0001 0000     .@.@.....D.@....
 800858c:	0000 0000 0002 0000 6143 6e6e 746f 6920     ........Cannot i
 800859c:	696e 6974 6c61 7a69 2065 4155 5452 000a     nitialize UART..

080085ac <pin_lines_desc>:
	...
 80085b4:	0006 0000 0000 0000 0001 0000 0007 0000     ................
 80085c4:	0000 0000 0002 0000 0008 0000 0000 0000     ................
 80085d4:	0003 0000 0009 0000 0000 0000 0004 0000     ................
 80085e4:	000a 0000 0000 0000 0005 0000 0017 0000     ................
 80085f4:	0001 0000 0005 0000 0017 0000 0002 0000     ................
 8008604:	0005 0000 0017 0000 0003 0000 0005 0000     ................
 8008614:	0017 0000 0004 0000 0005 0000 0017 0000     ................
 8008624:	0000 0000 0006 0000 0028 0000 0001 0000     ........(.......
 8008634:	0006 0000 0028 0000 0002 0000 0006 0000     ....(...........
 8008644:	0028 0000 0003 0000 0006 0000 0028 0000     (...........(...
 8008654:	0004 0000 0006 0000 0028 0000 0005 0000     ........(.......
 8008664:	0006 0000 0028 0000                         ....(...

0800866c <AHBPrescTable>:
	...
 8008674:	0201 0403 0706 0908                         ........

0800867c <APBPrescTable>:
 800867c:	0000 0000 0201 0403                         ........

08008684 <MSIRangeTable>:
 8008684:	86a0 0001 0d40 0003 1a80 0006 3500 000c     ....@........5..
 8008694:	4240 000f 8480 001e 0900 003d 1200 007a     @B........=...z.
 80086a4:	2400 00f4 3600 016e 4800 01e8 6c00 02dc     .$...6n..H...l..

080086b4 <PinMap_PWM>:
 80086b4:	0001 0000 4000 4001 1e12 0002 0003 0000     .....@.@........
 80086c4:	4000 4001 2e12 0000 0006 0000 4400 4001     .@.@.........D.@
 80086d4:	1e12 0000 0007 0000 2c00 4001 1112 0002     .........,.@....
 80086e4:	0008 0000 2c00 4001 1112 0000 0009 0000     .....,.@........
 80086f4:	2c00 4001 2112 0000 000a 0000 2c00 4001     .,.@.!.......,.@
 8008704:	3112 0000 000b 0000 2c00 4001 4112 0000     .1.......,.@.A..
 8008714:	0010 0000 2c00 4001 2112 0002 0011 0000     .....,.@.!......
 8008724:	2c00 4001 3112 0002 0016 0000 4400 4001     .,.@.1.......D.@
 8008734:	1e12 0002 ffff 0000 ffff ffff 0000 0000     ................

08008744 <PinMap_UART_RX>:
 8008744:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8008754:	3800 4001 0712 0000 000f 0000 4400 4000     .8.@.........D.@
 8008764:	0312 0000 0017 0000 3800 4001 0712 0000     .........8.@....
 8008774:	ffff 0000 ffff ffff 0000 0000               ............

08008780 <PinMap_UART_TX>:
 8008780:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 8008790:	3800 4001 0712 0000 0016 0000 3800 4001     .8.@.........8.@
 80087a0:	0712 0000 ffff 0000 ffff ffff 0000 0000     ................

080087b0 <CSWTCH.38>:
 80087b0:	0401 0802                                   ....

080087b4 <CSWTCH.39>:
 80087b4:	1000 1010 1004 1010 1002 1010 0008 0000     ................

080087c4 <vtable for mbed::Ticker>:
	...
 80087cc:	0585 0800 05a9 0800 5ac1 0800               .........Z..

080087d8 <vtable for mbed::SerialBase>:
	...
 80087e0:	5b59 0800 5b5b 0800 16d9 0800 1701 0800     Y[..[[..........

080087f0 <vtable for mbed::RawSerial>:
	...
 80087f8:	5c85 0800 5c85 0800 5c89 0800 5c9d 0800     .\...\...\...\..

08008808 <vtable for mbed::InterruptIn>:
	...
 8008810:	5cc9 0800 5cf1 0800                         .\...\..

08008818 <vtable for mbed::TimerEvent>:
	...
 8008828:	165d 0800 704f 7265 7461 726f 6e20 7765     ]...Operator new
 8008838:	5d5b 6f20 7475 6f20 2066 656d 6f6d 7972     [] out of memory
 8008848:	0a0d 0000                                   ....

0800884c <vtable for rtos::Thread>:
	...
 8008854:	62f9 0800 6335 0800 7245 6f72 2072 6e69     .b..5c..Error in
 8008864:	7469 6169 696c 697a 676e 7420 6568 6d20     itializing the m
 8008874:	7475 7865 6f20 6a62 6365 0a74 0000 0000     utex object.....

08008884 <__sf_fake_stderr>:
	...

080088a4 <__sf_fake_stdin>:
	...

080088c4 <__sf_fake_stdout>:
	...

080088e4 <_global_impure_ptr>:
 80088e4:	002c 2000 3130 3332 3534 3736 3938 4241     ,.. 0123456789AB
 80088f4:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8008904:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8008914:	6665 4567 4746 0000                         efgEFG..

0800891c <__EH_FRAME_BEGIN__>:
 800891c:	0000 0000                                   ....
